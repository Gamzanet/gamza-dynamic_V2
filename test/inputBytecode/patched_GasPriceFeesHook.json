{
    "abi": [
        {
            "type": "constructor",
            "inputs": [
                {
                    "name": "_poolManager",
                    "type": "address",
                    "internalType": "contract IPoolManager"
                }
            ],
            "stateMutability": "nonpayable"
        },
        {
            "type": "function",
            "name": "BASE_FEE",
            "inputs": [],
            "outputs": [
                {
                    "name": "",
                    "type": "uint24",
                    "internalType": "uint24"
                }
            ],
            "stateMutability": "view"
        },
        {
            "type": "function",
            "name": "afterAddLiquidity",
            "inputs": [
                {
                    "name": "",
                    "type": "address",
                    "internalType": "address"
                },
                {
                    "name": "",
                    "type": "tuple",
                    "internalType": "struct PoolKey",
                    "components": [
                        {
                            "name": "currency0",
                            "type": "address",
                            "internalType": "Currency"
                        },
                        {
                            "name": "currency1",
                            "type": "address",
                            "internalType": "Currency"
                        },
                        {
                            "name": "fee",
                            "type": "uint24",
                            "internalType": "uint24"
                        },
                        {
                            "name": "tickSpacing",
                            "type": "int24",
                            "internalType": "int24"
                        },
                        {
                            "name": "hooks",
                            "type": "address",
                            "internalType": "contract IHooks"
                        }
                    ]
                },
                {
                    "name": "",
                    "type": "tuple",
                    "internalType": "struct IPoolManager.ModifyLiquidityParams",
                    "components": [
                        {
                            "name": "tickLower",
                            "type": "int24",
                            "internalType": "int24"
                        },
                        {
                            "name": "tickUpper",
                            "type": "int24",
                            "internalType": "int24"
                        },
                        {
                            "name": "liquidityDelta",
                            "type": "int256",
                            "internalType": "int256"
                        },
                        {
                            "name": "salt",
                            "type": "bytes32",
                            "internalType": "bytes32"
                        }
                    ]
                },
                {
                    "name": "",
                    "type": "int256",
                    "internalType": "BalanceDelta"
                },
                {
                    "name": "",
                    "type": "int256",
                    "internalType": "BalanceDelta"
                },
                {
                    "name": "",
                    "type": "bytes",
                    "internalType": "bytes"
                }
            ],
            "outputs": [
                {
                    "name": "",
                    "type": "bytes4",
                    "internalType": "bytes4"
                },
                {
                    "name": "",
                    "type": "int256",
                    "internalType": "BalanceDelta"
                }
            ],
            "stateMutability": "nonpayable"
        },
        {
            "type": "function",
            "name": "afterDonate",
            "inputs": [
                {
                    "name": "",
                    "type": "address",
                    "internalType": "address"
                },
                {
                    "name": "",
                    "type": "tuple",
                    "internalType": "struct PoolKey",
                    "components": [
                        {
                            "name": "currency0",
                            "type": "address",
                            "internalType": "Currency"
                        },
                        {
                            "name": "currency1",
                            "type": "address",
                            "internalType": "Currency"
                        },
                        {
                            "name": "fee",
                            "type": "uint24",
                            "internalType": "uint24"
                        },
                        {
                            "name": "tickSpacing",
                            "type": "int24",
                            "internalType": "int24"
                        },
                        {
                            "name": "hooks",
                            "type": "address",
                            "internalType": "contract IHooks"
                        }
                    ]
                },
                {
                    "name": "",
                    "type": "uint256",
                    "internalType": "uint256"
                },
                {
                    "name": "",
                    "type": "uint256",
                    "internalType": "uint256"
                },
                {
                    "name": "",
                    "type": "bytes",
                    "internalType": "bytes"
                }
            ],
            "outputs": [
                {
                    "name": "",
                    "type": "bytes4",
                    "internalType": "bytes4"
                }
            ],
            "stateMutability": "nonpayable"
        },
        {
            "type": "function",
            "name": "afterInitialize",
            "inputs": [
                {
                    "name": "",
                    "type": "address",
                    "internalType": "address"
                },
                {
                    "name": "",
                    "type": "tuple",
                    "internalType": "struct PoolKey",
                    "components": [
                        {
                            "name": "currency0",
                            "type": "address",
                            "internalType": "Currency"
                        },
                        {
                            "name": "currency1",
                            "type": "address",
                            "internalType": "Currency"
                        },
                        {
                            "name": "fee",
                            "type": "uint24",
                            "internalType": "uint24"
                        },
                        {
                            "name": "tickSpacing",
                            "type": "int24",
                            "internalType": "int24"
                        },
                        {
                            "name": "hooks",
                            "type": "address",
                            "internalType": "contract IHooks"
                        }
                    ]
                },
                {
                    "name": "",
                    "type": "uint160",
                    "internalType": "uint160"
                },
                {
                    "name": "",
                    "type": "int24",
                    "internalType": "int24"
                }
            ],
            "outputs": [
                {
                    "name": "",
                    "type": "bytes4",
                    "internalType": "bytes4"
                }
            ],
            "stateMutability": "nonpayable"
        },
        {
            "type": "function",
            "name": "afterRemoveLiquidity",
            "inputs": [
                {
                    "name": "",
                    "type": "address",
                    "internalType": "address"
                },
                {
                    "name": "",
                    "type": "tuple",
                    "internalType": "struct PoolKey",
                    "components": [
                        {
                            "name": "currency0",
                            "type": "address",
                            "internalType": "Currency"
                        },
                        {
                            "name": "currency1",
                            "type": "address",
                            "internalType": "Currency"
                        },
                        {
                            "name": "fee",
                            "type": "uint24",
                            "internalType": "uint24"
                        },
                        {
                            "name": "tickSpacing",
                            "type": "int24",
                            "internalType": "int24"
                        },
                        {
                            "name": "hooks",
                            "type": "address",
                            "internalType": "contract IHooks"
                        }
                    ]
                },
                {
                    "name": "",
                    "type": "tuple",
                    "internalType": "struct IPoolManager.ModifyLiquidityParams",
                    "components": [
                        {
                            "name": "tickLower",
                            "type": "int24",
                            "internalType": "int24"
                        },
                        {
                            "name": "tickUpper",
                            "type": "int24",
                            "internalType": "int24"
                        },
                        {
                            "name": "liquidityDelta",
                            "type": "int256",
                            "internalType": "int256"
                        },
                        {
                            "name": "salt",
                            "type": "bytes32",
                            "internalType": "bytes32"
                        }
                    ]
                },
                {
                    "name": "",
                    "type": "int256",
                    "internalType": "BalanceDelta"
                },
                {
                    "name": "",
                    "type": "int256",
                    "internalType": "BalanceDelta"
                },
                {
                    "name": "",
                    "type": "bytes",
                    "internalType": "bytes"
                }
            ],
            "outputs": [
                {
                    "name": "",
                    "type": "bytes4",
                    "internalType": "bytes4"
                },
                {
                    "name": "",
                    "type": "int256",
                    "internalType": "BalanceDelta"
                }
            ],
            "stateMutability": "nonpayable"
        },
        {
            "type": "function",
            "name": "afterSwap",
            "inputs": [
                {
                    "name": "",
                    "type": "address",
                    "internalType": "address"
                },
                {
                    "name": "",
                    "type": "tuple",
                    "internalType": "struct PoolKey",
                    "components": [
                        {
                            "name": "currency0",
                            "type": "address",
                            "internalType": "Currency"
                        },
                        {
                            "name": "currency1",
                            "type": "address",
                            "internalType": "Currency"
                        },
                        {
                            "name": "fee",
                            "type": "uint24",
                            "internalType": "uint24"
                        },
                        {
                            "name": "tickSpacing",
                            "type": "int24",
                            "internalType": "int24"
                        },
                        {
                            "name": "hooks",
                            "type": "address",
                            "internalType": "contract IHooks"
                        }
                    ]
                },
                {
                    "name": "",
                    "type": "tuple",
                    "internalType": "struct IPoolManager.SwapParams",
                    "components": [
                        {
                            "name": "zeroForOne",
                            "type": "bool",
                            "internalType": "bool"
                        },
                        {
                            "name": "amountSpecified",
                            "type": "int256",
                            "internalType": "int256"
                        },
                        {
                            "name": "sqrtPriceLimitX96",
                            "type": "uint160",
                            "internalType": "uint160"
                        }
                    ]
                },
                {
                    "name": "",
                    "type": "int256",
                    "internalType": "BalanceDelta"
                },
                {
                    "name": "",
                    "type": "bytes",
                    "internalType": "bytes"
                }
            ],
            "outputs": [
                {
                    "name": "",
                    "type": "bytes4",
                    "internalType": "bytes4"
                },
                {
                    "name": "",
                    "type": "int128",
                    "internalType": "int128"
                }
            ],
            "stateMutability": "nonpayable"
        },
        {
            "type": "function",
            "name": "beforeAddLiquidity",
            "inputs": [
                {
                    "name": "",
                    "type": "address",
                    "internalType": "address"
                },
                {
                    "name": "",
                    "type": "tuple",
                    "internalType": "struct PoolKey",
                    "components": [
                        {
                            "name": "currency0",
                            "type": "address",
                            "internalType": "Currency"
                        },
                        {
                            "name": "currency1",
                            "type": "address",
                            "internalType": "Currency"
                        },
                        {
                            "name": "fee",
                            "type": "uint24",
                            "internalType": "uint24"
                        },
                        {
                            "name": "tickSpacing",
                            "type": "int24",
                            "internalType": "int24"
                        },
                        {
                            "name": "hooks",
                            "type": "address",
                            "internalType": "contract IHooks"
                        }
                    ]
                },
                {
                    "name": "",
                    "type": "tuple",
                    "internalType": "struct IPoolManager.ModifyLiquidityParams",
                    "components": [
                        {
                            "name": "tickLower",
                            "type": "int24",
                            "internalType": "int24"
                        },
                        {
                            "name": "tickUpper",
                            "type": "int24",
                            "internalType": "int24"
                        },
                        {
                            "name": "liquidityDelta",
                            "type": "int256",
                            "internalType": "int256"
                        },
                        {
                            "name": "salt",
                            "type": "bytes32",
                            "internalType": "bytes32"
                        }
                    ]
                },
                {
                    "name": "",
                    "type": "bytes",
                    "internalType": "bytes"
                }
            ],
            "outputs": [
                {
                    "name": "",
                    "type": "bytes4",
                    "internalType": "bytes4"
                }
            ],
            "stateMutability": "nonpayable"
        },
        {
            "type": "function",
            "name": "beforeDonate",
            "inputs": [
                {
                    "name": "",
                    "type": "address",
                    "internalType": "address"
                },
                {
                    "name": "",
                    "type": "tuple",
                    "internalType": "struct PoolKey",
                    "components": [
                        {
                            "name": "currency0",
                            "type": "address",
                            "internalType": "Currency"
                        },
                        {
                            "name": "currency1",
                            "type": "address",
                            "internalType": "Currency"
                        },
                        {
                            "name": "fee",
                            "type": "uint24",
                            "internalType": "uint24"
                        },
                        {
                            "name": "tickSpacing",
                            "type": "int24",
                            "internalType": "int24"
                        },
                        {
                            "name": "hooks",
                            "type": "address",
                            "internalType": "contract IHooks"
                        }
                    ]
                },
                {
                    "name": "",
                    "type": "uint256",
                    "internalType": "uint256"
                },
                {
                    "name": "",
                    "type": "uint256",
                    "internalType": "uint256"
                },
                {
                    "name": "",
                    "type": "bytes",
                    "internalType": "bytes"
                }
            ],
            "outputs": [
                {
                    "name": "",
                    "type": "bytes4",
                    "internalType": "bytes4"
                }
            ],
            "stateMutability": "nonpayable"
        },
        {
            "type": "function",
            "name": "beforeInitialize",
            "inputs": [
                {
                    "name": "",
                    "type": "address",
                    "internalType": "address"
                },
                {
                    "name": "key",
                    "type": "tuple",
                    "internalType": "struct PoolKey",
                    "components": [
                        {
                            "name": "currency0",
                            "type": "address",
                            "internalType": "Currency"
                        },
                        {
                            "name": "currency1",
                            "type": "address",
                            "internalType": "Currency"
                        },
                        {
                            "name": "fee",
                            "type": "uint24",
                            "internalType": "uint24"
                        },
                        {
                            "name": "tickSpacing",
                            "type": "int24",
                            "internalType": "int24"
                        },
                        {
                            "name": "hooks",
                            "type": "address",
                            "internalType": "contract IHooks"
                        }
                    ]
                },
                {
                    "name": "",
                    "type": "uint160",
                    "internalType": "uint160"
                }
            ],
            "outputs": [
                {
                    "name": "",
                    "type": "bytes4",
                    "internalType": "bytes4"
                }
            ],
            "stateMutability": "nonpayable"
        },
        {
            "type": "function",
            "name": "beforeRemoveLiquidity",
            "inputs": [
                {
                    "name": "",
                    "type": "address",
                    "internalType": "address"
                },
                {
                    "name": "",
                    "type": "tuple",
                    "internalType": "struct PoolKey",
                    "components": [
                        {
                            "name": "currency0",
                            "type": "address",
                            "internalType": "Currency"
                        },
                        {
                            "name": "currency1",
                            "type": "address",
                            "internalType": "Currency"
                        },
                        {
                            "name": "fee",
                            "type": "uint24",
                            "internalType": "uint24"
                        },
                        {
                            "name": "tickSpacing",
                            "type": "int24",
                            "internalType": "int24"
                        },
                        {
                            "name": "hooks",
                            "type": "address",
                            "internalType": "contract IHooks"
                        }
                    ]
                },
                {
                    "name": "",
                    "type": "tuple",
                    "internalType": "struct IPoolManager.ModifyLiquidityParams",
                    "components": [
                        {
                            "name": "tickLower",
                            "type": "int24",
                            "internalType": "int24"
                        },
                        {
                            "name": "tickUpper",
                            "type": "int24",
                            "internalType": "int24"
                        },
                        {
                            "name": "liquidityDelta",
                            "type": "int256",
                            "internalType": "int256"
                        },
                        {
                            "name": "salt",
                            "type": "bytes32",
                            "internalType": "bytes32"
                        }
                    ]
                },
                {
                    "name": "",
                    "type": "bytes",
                    "internalType": "bytes"
                }
            ],
            "outputs": [
                {
                    "name": "",
                    "type": "bytes4",
                    "internalType": "bytes4"
                }
            ],
            "stateMutability": "nonpayable"
        },
        {
            "type": "function",
            "name": "beforeSwap",
            "inputs": [
                {
                    "name": "",
                    "type": "address",
                    "internalType": "address"
                },
                {
                    "name": "key",
                    "type": "tuple",
                    "internalType": "struct PoolKey",
                    "components": [
                        {
                            "name": "currency0",
                            "type": "address",
                            "internalType": "Currency"
                        },
                        {
                            "name": "currency1",
                            "type": "address",
                            "internalType": "Currency"
                        },
                        {
                            "name": "fee",
                            "type": "uint24",
                            "internalType": "uint24"
                        },
                        {
                            "name": "tickSpacing",
                            "type": "int24",
                            "internalType": "int24"
                        },
                        {
                            "name": "hooks",
                            "type": "address",
                            "internalType": "contract IHooks"
                        }
                    ]
                },
                {
                    "name": "",
                    "type": "tuple",
                    "internalType": "struct IPoolManager.SwapParams",
                    "components": [
                        {
                            "name": "zeroForOne",
                            "type": "bool",
                            "internalType": "bool"
                        },
                        {
                            "name": "amountSpecified",
                            "type": "int256",
                            "internalType": "int256"
                        },
                        {
                            "name": "sqrtPriceLimitX96",
                            "type": "uint160",
                            "internalType": "uint160"
                        }
                    ]
                },
                {
                    "name": "",
                    "type": "bytes",
                    "internalType": "bytes"
                }
            ],
            "outputs": [
                {
                    "name": "",
                    "type": "bytes4",
                    "internalType": "bytes4"
                },
                {
                    "name": "",
                    "type": "int256",
                    "internalType": "BeforeSwapDelta"
                },
                {
                    "name": "",
                    "type": "uint24",
                    "internalType": "uint24"
                }
            ],
            "stateMutability": "nonpayable"
        },
        {
            "type": "function",
            "name": "getHookPermissions",
            "inputs": [],
            "outputs": [
                {
                    "name": "",
                    "type": "tuple",
                    "internalType": "struct Hooks.Permissions",
                    "components": [
                        {
                            "name": "beforeInitialize",
                            "type": "bool",
                            "internalType": "bool"
                        },
                        {
                            "name": "afterInitialize",
                            "type": "bool",
                            "internalType": "bool"
                        },
                        {
                            "name": "beforeAddLiquidity",
                            "type": "bool",
                            "internalType": "bool"
                        },
                        {
                            "name": "afterAddLiquidity",
                            "type": "bool",
                            "internalType": "bool"
                        },
                        {
                            "name": "beforeRemoveLiquidity",
                            "type": "bool",
                            "internalType": "bool"
                        },
                        {
                            "name": "afterRemoveLiquidity",
                            "type": "bool",
                            "internalType": "bool"
                        },
                        {
                            "name": "beforeSwap",
                            "type": "bool",
                            "internalType": "bool"
                        },
                        {
                            "name": "afterSwap",
                            "type": "bool",
                            "internalType": "bool"
                        },
                        {
                            "name": "beforeDonate",
                            "type": "bool",
                            "internalType": "bool"
                        },
                        {
                            "name": "afterDonate",
                            "type": "bool",
                            "internalType": "bool"
                        },
                        {
                            "name": "beforeSwapReturnDelta",
                            "type": "bool",
                            "internalType": "bool"
                        },
                        {
                            "name": "afterSwapReturnDelta",
                            "type": "bool",
                            "internalType": "bool"
                        },
                        {
                            "name": "afterAddLiquidityReturnDelta",
                            "type": "bool",
                            "internalType": "bool"
                        },
                        {
                            "name": "afterRemoveLiquidityReturnDelta",
                            "type": "bool",
                            "internalType": "bool"
                        }
                    ]
                }
            ],
            "stateMutability": "pure"
        },
        {
            "type": "function",
            "name": "movingAverageGasPrice",
            "inputs": [],
            "outputs": [
                {
                    "name": "",
                    "type": "uint128",
                    "internalType": "uint128"
                }
            ],
            "stateMutability": "view"
        },
        {
            "type": "function",
            "name": "movingAverageGasPriceCount",
            "inputs": [],
            "outputs": [
                {
                    "name": "",
                    "type": "uint104",
                    "internalType": "uint104"
                }
            ],
            "stateMutability": "view"
        },
        {
            "type": "function",
            "name": "poolManager",
            "inputs": [],
            "outputs": [
                {
                    "name": "",
                    "type": "address",
                    "internalType": "contract IPoolManager"
                }
            ],
            "stateMutability": "view"
        },
        {
            "type": "function",
            "name": "unlockCallback",
            "inputs": [
                {
                    "name": "data",
                    "type": "bytes",
                    "internalType": "bytes"
                }
            ],
            "outputs": [
                {
                    "name": "",
                    "type": "bytes",
                    "internalType": "bytes"
                }
            ],
            "stateMutability": "nonpayable"
        },
        {
            "type": "error",
            "name": "HookNotImplemented",
            "inputs": []
        },
        {
            "type": "error",
            "name": "InvalidPool",
            "inputs": []
        },
        {
            "type": "error",
            "name": "LockFailure",
            "inputs": []
        },
        {
            "type": "error",
            "name": "MustUseDynamicFee",
            "inputs": []
        },
        {
            "type": "error",
            "name": "NotPoolManager",
            "inputs": []
        },
        {
            "type": "error",
            "name": "NotSelf",
            "inputs": []
        }
    ],
    "bytecode": {
        "object": "0x60a060405234801561000f575f80fd5b5060405161144c38038061144c83398101604081905261002e91610464565b6001600160a01b0381166080528061004530610054565b5061004e610147565b50610571565b6101448161013f604080516101c0810182525f80825260208201819052918101829052606081018290526080810182905260a0810182905260c0810182905260e08101829052610100810182905261012081018290526101408101829052610160810182905261018081018290526101a081019190915250604080516101c08101825260018082525f60208301819052928201839052606082018390526080820183905260a0820183905260c0820181905260e0820152610100810182905261012081018290526101408101829052610160810182905261018081018290526101a081019190915290565b610209565b50565b5f543a9061016690600160801b90046001600160681b031660016104a5565b5f546001600160681b0391821691839161019191600160801b820416906001600160801b03166104c4565b61019b91906104ed565b6101a5919061050c565b5f80546001600160801b0319166001600160801b039290921691909117808255600160801b90046001600160681b03169060106101e183610546565b91906101000a8154816001600160681b0302191690836001600160681b031602179055505050565b61021e6001600160a01b03831661200061043a565b8151151590151514158061024e57506102426001600160a01b03831661100061043a565b15158160200151151514155b8061027557506102696001600160a01b03831661080061043a565b15158160400151151514155b8061029c57506102906001600160a01b03831661040061043a565b15158160600151151514155b806102c357506102b76001600160a01b03831661020061043a565b15158160800151151514155b806102ea57506102de6001600160a01b03831661010061043a565b15158160a00151151514155b8061031057506103046001600160a01b038316608061043a565b15158160c00151151514155b80610336575061032a6001600160a01b038316604061043a565b15158160e00151151514155b8061035d57506103506001600160a01b038316602061043a565b1515816101000151151514155b8061038457506103776001600160a01b038316601061043a565b1515816101200151151514155b806103ab575061039e6001600160a01b038316600861043a565b1515816101400151151514155b806103d257506103c56001600160a01b038316600461043a565b1515816101600151151514155b806103f957506103ec6001600160a01b038316600261043a565b1515816101800151151514155b8061042057506104136001600160a01b038316600161043a565b1515816101a00151151514155b1561043657610436630732d7b560e51b8361044f565b5050565b6001600160a01b038282161615155b92915050565b815f526001600160a01b03811660045260245ffd5b5f60208284031215610474575f80fd5b81516001600160a01b038116811461048a575f80fd5b9392505050565b634e487b7160e01b5f52601160045260245ffd5b6001600160681b03818116838216019081111561044957610449610491565b6001600160801b0381811683821602908116908181146104e6576104e6610491565b5092915050565b6001600160801b03818116838216019081111561044957610449610491565b5f6001600160801b0383168061053057634e487b7160e01b5f52601260045260245ffd5b6001600160801b03929092169190910492915050565b5f6001600160681b0382166002600160681b0319810161056857610568610491565b60010192915050565b608051610eb56105975f395f81816103840152818161041101526104b60152610eb55ff3fe608060405234801561000f575f80fd5b50600436106100fb575f3560e01c80639f063efc11610093578063cd2c70e811610063578063cd2c70e81461034e578063dc4c90d31461037f578063dc98354e146103be578063e1b4af691461024c575f80fd5b80639f063efc1461018b578063b47b2fb114610216578063b6a8b0fa1461024c578063c4e833ce1461025a575f80fd5b80636c2bbe7e116100ce5780636c2bbe7e1461018b5780636fe7e6eb146101be57806391dd7346146101cc5780639a161daa146101ec575f80fd5b806321d0ee70146100ff578063259982e5146100ff5780633d18651e14610130578063575e24b41461014d575b5f80fd5b61011261010d366004610804565b6103d1565b6040516001600160e01b031990911681526020015b60405180910390f35b61013961138881565b60405162ffffff9091168152602001610127565b61016061015b36600461088b565b6103eb565b604080516001600160e01b03199094168452602084019290925262ffffff1690820152606001610127565b61019e6101993660046108e5565b61048e565b604080516001600160e01b03199093168352602083019190915201610127565b61011261010d366004610986565b6101df6101da3660046109dd565b6104a9565b6040516101279190610a1c565b5f546101fe906001600160801b031681565b6040516001600160801b039091168152602001610127565b610229610224366004610a51565b610507565b604080516001600160e01b03199093168352600f9190910b602083015201610127565b61011261010d366004610ad2565b610341604080516101c0810182525f80825260208201819052918101829052606081018290526080810182905260a0810182905260c0810182905260e08101829052610100810182905261012081018290526101408101829052610160810182905261018081018290526101a081019190915250604080516101c08101825260018082525f60208301819052928201839052606082018390526080820183905260a0820183905260c0820181905260e0820152610100810182905261012081018290526101408101829052610160810182905261018081018290526101a081019190915290565b6040516101279190610b2c565b5f5461036790600160801b90046001600160681b031681565b6040516001600160681b039091168152602001610127565b6103a67f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b039091168152602001610127565b6101126103cc366004610c4d565b610527565b5f604051630a85dc2960e01b815260040160405180910390fd5b5f805f806103f761057a565b604051635275965160e01b81529091506001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001690635275965190610448908b908590600401610ca6565b5f604051808303815f87803b15801561045f575f80fd5b505af1158015610471573d5f803e3d5ffd5b506315d7892d60e21b9c5f9c508c9b509950505050505050505050565b5f80604051630a85dc2960e01b815260040160405180910390fd5b6060336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146104f45760405163570c108560e11b815260040160405180910390fd5b6104fe838361061e565b90505b92915050565b5f806105116106b7565b5063b47b2fb160e01b975f975095505050505050565b5f61054d61053b6060850160408601610d35565b62ffffff1662ffffff16628000001490565b61056a576040516315b3d69f60e31b815260040160405180910390fd5b50636e4c1aa760e11b9392505050565b5f80543a90600a90610596906001600160801b0316600b610d62565b6105a09190610d98565b6001600160801b0316816001600160801b031611156105cc576105c66002611388610dc5565b91505090565b5f54600a906105e5906001600160801b03166009610d62565b6105ef9190610d98565b6001600160801b0316816001600160801b03161015610615576105c66113886002610dea565b61138891505090565b60605f80306001600160a01b0316858560405161063c929190610e08565b5f604051808303815f865af19150503d805f8114610675576040519150601f19603f3d011682016040523d82523d5f602084013e61067a565b606091505b5091509150811561068e5791506105019050565b80515f036106af576040516314815f4760e31b815260040160405180910390fd5b805160208201fd5b5f543a906106d690600160801b90046001600160681b03166001610e17565b5f546001600160681b0391821691839161070191600160801b820416906001600160801b0316610d62565b61070b9190610e36565b6107159190610d98565b5f80546fffffffffffffffffffffffffffffffff19166001600160801b039290921691909117808255600160801b90046001600160681b031690601061075a83610e55565b91906101000a8154816001600160681b0302191690836001600160681b031602179055505050565b6001600160a01b0381168114610796575f80fd5b50565b5f60a082840312156107a9575f80fd5b50919050565b5f608082840312156107a9575f80fd5b5f8083601f8401126107cf575f80fd5b50813567ffffffffffffffff8111156107e6575f80fd5b6020830191508360208285010111156107fd575f80fd5b9250929050565b5f805f805f6101608688031215610819575f80fd5b853561082481610782565b94506108338760208801610799565b93506108428760c088016107af565b925061014086013567ffffffffffffffff81111561085e575f80fd5b61086a888289016107bf565b969995985093965092949392505050565b5f606082840312156107a9575f80fd5b5f805f805f61014086880312156108a0575f80fd5b85356108ab81610782565b94506108ba8760208801610799565b93506108c98760c0880161087b565b925061012086013567ffffffffffffffff81111561085e575f80fd5b5f805f805f805f6101a0888a0312156108fc575f80fd5b873561090781610782565b96506109168960208a01610799565b95506109258960c08a016107af565b94506101408801359350610160880135925061018088013567ffffffffffffffff811115610951575f80fd5b61095d8a828b016107bf565b989b979a50959850939692959293505050565b8035600281900b8114610981575f80fd5b919050565b5f805f80610100858703121561099a575f80fd5b84356109a581610782565b93506109b48660208701610799565b925060c08501356109c481610782565b91506109d260e08601610970565b905092959194509250565b5f80602083850312156109ee575f80fd5b823567ffffffffffffffff811115610a04575f80fd5b610a10858286016107bf565b90969095509350505050565b602081525f82518060208401528060208501604085015e5f604082850101526040601f19601f83011684010191505092915050565b5f805f805f806101608789031215610a67575f80fd5b8635610a7281610782565b9550610a818860208901610799565b9450610a908860c0890161087b565b9350610120870135925061014087013567ffffffffffffffff811115610ab4575f80fd5b610ac089828a016107bf565b979a9699509497509295939492505050565b5f805f805f806101208789031215610ae8575f80fd5b8635610af381610782565b9550610b028860208901610799565b945060c0870135935060e0870135925061010087013567ffffffffffffffff811115610ab4575f80fd5b8151151581526101c081016020830151610b4a602084018215159052565b506040830151610b5e604084018215159052565b506060830151610b72606084018215159052565b506080830151610b86608084018215159052565b5060a0830151610b9a60a084018215159052565b5060c0830151610bae60c084018215159052565b5060e0830151610bc260e084018215159052565b50610100830151610bd861010084018215159052565b50610120830151610bee61012084018215159052565b50610140830151610c0461014084018215159052565b50610160830151610c1a61016084018215159052565b50610180830151610c3061018084018215159052565b506101a0830151610c466101a084018215159052565b5092915050565b5f805f60e08486031215610c5f575f80fd5b8335610c6a81610782565b9250610c798560208601610799565b915060c0840135610c8981610782565b809150509250925092565b803562ffffff81168114610981575f80fd5b60c081018335610cb581610782565b6001600160a01b031682526020840135610cce81610782565b6001600160a01b0316602083015262ffffff610cec60408601610c94565b166040830152610cfe60608501610970565b60020b60608301526080840135610d1481610782565b6001600160a01b0316608083015262ffffff9290921660a090910152919050565b5f60208284031215610d45575f80fd5b6104fe82610c94565b634e487b7160e01b5f52601160045260245ffd5b6001600160801b038181168382160290811690818114610c4657610c46610d4e565b634e487b7160e01b5f52601260045260245ffd5b5f6001600160801b03831680610db057610db0610d84565b806001600160801b0384160491505092915050565b5f62ffffff831680610dd957610dd9610d84565b8062ffffff84160491505092915050565b62ffffff8181168382160290811690818114610c4657610c46610d4e565b818382375f9101908152919050565b6001600160681b03818116838216019081111561050157610501610d4e565b6001600160801b03818116838216019081111561050157610501610d4e565b5f6001600160681b0382166001600160681b038103610e7657610e76610d4e565b6001019291505056fea26469706673582212207f1def5f763fe96c83d72c6611b665c2a9d825f6a20b302d854a63721428834064736f6c634300081a0033",
        "sourceMap": "510:3634:107:-:0;;;1132:100;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;451:26:104;;;;1180:12:107;854:25:106::1;874:4;854:19;:25::i;:::-;-1:-1:-1::0;1204:21:107::1;:19;:21::i;:::-;1132:100:::0;510:3634;;1842:142:106;1919:58;1949:5;1956:20;510:3634:107;;;;;;;;-1:-1:-1;510:3634:107;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1492:629:107;;;;;;;;1546:4;1492:629;;;-1:-1:-1;1492:629:107;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1341:787;1956:20:106;1919:29;:58::i;:::-;1842:142;:::o;3249:401:107:-;3299:16;3573:26;3326:11;;3573:30;;-1:-1:-1;;;3573:26:107;;-1:-1:-1;;;;;3573:26:107;3602:1;3573:30;:::i;:::-;3518:26;;-1:-1:-1;;;;;3492:112:107;;;;3548:8;;3494:50;;-1:-1:-1;;;3518:26:107;;;;-1:-1:-1;;;;;3494:21:107;:50;:::i;:::-;3493:63;;;;:::i;:::-;3492:112;;;;:::i;:::-;3456:21;:148;;-1:-1:-1;;;;;;3456:148:107;-1:-1:-1;;;;;3456:148:107;;;;;;;;;;;-1:-1:-1;;;3615:28:107;;-1:-1:-1;;;;;3615:28:107;;:26;:28;;;:::i;:::-;;;;;;;;-1:-1:-1;;;;;3615:28:107;;;;;-1:-1:-1;;;;;3615:28:107;;;;;;;3289:361;3249:401::o;3584:1599:65:-;3735:42;-1:-1:-1;;;;;3735:18:65;;1319:7;3735:18;:42::i;:::-;3703:28;;:74;;;;;;;;:166;;-1:-1:-1;3828:41:65;-1:-1:-1;;;;;3828:18:65;;1382:7;3828:18;:41::i;:::-;3797:72;;:11;:27;;;:72;;;;3703:166;:265;;;-1:-1:-1;3923:45:65;-1:-1:-1;;;;;3923:18:65;;1450:7;3923:18;:45::i;:::-;3889:79;;:11;:30;;;:79;;;;3703:265;:362;;;-1:-1:-1;4021:44:65;-1:-1:-1;;;;;4021:18:65;;1516:7;4021:18;:44::i;:::-;3988:77;;:11;:29;;;:77;;;;3703:362;:467;;;-1:-1:-1;4122:48:65;-1:-1:-1;;;;;4122:18:65;;1587:6;4122:18;:48::i;:::-;4085:85;;:11;:33;;;:85;;;;3703:467;:570;;;-1:-1:-1;4226:47:65;-1:-1:-1;;;;;4226:18:65;;1655:6;4226:18;:47::i;:::-;4190:83;;:11;:32;;;:83;;;;3703:570;:652;;;-1:-1:-1;4319:36:65;-1:-1:-1;;;;;4319:18:65;;1713:6;4319:18;:36::i;:::-;4293:62;;:11;:22;;;:62;;;;3703:652;:732;;;-1:-1:-1;4400:35:65;-1:-1:-1;;;;;4400:18:65;;1769:6;4400:18;:35::i;:::-;4375:60;;:11;:21;;;:60;;;;3703:732;:818;;;-1:-1:-1;4483:38:65;-1:-1:-1;;;;;4483:18:65;;1829:6;4483:18;:38::i;:::-;4455:66;;:11;:24;;;:66;;;;3703:818;:902;;;-1:-1:-1;4568:37:65;-1:-1:-1;;;;;4568:18:65;;1887:6;4568:18;:37::i;:::-;4541:64;;:11;:23;;;:64;;;;3703:902;:1009;;;-1:-1:-1;4662:50:65;-1:-1:-1;;;;;4662:18:65;;1959:6;4662:18;:50::i;:::-;4625:87;;:11;:33;;;:87;;;;3703:1009;:1114;;;-1:-1:-1;4768:49:65;-1:-1:-1;;;;;4768:18:65;;2029:6;4768:18;:49::i;:::-;4732:85;;:11;:32;;;:85;;;;3703:1114;:1236;;;-1:-1:-1;4881:58:65;-1:-1:-1;;;;;4881:18:65;;2108:6;4881:18;:58::i;:::-;4837:102;;:11;:40;;;:102;;;;3703:1236;:1384;;;-1:-1:-1;5026:61:65;-1:-1:-1;;;;;5026:18:65;;2190:6;5026:18;:61::i;:::-;4959:128;;:11;:43;;;:128;;;;3703:1384;3686:1491;;;5112:54;-1:-1:-1;;;5160:4:65;5112:39;:54::i;:::-;3584:1599;;:::o;16262:137::-;-1:-1:-1;;;;;16358:29:65;;;:34;;;16262:137;;;;;:::o;862:257:61:-;986:8;983:1;976:19;-1:-1:-1;;;;;1025:4:61;1021:53;1015:4;1008:67;1098:4;1095:1;1088:15;14:312:113;106:6;159:2;147:9;138:7;134:23;130:32;127:52;;;175:1;172;165:12;127:52;201:16;;-1:-1:-1;;;;;246:31:113;;236:42;;226:70;;292:1;289;282:12;226:70;315:5;14:312;-1:-1:-1;;;14:312:113:o;331:127::-;392:10;387:3;383:20;380:1;373:31;423:4;420:1;413:15;447:4;444:1;437:15;463:195;-1:-1:-1;;;;;532:27:113;;;561;;;528:61;;601:28;;598:54;;;632:18;;:::i;663:272::-;-1:-1:-1;;;;;748:27:113;;;777;;;744:61;825:37;;;;881:24;;;871:58;;909:18;;:::i;:::-;871:58;663:272;;;;:::o;940:195::-;-1:-1:-1;;;;;1009:27:113;;;1038;;;1005:61;;1078:28;;1075:54;;;1109:18;;:::i;1140:294::-;1180:1;-1:-1:-1;;;;;1207:27:113;;;1243:134;;1299:10;1294:3;1290:20;1287:1;1280:31;1334:4;1331:1;1324:15;1362:4;1359:1;1352:15;1243:134;-1:-1:-1;;;;;1395:27:113;;;;1391:37;;;;;1140:294;-1:-1:-1;;1140:294:113:o;1439:207::-;1478:3;-1:-1:-1;;;;;1511:31:113;;-1:-1:-1;;;;;;1554:32:113;;1551:58;;1589:18;;:::i;:::-;1638:1;1625:15;;1439:207;-1:-1:-1;;1439:207:113:o;:::-;510:3634:107;;;;;;;;;;;;;;;;;;;;;;",
        "linkReferences": {}
    },
    "deployedBytecode": {
        "object": "0x608060405234801561000f575f80fd5b50600436106100fb575f3560e01c80639f063efc11610093578063cd2c70e811610063578063cd2c70e81461034e578063dc4c90d31461037f578063dc98354e146103be578063e1b4af691461024c575f80fd5b80639f063efc1461018b578063b47b2fb114610216578063b6a8b0fa1461024c578063c4e833ce1461025a575f80fd5b80636c2bbe7e116100ce5780636c2bbe7e1461018b5780636fe7e6eb146101be57806391dd7346146101cc5780639a161daa146101ec575f80fd5b806321d0ee70146100ff578063259982e5146100ff5780633d18651e14610130578063575e24b41461014d575b5f80fd5b61011261010d366004610804565b6103d1565b6040516001600160e01b031990911681526020015b60405180910390f35b61013961138881565b60405162ffffff9091168152602001610127565b61016061015b36600461088b565b6103eb565b604080516001600160e01b03199094168452602084019290925262ffffff1690820152606001610127565b61019e6101993660046108e5565b61048e565b604080516001600160e01b03199093168352602083019190915201610127565b61011261010d366004610986565b6101df6101da3660046109dd565b6104a9565b6040516101279190610a1c565b5f546101fe906001600160801b031681565b6040516001600160801b039091168152602001610127565b610229610224366004610a51565b610507565b604080516001600160e01b03199093168352600f9190910b602083015201610127565b61011261010d366004610ad2565b610341604080516101c0810182525f80825260208201819052918101829052606081018290526080810182905260a0810182905260c0810182905260e08101829052610100810182905261012081018290526101408101829052610160810182905261018081018290526101a081019190915250604080516101c08101825260018082525f60208301819052928201839052606082018390526080820183905260a0820183905260c0820181905260e0820152610100810182905261012081018290526101408101829052610160810182905261018081018290526101a081019190915290565b6040516101279190610b2c565b5f5461036790600160801b90046001600160681b031681565b6040516001600160681b039091168152602001610127565b6103a67f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b039091168152602001610127565b6101126103cc366004610c4d565b610527565b5f604051630a85dc2960e01b815260040160405180910390fd5b5f805f806103f761057a565b604051635275965160e01b81529091506001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001690635275965190610448908b908590600401610ca6565b5f604051808303815f87803b15801561045f575f80fd5b505af1158015610471573d5f803e3d5ffd5b506315d7892d60e21b9c5f9c508c9b509950505050505050505050565b5f80604051630a85dc2960e01b815260040160405180910390fd5b6060336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146104f45760405163570c108560e11b815260040160405180910390fd5b6104fe838361061e565b90505b92915050565b5f806105116106b7565b5063b47b2fb160e01b975f975095505050505050565b5f61054d61053b6060850160408601610d35565b62ffffff1662ffffff16628000001490565b61056a576040516315b3d69f60e31b815260040160405180910390fd5b50636e4c1aa760e11b9392505050565b5f80543a90600a90610596906001600160801b0316600b610d62565b6105a09190610d98565b6001600160801b0316816001600160801b031611156105cc576105c66002611388610dc5565b91505090565b5f54600a906105e5906001600160801b03166009610d62565b6105ef9190610d98565b6001600160801b0316816001600160801b03161015610615576105c66113886002610dea565b61138891505090565b60605f80306001600160a01b0316858560405161063c929190610e08565b5f604051808303815f865af19150503d805f8114610675576040519150601f19603f3d011682016040523d82523d5f602084013e61067a565b606091505b5091509150811561068e5791506105019050565b80515f036106af576040516314815f4760e31b815260040160405180910390fd5b805160208201fd5b5f543a906106d690600160801b90046001600160681b03166001610e17565b5f546001600160681b0391821691839161070191600160801b820416906001600160801b0316610d62565b61070b9190610e36565b6107159190610d98565b5f80546fffffffffffffffffffffffffffffffff19166001600160801b039290921691909117808255600160801b90046001600160681b031690601061075a83610e55565b91906101000a8154816001600160681b0302191690836001600160681b031602179055505050565b6001600160a01b0381168114610796575f80fd5b50565b5f60a082840312156107a9575f80fd5b50919050565b5f608082840312156107a9575f80fd5b5f8083601f8401126107cf575f80fd5b50813567ffffffffffffffff8111156107e6575f80fd5b6020830191508360208285010111156107fd575f80fd5b9250929050565b5f805f805f6101608688031215610819575f80fd5b853561082481610782565b94506108338760208801610799565b93506108428760c088016107af565b925061014086013567ffffffffffffffff81111561085e575f80fd5b61086a888289016107bf565b969995985093965092949392505050565b5f606082840312156107a9575f80fd5b5f805f805f61014086880312156108a0575f80fd5b85356108ab81610782565b94506108ba8760208801610799565b93506108c98760c0880161087b565b925061012086013567ffffffffffffffff81111561085e575f80fd5b5f805f805f805f6101a0888a0312156108fc575f80fd5b873561090781610782565b96506109168960208a01610799565b95506109258960c08a016107af565b94506101408801359350610160880135925061018088013567ffffffffffffffff811115610951575f80fd5b61095d8a828b016107bf565b989b979a50959850939692959293505050565b8035600281900b8114610981575f80fd5b919050565b5f805f80610100858703121561099a575f80fd5b84356109a581610782565b93506109b48660208701610799565b925060c08501356109c481610782565b91506109d260e08601610970565b905092959194509250565b5f80602083850312156109ee575f80fd5b823567ffffffffffffffff811115610a04575f80fd5b610a10858286016107bf565b90969095509350505050565b602081525f82518060208401528060208501604085015e5f604082850101526040601f19601f83011684010191505092915050565b5f805f805f806101608789031215610a67575f80fd5b8635610a7281610782565b9550610a818860208901610799565b9450610a908860c0890161087b565b9350610120870135925061014087013567ffffffffffffffff811115610ab4575f80fd5b610ac089828a016107bf565b979a9699509497509295939492505050565b5f805f805f806101208789031215610ae8575f80fd5b8635610af381610782565b9550610b028860208901610799565b945060c0870135935060e0870135925061010087013567ffffffffffffffff811115610ab4575f80fd5b8151151581526101c081016020830151610b4a602084018215159052565b506040830151610b5e604084018215159052565b506060830151610b72606084018215159052565b506080830151610b86608084018215159052565b5060a0830151610b9a60a084018215159052565b5060c0830151610bae60c084018215159052565b5060e0830151610bc260e084018215159052565b50610100830151610bd861010084018215159052565b50610120830151610bee61012084018215159052565b50610140830151610c0461014084018215159052565b50610160830151610c1a61016084018215159052565b50610180830151610c3061018084018215159052565b506101a0830151610c466101a084018215159052565b5092915050565b5f805f60e08486031215610c5f575f80fd5b8335610c6a81610782565b9250610c798560208601610799565b915060c0840135610c8981610782565b809150509250925092565b803562ffffff81168114610981575f80fd5b60c081018335610cb581610782565b6001600160a01b031682526020840135610cce81610782565b6001600160a01b0316602083015262ffffff610cec60408601610c94565b166040830152610cfe60608501610970565b60020b60608301526080840135610d1481610782565b6001600160a01b0316608083015262ffffff9290921660a090910152919050565b5f60208284031215610d45575f80fd5b6104fe82610c94565b634e487b7160e01b5f52601160045260245ffd5b6001600160801b038181168382160290811690818114610c4657610c46610d4e565b634e487b7160e01b5f52601260045260245ffd5b5f6001600160801b03831680610db057610db0610d84565b806001600160801b0384160491505092915050565b5f62ffffff831680610dd957610dd9610d84565b8062ffffff84160491505092915050565b62ffffff8181168382160290811690818114610c4657610c46610d4e565b818382375f9101908152919050565b6001600160681b03818116838216019081111561050157610501610d4e565b6001600160801b03818116838216019081111561050157610501610d4e565b5f6001600160681b0382166001600160681b038103610e7657610e76610d4e565b6001019291505056fea26469706673582212207f1def5f763fe96c83d72c6611b665c2a9d825f6a20b302d854a63721428834064736f6c634300081a0033",
        "sourceMap": "510:3634:107:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3062:235:106;;;;;;:::i;:::-;;:::i;:::-;;;-1:-1:-1;;;;;;1857:33:113;;;1839:52;;1827:2;1812:18;3062:235:106;;;;;;;;932:38:107;;966:4;932:38;;;;;2076:8:113;2064:21;;;2046:40;;2034:2;2019:18;932:38:107;1902:190:113;2490:422:107;;;;;;:::i;:::-;;:::i;:::-;;;;-1:-1:-1;;;;;;3324:33:113;;;3306:52;;3389:2;3374:18;;3367:34;;;;3449:8;3437:21;3417:18;;;3410:49;3294:2;3279:18;2490:422:107;3072:393:113;3652:292:106;;;;;;:::i;:::-;;:::i;:::-;;;;-1:-1:-1;;;;;;4837:33:113;;;4819:52;;4902:2;4887:18;;4880:34;;;;4792:18;3652:292:106;4614:306:113;2628:146:106;;;;;;:::i;1018:138:105:-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;643:36:107:-;;;;;-1:-1:-1;;;;;643:36:107;;;;;;-1:-1:-1;;;;;6682:47:113;;;6664:66;;6652:2;6637:18;643:36:107;6518:218:113;2918:282:107;;;;;;:::i;:::-;;:::i;:::-;;;;-1:-1:-1;;;;;;7896:33:113;;;7878:52;;7977:2;7966:22;;;;7961:2;7946:18;;7939:50;7851:18;2918:282:107;7708:287:113;4495:189:106;;;;;;:::i;1341:787:107:-;;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1492:629:107;;;;;;;;1546:4;1492:629;;;-1:-1:-1;1492:629:107;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1341:787;;;;;;;;:::i;840:41::-;;;;;-1:-1:-1;;;840:41:107;;-1:-1:-1;;;;;840:41:107;;;;;;-1:-1:-1;;;;;10986:41:113;;;10968:60;;10956:2;10941:18;840:41:107;10822:212:113;354:41:104;;;;;;;;-1:-1:-1;;;;;11225:55:113;;;11207:74;;11195:2;11180:18;354:41:104;11039:248:113;2134:350:107;;;;;;:::i;:::-;;:::i;3062:235:106:-;3245:6;3270:20;;-1:-1:-1;;;3270:20:106;;;;;;;;;;;2490:422:107;2706:6;2714:15;2731:6;2753:10;2766:8:::1;:6;:8::i;:::-;2784:40;::::0;-1:-1:-1;;;2784:40:107;;2753:21;;-1:-1:-1;;;;;;2784:11:107::1;:30;::::0;::::1;::::0;:40:::1;::::0;2815:3;;2753:21;;2784:40:::1;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;-1:-1:-1::0;;;;2842:24:107;830:1:94::1;::::0;-1:-1:-1;830:1:94;;-1:-1:-1;2490:422:107;-1:-1:-1;;;;;;;;;;2490:422:107:o;3652:292:106:-;3878:6;3886:12;3917:20;;-1:-1:-1;;;3917:20:106;;;;;;;;;;;1018:138:105;1097:12;784:10;-1:-1:-1;;;;;806:11:105;784:34;;780:63;;827:16;;-1:-1:-1;;;827:16:105;;;;;;;;;;;780:63;1128:21:::1;1144:4;;1128:15;:21::i;:::-;1121:28;;853:1;1018:138:::0;;;;:::o;2918:282:107:-;3101:6;3109;3127:21;:19;:21::i;:::-;-1:-1:-1;;;;3166:23:107;3191:1;;-1:-1:-1;2918:282:107;-1:-1:-1;;;;;;2918:282:107:o;2134:350::-;2257:6;2380:22;:7;;;;;;;;:::i;:::-;:20;;1391:24:66;;564:8;1391:24;;1310:112;2380:22:107;2375:55;;2411:19;;-1:-1:-1;;;2411:19:107;;;;;;;;;;;2375:55;-1:-1:-1;;;;2134:350:107;;;;;:::o;3656:486::-;3697:6;3854:21;;3742:11;;3884:2;;3854:26;;-1:-1:-1;;;;;3854:21:107;3878:2;3854:26;:::i;:::-;3853:33;;;;:::i;:::-;-1:-1:-1;;;;;3842:44:107;:8;-1:-1:-1;;;;;3842:44:107;;3838:94;;;3909:12;3920:1;966:4;3909:12;:::i;:::-;3902:19;;;3656:486;:::o;3838:94::-;4033:21;;4062:2;;4033:25;;-1:-1:-1;;;;;4033:21:107;4057:1;4033:25;:::i;:::-;4032:32;;;;:::i;:::-;-1:-1:-1;;;;;4021:43:107;:8;-1:-1:-1;;;;;4021:43:107;;4017:93;;;4087:12;966:4;4098:1;4087:12;:::i;4017:93::-;966:4;4120:15;;;3656:486;:::o;1990:432:106:-;2071:12;2096;2110:23;2145:4;-1:-1:-1;;;;;2137:18:106;2156:4;;2137:24;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2095:66;;;;2175:7;2171:30;;;2191:10;-1:-1:-1;2184:17:106;;-1:-1:-1;2184:17:106;2171:30;2215:10;:17;2236:1;2215:22;2211:48;;2246:13;;-1:-1:-1;;;2246:13:106;;;;;;;;;;;2211:48;2394:10;2388:17;2383:2;2371:10;2367:19;2360:46;3249:401:107;3299:16;3573:26;3326:11;;3573:30;;-1:-1:-1;;;3573:26:107;;-1:-1:-1;;;;;3573:26:107;3602:1;3573:30;:::i;:::-;3518:26;;-1:-1:-1;;;;;3492:112:107;;;;3548:8;;3494:50;;-1:-1:-1;;;3518:26:107;;;;-1:-1:-1;;;;;3494:21:107;:50;:::i;:::-;3493:63;;;;:::i;:::-;3492:112;;;;:::i;:::-;3456:21;:148;;-1:-1:-1;;3456:148:107;-1:-1:-1;;;;;3456:148:107;;;;;;;;;;;-1:-1:-1;;;3615:28:107;;-1:-1:-1;;;;;3615:28:107;;:26;:28;;;:::i;:::-;;;;;;;;-1:-1:-1;;;;;3615:28:107;;;;;-1:-1:-1;;;;;3615:28:107;;;;;;;3289:361;3249:401::o;14:154:113:-;-1:-1:-1;;;;;93:5:113;89:54;82:5;79:65;69:93;;158:1;155;148:12;69:93;14:154;:::o;173:156::-;233:5;278:3;269:6;264:3;260:16;256:26;253:46;;;295:1;292;285:12;253:46;-1:-1:-1;317:6:113;173:156;-1:-1:-1;173:156:113:o;334:170::-;408:5;453:3;444:6;439:3;435:16;431:26;428:46;;;470:1;467;460:12;509:347;560:8;570:6;624:3;617:4;609:6;605:17;601:27;591:55;;642:1;639;632:12;591:55;-1:-1:-1;665:20:113;;708:18;697:30;;694:50;;;740:1;737;730:12;694:50;777:4;769:6;765:17;753:29;;829:3;822:4;813:6;805;801:19;797:30;794:39;791:59;;;846:1;843;836:12;791:59;509:347;;;;;:::o;861:829::-;1028:6;1036;1044;1052;1060;1113:3;1101:9;1092:7;1088:23;1084:33;1081:53;;;1130:1;1127;1120:12;1081:53;1169:9;1156:23;1188:31;1213:5;1188:31;:::i;:::-;1238:5;-1:-1:-1;1262:63:113;1317:7;1312:2;1297:18;;1262:63;:::i;:::-;1252:73;;1344:78;1414:7;1408:3;1397:9;1393:19;1344:78;:::i;:::-;1334:88;;1473:3;1462:9;1458:19;1445:33;1501:18;1493:6;1490:30;1487:50;;;1533:1;1530;1523:12;1487:50;1572:58;1622:7;1613:6;1602:9;1598:22;1572:58;:::i;:::-;861:829;;;;-1:-1:-1;861:829:113;;-1:-1:-1;1649:8:113;;1546:84;861:829;-1:-1:-1;;;861:829:113:o;2097:158::-;2160:5;2205:2;2196:6;2191:3;2187:16;2183:25;2180:45;;;2221:1;2218;2211:12;2260:807;2416:6;2424;2432;2440;2448;2501:3;2489:9;2480:7;2476:23;2472:33;2469:53;;;2518:1;2515;2508:12;2469:53;2557:9;2544:23;2576:31;2601:5;2576:31;:::i;:::-;2626:5;-1:-1:-1;2650:63:113;2705:7;2700:2;2685:18;;2650:63;:::i;:::-;2640:73;;2732:67;2791:7;2785:3;2774:9;2770:19;2732:67;:::i;:::-;2722:77;;2850:3;2839:9;2835:19;2822:33;2878:18;2870:6;2867:30;2864:50;;;2910:1;2907;2900:12;3470:1139;3723:6;3731;3739;3747;3755;3763;3771;3824:3;3812:9;3803:7;3799:23;3795:33;3792:53;;;3841:1;3838;3831:12;3792:53;3880:9;3867:23;3899:31;3924:5;3899:31;:::i;:::-;3949:5;-1:-1:-1;3973:63:113;4028:7;4023:2;4008:18;;3973:63;:::i;:::-;3963:73;;4055:78;4125:7;4119:3;4108:9;4104:19;4055:78;:::i;:::-;4045:88;-1:-1:-1;4206:3:113;4191:19;;4178:33;;-1:-1:-1;4310:3:113;4295:19;;4282:33;;-1:-1:-1;4392:3:113;4377:19;;4364:33;4420:18;4409:30;;4406:50;;;4452:1;4449;4442:12;4406:50;4491:58;4541:7;4532:6;4521:9;4517:22;4491:58;:::i;:::-;3470:1139;;;;-1:-1:-1;3470:1139:113;;-1:-1:-1;3470:1139:113;;;;4465:84;;-1:-1:-1;;;3470:1139:113:o;4925:160::-;4991:20;;5051:1;5040:20;;;5030:31;;5020:59;;5075:1;5072;5065:12;5020:59;4925:160;;;:::o;5090:588::-;5202:6;5210;5218;5226;5279:3;5267:9;5258:7;5254:23;5250:33;5247:53;;;5296:1;5293;5286:12;5247:53;5335:9;5322:23;5354:31;5379:5;5354:31;:::i;:::-;5404:5;-1:-1:-1;5428:63:113;5483:7;5478:2;5463:18;;5428:63;:::i;:::-;5418:73;;5543:3;5532:9;5528:19;5515:33;5557;5582:7;5557:33;:::i;:::-;5609:7;-1:-1:-1;5635:37:113;5667:3;5652:19;;5635:37;:::i;:::-;5625:47;;5090:588;;;;;;;:::o;5683:409::-;5753:6;5761;5814:2;5802:9;5793:7;5789:23;5785:32;5782:52;;;5830:1;5827;5820:12;5782:52;5870:9;5857:23;5903:18;5895:6;5892:30;5889:50;;;5935:1;5932;5925:12;5889:50;5974:58;6024:7;6015:6;6004:9;6000:22;5974:58;:::i;:::-;6051:8;;5948:84;;-1:-1:-1;5683:409:113;-1:-1:-1;;;;5683:409:113:o;6097:416::-;6244:2;6233:9;6226:21;6207:4;6276:6;6270:13;6319:6;6314:2;6303:9;6299:18;6292:34;6378:6;6373:2;6365:6;6361:15;6356:2;6345:9;6341:18;6335:50;6434:1;6429:2;6420:6;6409:9;6405:22;6401:31;6394:42;6504:2;6497;6493:7;6488:2;6480:6;6476:15;6472:29;6461:9;6457:45;6453:54;6445:62;;;6097:416;;;;:::o;6741:962::-;6940:6;6948;6956;6964;6972;6980;7033:3;7021:9;7012:7;7008:23;7004:33;7001:53;;;7050:1;7047;7040:12;7001:53;7089:9;7076:23;7108:31;7133:5;7108:31;:::i;:::-;7158:5;-1:-1:-1;7182:63:113;7237:7;7232:2;7217:18;;7182:63;:::i;:::-;7172:73;;7264:67;7323:7;7317:3;7306:9;7302:19;7264:67;:::i;:::-;7254:77;-1:-1:-1;7404:3:113;7389:19;;7376:33;;-1:-1:-1;7486:3:113;7471:19;;7458:33;7514:18;7503:30;;7500:50;;;7546:1;7543;7536:12;7500:50;7585:58;7635:7;7626:6;7615:9;7611:22;7585:58;:::i;:::-;6741:962;;;;-1:-1:-1;6741:962:113;;-1:-1:-1;6741:962:113;;7662:8;;6741:962;-1:-1:-1;;;6741:962:113:o;8000:915::-;8134:6;8142;8150;8158;8166;8174;8227:3;8215:9;8206:7;8202:23;8198:33;8195:53;;;8244:1;8241;8234:12;8195:53;8283:9;8270:23;8302:31;8327:5;8302:31;:::i;:::-;8352:5;-1:-1:-1;8376:63:113;8431:7;8426:2;8411:18;;8376:63;:::i;:::-;8366:73;-1:-1:-1;8512:3:113;8497:19;;8484:33;;-1:-1:-1;8616:3:113;8601:19;;8588:33;;-1:-1:-1;8698:3:113;8683:19;;8670:33;8726:18;8715:30;;8712:50;;;8758:1;8755;8748:12;9016:1801;9239:13;;8990;8983:21;8971:34;;9210:3;9195:19;;9311:4;9303:6;9299:17;9293:24;9326:51;9371:4;9360:9;9356:20;9342:12;8990:13;8983:21;8971:34;;8920:91;9326:51;;9426:4;9418:6;9414:17;9408:24;9441:53;9488:4;9477:9;9473:20;9457:14;8990:13;8983:21;8971:34;;8920:91;9441:53;;9543:4;9535:6;9531:17;9525:24;9558:53;9605:4;9594:9;9590:20;9574:14;8990:13;8983:21;8971:34;;8920:91;9558:53;;9660:4;9652:6;9648:17;9642:24;9675:53;9722:4;9711:9;9707:20;9691:14;8990:13;8983:21;8971:34;;8920:91;9675:53;;9777:4;9769:6;9765:17;9759:24;9792:53;9839:4;9828:9;9824:20;9808:14;8990:13;8983:21;8971:34;;8920:91;9792:53;;9894:4;9886:6;9882:17;9876:24;9909:53;9956:4;9945:9;9941:20;9925:14;8990:13;8983:21;8971:34;;8920:91;9909:53;;10011:4;10003:6;9999:17;9993:24;10026:53;10073:4;10062:9;10058:20;10042:14;8990:13;8983:21;8971:34;;8920:91;10026:53;;10128:6;10120;10116:19;10110:26;10145:55;10192:6;10181:9;10177:22;10161:14;8990:13;8983:21;8971:34;;8920:91;10145:55;;10249:6;10241;10237:19;10231:26;10266:55;10313:6;10302:9;10298:22;10282:14;8990:13;8983:21;8971:34;;8920:91;10266:55;;10370:6;10362;10358:19;10352:26;10387:55;10434:6;10423:9;10419:22;10403:14;8990:13;8983:21;8971:34;;8920:91;10387:55;;10492:6;10484;10480:19;10474:26;10509:56;10557:6;10546:9;10542:22;10525:15;8990:13;8983:21;8971:34;;8920:91;10509:56;;10615:6;10607;10603:19;10597:26;10632:56;10680:6;10669:9;10665:22;10648:15;8990:13;8983:21;8971:34;;8920:91;10632:56;;10738:6;10730;10726:19;10720:26;10755:56;10803:6;10792:9;10788:22;10771:15;8990:13;8983:21;8971:34;;8920:91;10755:56;;9016:1801;;;;:::o;11292:517::-;11397:6;11405;11413;11466:3;11454:9;11445:7;11441:23;11437:33;11434:53;;;11483:1;11480;11473:12;11434:53;11522:9;11509:23;11541:31;11566:5;11541:31;:::i;:::-;11591:5;-1:-1:-1;11615:63:113;11670:7;11665:2;11650:18;;11615:63;:::i;:::-;11605:73;;11730:3;11719:9;11715:19;11702:33;11744;11769:7;11744:33;:::i;:::-;11796:7;11786:17;;;11292:517;;;;;:::o;11814:161::-;11881:20;;11941:8;11930:20;;11920:31;;11910:59;;11965:1;11962;11955:12;11980:1010;12194:3;12179:19;;12220:20;;12249:31;12220:20;12249:31;:::i;:::-;-1:-1:-1;;;;;12307:54:113;12289:73;;12411:4;12399:17;;12386:31;12426:33;12386:31;12426:33;:::i;:::-;-1:-1:-1;;;;;12497:56:113;12490:4;12475:20;;12468:86;12634:8;12596:36;12626:4;12614:17;;12596:36;:::i;:::-;12592:51;12585:4;12574:9;12570:20;12563:81;12696:35;12725:4;12717:6;12713:17;12696:35;:::i;:::-;12693:1;12682:50;12675:4;12664:9;12660:20;12653:80;12782:4;12774:6;12770:17;12757:31;12797:33;12822:7;12797:33;:::i;:::-;-1:-1:-1;;;;;12868:56:113;12861:4;12846:20;;12839:86;12974:8;12962:21;;;;12956:3;12941:19;;;12934:50;11980:1010;;-1:-1:-1;11980:1010:113:o;12995:184::-;13053:6;13106:2;13094:9;13085:7;13081:23;13077:32;13074:52;;;13122:1;13119;13112:12;13074:52;13145:28;13163:9;13145:28;:::i;13184:127::-;13245:10;13240:3;13236:20;13233:1;13226:31;13276:4;13273:1;13266:15;13300:4;13297:1;13290:15;13316:317;-1:-1:-1;;;;;13401:42:113;;;13445;;;13397:91;13508:52;;;;13579:24;;;13569:58;;13607:18;;:::i;13638:127::-;13699:10;13694:3;13690:20;13687:1;13680:31;13730:4;13727:1;13720:15;13754:4;13751:1;13744:15;13770:227;13810:1;-1:-1:-1;;;;;13841:1:113;13837:42;13898:3;13888:37;;13905:18;;:::i;:::-;13987:3;-1:-1:-1;;;;;13947:1:113;13943:42;13939:52;13934:57;;;13770:227;;;;:::o;14002:174::-;14041:1;14075:8;14072:1;14068:16;14103:3;14093:37;;14110:18;;:::i;:::-;14166:3;14155:8;14152:1;14148:16;14144:26;14139:31;;;14002:174;;;;:::o;14181:238::-;14290:8;14265:16;;;14283;;;14261:39;14320:26;;;;14365:24;;;14355:58;;14393:18;;:::i;14424:271::-;14607:6;14599;14594:3;14581:33;14563:3;14633:16;;14658:13;;;14633:16;14424:271;-1:-1:-1;14424:271:113:o;14700:222::-;-1:-1:-1;;;;;14769:36:113;;;14807;;;14765:79;;14856:37;;14853:63;;;14896:18;;:::i;14927:240::-;-1:-1:-1;;;;;14996:42:113;;;15040;;;14992:91;;15095:43;;15092:69;;;15141:18;;:::i;15172:225::-;15211:3;-1:-1:-1;;;;;15248:5:113;15244:40;-1:-1:-1;;;;;15299:7:113;15296:41;15293:67;;15340:18;;:::i;:::-;15389:1;15376:15;;15172:225;-1:-1:-1;;15172:225:113:o",
        "linkReferences": {},
        "immutableReferences": {
            "59714": [
                {
                    "start": 900,
                    "length": 32
                },
                {
                    "start": 1041,
                    "length": 32
                },
                {
                    "start": 1206,
                    "length": 32
                }
            ]
        }
    },
    "methodIdentifiers": {
        "BASE_FEE()": "3d18651e",
        "afterAddLiquidity(address,(address,address,uint24,int24,address),(int24,int24,int256,bytes32),int256,int256,bytes)": "9f063efc",
        "afterDonate(address,(address,address,uint24,int24,address),uint256,uint256,bytes)": "e1b4af69",
        "afterInitialize(address,(address,address,uint24,int24,address),uint160,int24)": "6fe7e6eb",
        "afterRemoveLiquidity(address,(address,address,uint24,int24,address),(int24,int24,int256,bytes32),int256,int256,bytes)": "6c2bbe7e",
        "afterSwap(address,(address,address,uint24,int24,address),(bool,int256,uint160),int256,bytes)": "b47b2fb1",
        "beforeAddLiquidity(address,(address,address,uint24,int24,address),(int24,int24,int256,bytes32),bytes)": "259982e5",
        "beforeDonate(address,(address,address,uint24,int24,address),uint256,uint256,bytes)": "b6a8b0fa",
        "beforeInitialize(address,(address,address,uint24,int24,address),uint160)": "dc98354e",
        "beforeRemoveLiquidity(address,(address,address,uint24,int24,address),(int24,int24,int256,bytes32),bytes)": "21d0ee70",
        "beforeSwap(address,(address,address,uint24,int24,address),(bool,int256,uint160),bytes)": "575e24b4",
        "getHookPermissions()": "c4e833ce",
        "movingAverageGasPrice()": "9a161daa",
        "movingAverageGasPriceCount()": "cd2c70e8",
        "poolManager()": "dc4c90d3",
        "unlockCallback(bytes)": "91dd7346"
    },
    "rawMetadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract IPoolManager\",\"name\":\"_poolManager\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"HookNotImplemented\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidPool\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"LockFailure\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MustUseDynamicFee\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotPoolManager\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotSelf\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"BASE_FEE\",\"outputs\":[{\"internalType\":\"uint24\",\"name\":\"\",\"type\":\"uint24\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"Currency\",\"name\":\"currency0\",\"type\":\"address\"},{\"internalType\":\"Currency\",\"name\":\"currency1\",\"type\":\"address\"},{\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"},{\"internalType\":\"int24\",\"name\":\"tickSpacing\",\"type\":\"int24\"},{\"internalType\":\"contract IHooks\",\"name\":\"hooks\",\"type\":\"address\"}],\"internalType\":\"struct PoolKey\",\"name\":\"\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"},{\"internalType\":\"int256\",\"name\":\"liquidityDelta\",\"type\":\"int256\"},{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"}],\"internalType\":\"struct IPoolManager.ModifyLiquidityParams\",\"name\":\"\",\"type\":\"tuple\"},{\"internalType\":\"BalanceDelta\",\"name\":\"\",\"type\":\"int256\"},{\"internalType\":\"BalanceDelta\",\"name\":\"\",\"type\":\"int256\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"afterAddLiquidity\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"},{\"internalType\":\"BalanceDelta\",\"name\":\"\",\"type\":\"int256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"Currency\",\"name\":\"currency0\",\"type\":\"address\"},{\"internalType\":\"Currency\",\"name\":\"currency1\",\"type\":\"address\"},{\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"},{\"internalType\":\"int24\",\"name\":\"tickSpacing\",\"type\":\"int24\"},{\"internalType\":\"contract IHooks\",\"name\":\"hooks\",\"type\":\"address\"}],\"internalType\":\"struct PoolKey\",\"name\":\"\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"afterDonate\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"Currency\",\"name\":\"currency0\",\"type\":\"address\"},{\"internalType\":\"Currency\",\"name\":\"currency1\",\"type\":\"address\"},{\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"},{\"internalType\":\"int24\",\"name\":\"tickSpacing\",\"type\":\"int24\"},{\"internalType\":\"contract IHooks\",\"name\":\"hooks\",\"type\":\"address\"}],\"internalType\":\"struct PoolKey\",\"name\":\"\",\"type\":\"tuple\"},{\"internalType\":\"uint160\",\"name\":\"\",\"type\":\"uint160\"},{\"internalType\":\"int24\",\"name\":\"\",\"type\":\"int24\"}],\"name\":\"afterInitialize\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"Currency\",\"name\":\"currency0\",\"type\":\"address\"},{\"internalType\":\"Currency\",\"name\":\"currency1\",\"type\":\"address\"},{\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"},{\"internalType\":\"int24\",\"name\":\"tickSpacing\",\"type\":\"int24\"},{\"internalType\":\"contract IHooks\",\"name\":\"hooks\",\"type\":\"address\"}],\"internalType\":\"struct PoolKey\",\"name\":\"\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"},{\"internalType\":\"int256\",\"name\":\"liquidityDelta\",\"type\":\"int256\"},{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"}],\"internalType\":\"struct IPoolManager.ModifyLiquidityParams\",\"name\":\"\",\"type\":\"tuple\"},{\"internalType\":\"BalanceDelta\",\"name\":\"\",\"type\":\"int256\"},{\"internalType\":\"BalanceDelta\",\"name\":\"\",\"type\":\"int256\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"afterRemoveLiquidity\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"},{\"internalType\":\"BalanceDelta\",\"name\":\"\",\"type\":\"int256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"Currency\",\"name\":\"currency0\",\"type\":\"address\"},{\"internalType\":\"Currency\",\"name\":\"currency1\",\"type\":\"address\"},{\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"},{\"internalType\":\"int24\",\"name\":\"tickSpacing\",\"type\":\"int24\"},{\"internalType\":\"contract IHooks\",\"name\":\"hooks\",\"type\":\"address\"}],\"internalType\":\"struct PoolKey\",\"name\":\"\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"bool\",\"name\":\"zeroForOne\",\"type\":\"bool\"},{\"internalType\":\"int256\",\"name\":\"amountSpecified\",\"type\":\"int256\"},{\"internalType\":\"uint160\",\"name\":\"sqrtPriceLimitX96\",\"type\":\"uint160\"}],\"internalType\":\"struct IPoolManager.SwapParams\",\"name\":\"\",\"type\":\"tuple\"},{\"internalType\":\"BalanceDelta\",\"name\":\"\",\"type\":\"int256\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"afterSwap\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"},{\"internalType\":\"int128\",\"name\":\"\",\"type\":\"int128\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"Currency\",\"name\":\"currency0\",\"type\":\"address\"},{\"internalType\":\"Currency\",\"name\":\"currency1\",\"type\":\"address\"},{\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"},{\"internalType\":\"int24\",\"name\":\"tickSpacing\",\"type\":\"int24\"},{\"internalType\":\"contract IHooks\",\"name\":\"hooks\",\"type\":\"address\"}],\"internalType\":\"struct PoolKey\",\"name\":\"\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"},{\"internalType\":\"int256\",\"name\":\"liquidityDelta\",\"type\":\"int256\"},{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"}],\"internalType\":\"struct IPoolManager.ModifyLiquidityParams\",\"name\":\"\",\"type\":\"tuple\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"beforeAddLiquidity\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"Currency\",\"name\":\"currency0\",\"type\":\"address\"},{\"internalType\":\"Currency\",\"name\":\"currency1\",\"type\":\"address\"},{\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"},{\"internalType\":\"int24\",\"name\":\"tickSpacing\",\"type\":\"int24\"},{\"internalType\":\"contract IHooks\",\"name\":\"hooks\",\"type\":\"address\"}],\"internalType\":\"struct PoolKey\",\"name\":\"\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"beforeDonate\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"Currency\",\"name\":\"currency0\",\"type\":\"address\"},{\"internalType\":\"Currency\",\"name\":\"currency1\",\"type\":\"address\"},{\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"},{\"internalType\":\"int24\",\"name\":\"tickSpacing\",\"type\":\"int24\"},{\"internalType\":\"contract IHooks\",\"name\":\"hooks\",\"type\":\"address\"}],\"internalType\":\"struct PoolKey\",\"name\":\"key\",\"type\":\"tuple\"},{\"internalType\":\"uint160\",\"name\":\"\",\"type\":\"uint160\"}],\"name\":\"beforeInitialize\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"Currency\",\"name\":\"currency0\",\"type\":\"address\"},{\"internalType\":\"Currency\",\"name\":\"currency1\",\"type\":\"address\"},{\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"},{\"internalType\":\"int24\",\"name\":\"tickSpacing\",\"type\":\"int24\"},{\"internalType\":\"contract IHooks\",\"name\":\"hooks\",\"type\":\"address\"}],\"internalType\":\"struct PoolKey\",\"name\":\"\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"},{\"internalType\":\"int256\",\"name\":\"liquidityDelta\",\"type\":\"int256\"},{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"}],\"internalType\":\"struct IPoolManager.ModifyLiquidityParams\",\"name\":\"\",\"type\":\"tuple\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"beforeRemoveLiquidity\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"Currency\",\"name\":\"currency0\",\"type\":\"address\"},{\"internalType\":\"Currency\",\"name\":\"currency1\",\"type\":\"address\"},{\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"},{\"internalType\":\"int24\",\"name\":\"tickSpacing\",\"type\":\"int24\"},{\"internalType\":\"contract IHooks\",\"name\":\"hooks\",\"type\":\"address\"}],\"internalType\":\"struct PoolKey\",\"name\":\"key\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"bool\",\"name\":\"zeroForOne\",\"type\":\"bool\"},{\"internalType\":\"int256\",\"name\":\"amountSpecified\",\"type\":\"int256\"},{\"internalType\":\"uint160\",\"name\":\"sqrtPriceLimitX96\",\"type\":\"uint160\"}],\"internalType\":\"struct IPoolManager.SwapParams\",\"name\":\"\",\"type\":\"tuple\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"beforeSwap\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"},{\"internalType\":\"BeforeSwapDelta\",\"name\":\"\",\"type\":\"int256\"},{\"internalType\":\"uint24\",\"name\":\"\",\"type\":\"uint24\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getHookPermissions\",\"outputs\":[{\"components\":[{\"internalType\":\"bool\",\"name\":\"beforeInitialize\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"afterInitialize\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"beforeAddLiquidity\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"afterAddLiquidity\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"beforeRemoveLiquidity\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"afterRemoveLiquidity\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"beforeSwap\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"afterSwap\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"beforeDonate\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"afterDonate\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"beforeSwapReturnDelta\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"afterSwapReturnDelta\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"afterAddLiquidityReturnDelta\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"afterRemoveLiquidityReturnDelta\",\"type\":\"bool\"}],\"internalType\":\"struct Hooks.Permissions\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"movingAverageGasPrice\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"movingAverageGasPriceCount\",\"outputs\":[{\"internalType\":\"uint104\",\"name\":\"\",\"type\":\"uint104\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"poolManager\",\"outputs\":[{\"internalType\":\"contract IPoolManager\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"unlockCallback\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"afterAddLiquidity(address,(address,address,uint24,int24,address),(int24,int24,int256,bytes32),int256,int256,bytes)\":{\"params\":{\"delta\":\"The caller's balance delta after adding liquidity; the sum of principal delta, fees accrued, and hook delta\",\"feesAccrued\":\"The fees accrued since the last time fees were collected from this position\",\"hookData\":\"Arbitrary data handed into the PoolManager by the liquidity provider to be passed on to the hook\",\"key\":\"The key for the pool\",\"params\":\"The parameters for adding liquidity\",\"sender\":\"The initial msg.sender for the add liquidity call\"},\"returns\":{\"_0\":\"bytes4 The function selector for the hook\",\"_1\":\"BalanceDelta The hook's delta in token0 and token1. Positive: the hook is owed/took currency, negative: the hook owes/sent currency\"}},\"afterDonate(address,(address,address,uint24,int24,address),uint256,uint256,bytes)\":{\"params\":{\"amount0\":\"The amount of token0 being donated\",\"amount1\":\"The amount of token1 being donated\",\"hookData\":\"Arbitrary data handed into the PoolManager by the donor to be be passed on to the hook\",\"key\":\"The key for the pool\",\"sender\":\"The initial msg.sender for the donate call\"},\"returns\":{\"_0\":\"bytes4 The function selector for the hook\"}},\"afterInitialize(address,(address,address,uint24,int24,address),uint160,int24)\":{\"params\":{\"key\":\"The key for the pool being initialized\",\"sender\":\"The initial msg.sender for the initialize call\",\"sqrtPriceX96\":\"The sqrt(price) of the pool as a Q64.96\",\"tick\":\"The current tick after the state of a pool is initialized\"},\"returns\":{\"_0\":\"bytes4 The function selector for the hook\"}},\"afterRemoveLiquidity(address,(address,address,uint24,int24,address),(int24,int24,int256,bytes32),int256,int256,bytes)\":{\"params\":{\"delta\":\"The caller's balance delta after adding liquidity; the sum of principal delta, fees accrued, and hook delta\",\"feesAccrued\":\"The fees accrued since the last time fees were collected from this position\",\"hookData\":\"Arbitrary data handed into the PoolManager by the liquidity provider to be be passed on to the hook\",\"key\":\"The key for the pool\",\"params\":\"The parameters for removing liquidity\",\"sender\":\"The initial msg.sender for the remove liquidity call\"},\"returns\":{\"_0\":\"bytes4 The function selector for the hook\",\"_1\":\"BalanceDelta The hook's delta in token0 and token1. Positive: the hook is owed/took currency, negative: the hook owes/sent currency\"}},\"afterSwap(address,(address,address,uint24,int24,address),(bool,int256,uint160),int256,bytes)\":{\"params\":{\"delta\":\"The amount owed to the caller (positive) or owed to the pool (negative)\",\"hookData\":\"Arbitrary data handed into the PoolManager by the swapper to be be passed on to the hook\",\"key\":\"The key for the pool\",\"params\":\"The parameters for the swap\",\"sender\":\"The initial msg.sender for the swap call\"},\"returns\":{\"_0\":\"bytes4 The function selector for the hook\",\"_1\":\"int128 The hook's delta in unspecified currency. Positive: the hook is owed/took currency, negative: the hook owes/sent currency\"}},\"beforeAddLiquidity(address,(address,address,uint24,int24,address),(int24,int24,int256,bytes32),bytes)\":{\"params\":{\"hookData\":\"Arbitrary data handed into the PoolManager by the liquidity provider to be passed on to the hook\",\"key\":\"The key for the pool\",\"params\":\"The parameters for adding liquidity\",\"sender\":\"The initial msg.sender for the add liquidity call\"},\"returns\":{\"_0\":\"bytes4 The function selector for the hook\"}},\"beforeDonate(address,(address,address,uint24,int24,address),uint256,uint256,bytes)\":{\"params\":{\"amount0\":\"The amount of token0 being donated\",\"amount1\":\"The amount of token1 being donated\",\"hookData\":\"Arbitrary data handed into the PoolManager by the donor to be be passed on to the hook\",\"key\":\"The key for the pool\",\"sender\":\"The initial msg.sender for the donate call\"},\"returns\":{\"_0\":\"bytes4 The function selector for the hook\"}},\"beforeRemoveLiquidity(address,(address,address,uint24,int24,address),(int24,int24,int256,bytes32),bytes)\":{\"params\":{\"hookData\":\"Arbitrary data handed into the PoolManager by the liquidity provider to be be passed on to the hook\",\"key\":\"The key for the pool\",\"params\":\"The parameters for removing liquidity\",\"sender\":\"The initial msg.sender for the remove liquidity call\"},\"returns\":{\"_0\":\"bytes4 The function selector for the hook\"}},\"getHookPermissions()\":{\"details\":\"Used at deployment to validate the address correctly represents the expected permissions\"},\"unlockCallback(bytes)\":{\"details\":\"We force the onlyPoolManager modifier by exposing a virtual function after the onlyPoolManager check.\",\"params\":{\"data\":\"The data that was passed to the call to unlock\"},\"returns\":{\"_0\":\"Any data that you want to be returned from the unlock call\"}}},\"version\":1},\"userdoc\":{\"errors\":{\"NotPoolManager()\":[{\"notice\":\"Thrown when calling unlockCallback where the caller is not PoolManager\"}]},\"kind\":\"user\",\"methods\":{\"afterAddLiquidity(address,(address,address,uint24,int24,address),(int24,int24,int256,bytes32),int256,int256,bytes)\":{\"notice\":\"The hook called after liquidity is added\"},\"afterDonate(address,(address,address,uint24,int24,address),uint256,uint256,bytes)\":{\"notice\":\"The hook called after donate\"},\"afterInitialize(address,(address,address,uint24,int24,address),uint160,int24)\":{\"notice\":\"The hook called after the state of a pool is initialized\"},\"afterRemoveLiquidity(address,(address,address,uint24,int24,address),(int24,int24,int256,bytes32),int256,int256,bytes)\":{\"notice\":\"The hook called after liquidity is removed\"},\"afterSwap(address,(address,address,uint24,int24,address),(bool,int256,uint160),int256,bytes)\":{\"notice\":\"The hook called after a swap\"},\"beforeAddLiquidity(address,(address,address,uint24,int24,address),(int24,int24,int256,bytes32),bytes)\":{\"notice\":\"The hook called before liquidity is added\"},\"beforeDonate(address,(address,address,uint24,int24,address),uint256,uint256,bytes)\":{\"notice\":\"The hook called before donate\"},\"beforeRemoveLiquidity(address,(address,address,uint24,int24,address),(int24,int24,int256,bytes32),bytes)\":{\"notice\":\"The hook called before liquidity is removed\"},\"getHookPermissions()\":{\"notice\":\"Returns a struct of permissions to signal which hook functions are to be implemented\"},\"poolManager()\":{\"notice\":\"The Uniswap v4 PoolManager contract\"},\"unlockCallback(bytes)\":{\"notice\":\"Called by the pool manager on `msg.sender` when the manager is unlocked\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/GasPriceFeesHook.sol\":\"GasPriceFeesHook\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":800},\"remappings\":[\":@ensdomains/=lib/v4-periphery/lib/v4-core/node_modules/@ensdomains/\",\":@openzeppelin/=lib/v4-periphery/lib/v4-core/lib/openzeppelin-contracts/\",\":@openzeppelin/contracts/=lib/v4-periphery/lib/v4-core/lib/openzeppelin-contracts/contracts/\",\":@uniswap/v4-core/=lib/v4-periphery/lib/v4-core/\",\":ds-test/=lib/v4-periphery/lib/v4-core/lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/v4-periphery/lib/v4-core/lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-gas-snapshot/=lib/v4-periphery/lib/v4-core/lib/forge-gas-snapshot/src/\",\":forge-std/=lib/forge-std/src/\",\":hardhat/=lib/v4-periphery/lib/v4-core/node_modules/hardhat/\",\":openzeppelin-contracts/=lib/v4-periphery/lib/v4-core/lib/openzeppelin-contracts/\",\":permit2/=lib/v4-periphery/lib/permit2/\",\":solmate/=lib/v4-periphery/lib/v4-core/lib/solmate/\",\":v4-core/=lib/v4-periphery/lib/v4-core/src/\",\":v4-periphery/=lib/v4-periphery/\"]},\"sources\":{\"lib/v4-periphery/lib/v4-core/src/interfaces/IExtsload.sol\":{\"keccak256\":\"0x80b53ca4907d6f0088c3b931f2b72cad1dc4615a95094d96bd0fb8dff8d5ba43\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://375c69148622aab7a3537d5fd37d373a8e9731022c8d87bdaee46233b0a99fe1\",\"dweb:/ipfs/QmXFjdoYRxsA5B1kyuxEXgNf3FBoL1zPvy26Qy8EtpdFRN\"]},\"lib/v4-periphery/lib/v4-core/src/interfaces/IExttload.sol\":{\"keccak256\":\"0xc6b68283ebd8d1c789df536756726eed51c589134bb20821b236a0d22a135937\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://294394f72dfc219689209f4130d85601dfd0d63c8d47578050d312db70f9b6c8\",\"dweb:/ipfs/QmTDMQ3oxCGHgEBU48a3Lp4S1rRjc8vVCxkhE5ZNej1bsY\"]},\"lib/v4-periphery/lib/v4-core/src/interfaces/IHooks.sol\":{\"keccak256\":\"0x556e093b73b1002371eb3cbc1f182e7ca948def61c321d2d566bdca7ab257697\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3af364d5189171800768f7a7b9c47d6714fe8e0532ac755ed1e22c91c17dabea\",\"dweb:/ipfs/QmX6kqyyRrHWZSg55PSnY8U5FAnMMhGA7Jwmj5uHGAcxcL\"]},\"lib/v4-periphery/lib/v4-core/src/interfaces/IPoolManager.sol\":{\"keccak256\":\"0xd682b9f3a6c6908c252a6bea95b7cf6631395dc6cff427e16af97210aedba854\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e52c885e336ddafcb3deea6cafafd0c5a469affa2013741cd021a87f8cf9f25e\",\"dweb:/ipfs/QmaAz8rqdpUY7hhN55Gwr5cF1fH7ZrNuVzXaEqqdzHCKGS\"]},\"lib/v4-periphery/lib/v4-core/src/interfaces/IProtocolFeeController.sol\":{\"keccak256\":\"0xc2d7f3605da9767e36cf25d4d4fa9b95663a6659e26ce28cf29b8b88acb79a4c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c7a43cda35b8a9254ed3e46cfd8649361f09121d17ef554bd3d190b9a8d57cc6\",\"dweb:/ipfs/QmRBDQoqCWddH5hY1JdxMyYtY8jMZhWAwtuFJBc3r8V31G\"]},\"lib/v4-periphery/lib/v4-core/src/interfaces/IProtocolFees.sol\":{\"keccak256\":\"0x8fc7260b141b65a5c3dc70ab869dce5725f1677075d2a51df293825170495c29\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ed86c9fe65d6bc88dec37bdb56338a5da3ead74bfa71b106f7c484d3f860e0a7\",\"dweb:/ipfs/QmQAx3YCg5JiCuz9kXyuqe1Y5B4zqiq5zgn5cKLhoK5Qrk\"]},\"lib/v4-periphery/lib/v4-core/src/interfaces/callback/IUnlockCallback.sol\":{\"keccak256\":\"0x58c82f2bd9d7c097ed09bd0991fedc403b0ec270eb3d0158bfb095c06a03d719\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://91168ca26a10980df2cdc3fbfe8ddf372c002b7ef19e3c59a0c9870d64198f1b\",\"dweb:/ipfs/QmUSpaM825vd1SwvF38esgbdLgYiPwefKaFERTWvUi6uSK\"]},\"lib/v4-periphery/lib/v4-core/src/interfaces/external/IERC20Minimal.sol\":{\"keccak256\":\"0xc1c23330c1511ecfd45c67a683962b4e2555b82f1dacd40cc8b46ae5a6e250e7\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://5ce10b7970482a65f9e9a365b810eeb154a5d4a8229a26653028d84b9622a410\",\"dweb:/ipfs/QmTSwXxZ2FTkM5duBZgbpFs8SRVDR5NPAnW4YimeDhb1s8\"]},\"lib/v4-periphery/lib/v4-core/src/interfaces/external/IERC6909Claims.sol\":{\"keccak256\":\"0xa586f345739e52b0488a0fe40b6e375cce67fdd25758408b0efcb5133ad96a48\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e8c557b7e52abdbbd82e415a1acc27921446a7fd090b7d4877e52be72619547f\",\"dweb:/ipfs/QmXE2KNPbXmGX8BQF3ei6zhzRTnhoTQg39XmqMnkhbr6QK\"]},\"lib/v4-periphery/lib/v4-core/src/libraries/CustomRevert.sol\":{\"keccak256\":\"0x745ca9c258d00fae52f293af065471f1bc1099de1bea4ceb52e312240ac52895\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://71eee0aa4e395f2c7fce16760d6547c6a12a6fd3dc56b94f4d44480fed538495\",\"dweb:/ipfs/QmPfJBiHzeVe9sx3PZ27jWrzJqF9atvevpYBC9j3Ekz9TG\"]},\"lib/v4-periphery/lib/v4-core/src/libraries/Hooks.sol\":{\"keccak256\":\"0x8142e347f4e139fe3c7b2182fb7933ce937def49b32164e6429ad59291151424\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://88dcd7b3f6f383f3c40b21507f7d6d7ebf4b3fd24c78b2f09e2137b7e18a7565\",\"dweb:/ipfs/QmWGtUCEBwqXCkA4EKmt6KrKxRFXiMszQLSe8AKu4EC1Kn\"]},\"lib/v4-periphery/lib/v4-core/src/libraries/LPFeeLibrary.sol\":{\"keccak256\":\"0x9cb794c60d4c867732b20a6cd14b965bf3a63df1161eb3cd28e2c9d0447db46f\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://3d987ee5738f74c3fb091db503b44ad6651e4e47554623182e0ecbe696bd7382\",\"dweb:/ipfs/QmW7Rt5qjD4mmRnvYcT2Fj7VPzBm1eT9w15WUHtfWmKEPh\"]},\"lib/v4-periphery/lib/v4-core/src/libraries/ParseBytes.sol\":{\"keccak256\":\"0xf0795198d1e651b0b33fd1708d80a14f501bb2a1486905676d35f364e880f579\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://5aea527fcec51d7274f0c189dc2479a6aa708fc91857187a4d7db46bb1d6c7a8\",\"dweb:/ipfs/QmUTrwTPSZ7EHBaTyfAA78rZVP17iQzmAmvDcQ8GhDRAEf\"]},\"lib/v4-periphery/lib/v4-core/src/libraries/SafeCast.sol\":{\"keccak256\":\"0x8060d21c4d54a431113f9a594b860e6a9bf1f346d0c7c02dfafe9847dd8a0591\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://e7f71b73d82965d1d949f388060f6f0daab7cd14718e260682918ec6fa0253b9\",\"dweb:/ipfs/QmP85jtFrCeV6Y8zuJfrrgiMy1shX3tHWs2wX7DMAB7Lft\"]},\"lib/v4-periphery/lib/v4-core/src/types/BalanceDelta.sol\":{\"keccak256\":\"0xa719c8fe51e0a9524280178f19f6851bcc3b3b60e73618f3d60905d35ae5569f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7436928dc9de35c6c7c5c636cb51adaf295cfd590da83b19a004ae33cbec9ef9\",\"dweb:/ipfs/QmRJ9yZkUpzk4433GX3LgVVL8jwpbSYSUwXcucKisf3v4H\"]},\"lib/v4-periphery/lib/v4-core/src/types/BeforeSwapDelta.sol\":{\"keccak256\":\"0x2a774312d91285313d569da1a718c909655da5432310417692097a1d4dc83a78\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a2c7a0379955cff9c17ab9e61f95e42909aa5947c22740f86ce940d09856f782\",\"dweb:/ipfs/QmaAuo8UBYXsGrVuKh8iRoAAdqwtg1jDq515cW1ZRP5m9K\"]},\"lib/v4-periphery/lib/v4-core/src/types/Currency.sol\":{\"keccak256\":\"0x35c74eae038ecfbbae48b0e13f2b9a43ac6d8da4847ffa0f1482e4e2d455ee74\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cadb54f9c89b6970583148e503a23c7b654aff1f3e6a0da57705c54e5b03b39f\",\"dweb:/ipfs/Qma3CKKwyzGwzHN4Z9HDJ4Q7J5VfbN594i8F2DTGWTMWcB\"]},\"lib/v4-periphery/lib/v4-core/src/types/PoolId.sol\":{\"keccak256\":\"0x308311916ea0f5c2fd878b6a2751eb223d170a69e33f601fae56dfe3c5d392af\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://669c2cd7ac17690b5d8831e0bda72822376c3a04b36afed6d31df4d75fe60918\",\"dweb:/ipfs/QmT6EpkxqU8VF3WsgrZ66F3s1cCQRffR95z1HDYZz7ph6y\"]},\"lib/v4-periphery/lib/v4-core/src/types/PoolKey.sol\":{\"keccak256\":\"0xf89856e0580d7a4856d3187a76858377ccee9d59702d230c338d84388221b786\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6f3118fa189025695c37fdf0bdd1190f085ad097484d3c88cf4c56d1db65f639\",\"dweb:/ipfs/QmamXpgtB8GV1CaFLvqefPWSoikLDhMk1yU4heBnVzU8gi\"]},\"lib/v4-periphery/src/base/ImmutableState.sol\":{\"keccak256\":\"0x12b175e4ed6d31da545e3b6c9930901568c99d153b1e51044d32e88f42b9b633\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://f4347899e0b3bfd66e8d79652b1a14a62a02d16bfece63a40c6efe0e5656c384\",\"dweb:/ipfs/QmSbbT8fefHstA72BqF7SDooDtmhs79dR8T6pWv8LxKU2L\"]},\"lib/v4-periphery/src/base/SafeCallback.sol\":{\"keccak256\":\"0x6284bd1d1fbe78a901e63dc70720e2bf19de6758347b050f8ba2b155e73325c5\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://3afb423a3c0f8b5f6436680ff3cde9247924d442a9720dc39b2b07a352607187\",\"dweb:/ipfs/QmaT5bMwiiqkp8KWUnHjWJz55Ah9vbpASzJagg9riHbpTf\"]},\"lib/v4-periphery/src/base/hooks/BaseHook.sol\":{\"keccak256\":\"0x734be8d61303f27e1dae3b54a0925c2c2458fa5858b4c303fa899aca39aea5cb\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://ad4d0f2c40953a5755a5ab9034675337a945411745a5d8595d9831a3de94a0a1\",\"dweb:/ipfs/QmZbGVJHoB7bnaAbKH1B47eQaJbQTXxz9PBvLgJsdiLMXC\"]},\"src/GasPriceFeesHook.sol\":{\"keccak256\":\"0xf2fd49ea1fbbb528f568be788b286ea904d512e1b3548ca2ffc2c43f1a7502e3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://590d72f024727d407338c34bd7cbd2895eec72c212395b9551984e067d0cbace\",\"dweb:/ipfs/QmVhsUhU59V5pCL1vDLfvHx1WSEt9ZkcBXKq9Upb49A8xZ\"]}},\"version\":1}",
    "metadata": {
        "compiler": {
            "version": "0.8.26+commit.8a97fa7a"
        },
        "language": "Solidity",
        "output": {
            "abi": [
                {
                    "inputs": [
                        {
                            "internalType": "contract IPoolManager",
                            "name": "_poolManager",
                            "type": "address"
                        }
                    ],
                    "stateMutability": "nonpayable",
                    "type": "constructor"
                },
                {
                    "inputs": [],
                    "type": "error",
                    "name": "HookNotImplemented"
                },
                {
                    "inputs": [],
                    "type": "error",
                    "name": "InvalidPool"
                },
                {
                    "inputs": [],
                    "type": "error",
                    "name": "LockFailure"
                },
                {
                    "inputs": [],
                    "type": "error",
                    "name": "MustUseDynamicFee"
                },
                {
                    "inputs": [],
                    "type": "error",
                    "name": "NotPoolManager"
                },
                {
                    "inputs": [],
                    "type": "error",
                    "name": "NotSelf"
                },
                {
                    "inputs": [],
                    "stateMutability": "view",
                    "type": "function",
                    "name": "BASE_FEE",
                    "outputs": [
                        {
                            "internalType": "uint24",
                            "name": "",
                            "type": "uint24"
                        }
                    ]
                },
                {
                    "inputs": [
                        {
                            "internalType": "address",
                            "name": "",
                            "type": "address"
                        },
                        {
                            "internalType": "struct PoolKey",
                            "name": "",
                            "type": "tuple",
                            "components": [
                                {
                                    "internalType": "Currency",
                                    "name": "currency0",
                                    "type": "address"
                                },
                                {
                                    "internalType": "Currency",
                                    "name": "currency1",
                                    "type": "address"
                                },
                                {
                                    "internalType": "uint24",
                                    "name": "fee",
                                    "type": "uint24"
                                },
                                {
                                    "internalType": "int24",
                                    "name": "tickSpacing",
                                    "type": "int24"
                                },
                                {
                                    "internalType": "contract IHooks",
                                    "name": "hooks",
                                    "type": "address"
                                }
                            ]
                        },
                        {
                            "internalType": "struct IPoolManager.ModifyLiquidityParams",
                            "name": "",
                            "type": "tuple",
                            "components": [
                                {
                                    "internalType": "int24",
                                    "name": "tickLower",
                                    "type": "int24"
                                },
                                {
                                    "internalType": "int24",
                                    "name": "tickUpper",
                                    "type": "int24"
                                },
                                {
                                    "internalType": "int256",
                                    "name": "liquidityDelta",
                                    "type": "int256"
                                },
                                {
                                    "internalType": "bytes32",
                                    "name": "salt",
                                    "type": "bytes32"
                                }
                            ]
                        },
                        {
                            "internalType": "BalanceDelta",
                            "name": "",
                            "type": "int256"
                        },
                        {
                            "internalType": "BalanceDelta",
                            "name": "",
                            "type": "int256"
                        },
                        {
                            "internalType": "bytes",
                            "name": "",
                            "type": "bytes"
                        }
                    ],
                    "stateMutability": "nonpayable",
                    "type": "function",
                    "name": "afterAddLiquidity",
                    "outputs": [
                        {
                            "internalType": "bytes4",
                            "name": "",
                            "type": "bytes4"
                        },
                        {
                            "internalType": "BalanceDelta",
                            "name": "",
                            "type": "int256"
                        }
                    ]
                },
                {
                    "inputs": [
                        {
                            "internalType": "address",
                            "name": "",
                            "type": "address"
                        },
                        {
                            "internalType": "struct PoolKey",
                            "name": "",
                            "type": "tuple",
                            "components": [
                                {
                                    "internalType": "Currency",
                                    "name": "currency0",
                                    "type": "address"
                                },
                                {
                                    "internalType": "Currency",
                                    "name": "currency1",
                                    "type": "address"
                                },
                                {
                                    "internalType": "uint24",
                                    "name": "fee",
                                    "type": "uint24"
                                },
                                {
                                    "internalType": "int24",
                                    "name": "tickSpacing",
                                    "type": "int24"
                                },
                                {
                                    "internalType": "contract IHooks",
                                    "name": "hooks",
                                    "type": "address"
                                }
                            ]
                        },
                        {
                            "internalType": "uint256",
                            "name": "",
                            "type": "uint256"
                        },
                        {
                            "internalType": "uint256",
                            "name": "",
                            "type": "uint256"
                        },
                        {
                            "internalType": "bytes",
                            "name": "",
                            "type": "bytes"
                        }
                    ],
                    "stateMutability": "nonpayable",
                    "type": "function",
                    "name": "afterDonate",
                    "outputs": [
                        {
                            "internalType": "bytes4",
                            "name": "",
                            "type": "bytes4"
                        }
                    ]
                },
                {
                    "inputs": [
                        {
                            "internalType": "address",
                            "name": "",
                            "type": "address"
                        },
                        {
                            "internalType": "struct PoolKey",
                            "name": "",
                            "type": "tuple",
                            "components": [
                                {
                                    "internalType": "Currency",
                                    "name": "currency0",
                                    "type": "address"
                                },
                                {
                                    "internalType": "Currency",
                                    "name": "currency1",
                                    "type": "address"
                                },
                                {
                                    "internalType": "uint24",
                                    "name": "fee",
                                    "type": "uint24"
                                },
                                {
                                    "internalType": "int24",
                                    "name": "tickSpacing",
                                    "type": "int24"
                                },
                                {
                                    "internalType": "contract IHooks",
                                    "name": "hooks",
                                    "type": "address"
                                }
                            ]
                        },
                        {
                            "internalType": "uint160",
                            "name": "",
                            "type": "uint160"
                        },
                        {
                            "internalType": "int24",
                            "name": "",
                            "type": "int24"
                        }
                    ],
                    "stateMutability": "nonpayable",
                    "type": "function",
                    "name": "afterInitialize",
                    "outputs": [
                        {
                            "internalType": "bytes4",
                            "name": "",
                            "type": "bytes4"
                        }
                    ]
                },
                {
                    "inputs": [
                        {
                            "internalType": "address",
                            "name": "",
                            "type": "address"
                        },
                        {
                            "internalType": "struct PoolKey",
                            "name": "",
                            "type": "tuple",
                            "components": [
                                {
                                    "internalType": "Currency",
                                    "name": "currency0",
                                    "type": "address"
                                },
                                {
                                    "internalType": "Currency",
                                    "name": "currency1",
                                    "type": "address"
                                },
                                {
                                    "internalType": "uint24",
                                    "name": "fee",
                                    "type": "uint24"
                                },
                                {
                                    "internalType": "int24",
                                    "name": "tickSpacing",
                                    "type": "int24"
                                },
                                {
                                    "internalType": "contract IHooks",
                                    "name": "hooks",
                                    "type": "address"
                                }
                            ]
                        },
                        {
                            "internalType": "struct IPoolManager.ModifyLiquidityParams",
                            "name": "",
                            "type": "tuple",
                            "components": [
                                {
                                    "internalType": "int24",
                                    "name": "tickLower",
                                    "type": "int24"
                                },
                                {
                                    "internalType": "int24",
                                    "name": "tickUpper",
                                    "type": "int24"
                                },
                                {
                                    "internalType": "int256",
                                    "name": "liquidityDelta",
                                    "type": "int256"
                                },
                                {
                                    "internalType": "bytes32",
                                    "name": "salt",
                                    "type": "bytes32"
                                }
                            ]
                        },
                        {
                            "internalType": "BalanceDelta",
                            "name": "",
                            "type": "int256"
                        },
                        {
                            "internalType": "BalanceDelta",
                            "name": "",
                            "type": "int256"
                        },
                        {
                            "internalType": "bytes",
                            "name": "",
                            "type": "bytes"
                        }
                    ],
                    "stateMutability": "nonpayable",
                    "type": "function",
                    "name": "afterRemoveLiquidity",
                    "outputs": [
                        {
                            "internalType": "bytes4",
                            "name": "",
                            "type": "bytes4"
                        },
                        {
                            "internalType": "BalanceDelta",
                            "name": "",
                            "type": "int256"
                        }
                    ]
                },
                {
                    "inputs": [
                        {
                            "internalType": "address",
                            "name": "",
                            "type": "address"
                        },
                        {
                            "internalType": "struct PoolKey",
                            "name": "",
                            "type": "tuple",
                            "components": [
                                {
                                    "internalType": "Currency",
                                    "name": "currency0",
                                    "type": "address"
                                },
                                {
                                    "internalType": "Currency",
                                    "name": "currency1",
                                    "type": "address"
                                },
                                {
                                    "internalType": "uint24",
                                    "name": "fee",
                                    "type": "uint24"
                                },
                                {
                                    "internalType": "int24",
                                    "name": "tickSpacing",
                                    "type": "int24"
                                },
                                {
                                    "internalType": "contract IHooks",
                                    "name": "hooks",
                                    "type": "address"
                                }
                            ]
                        },
                        {
                            "internalType": "struct IPoolManager.SwapParams",
                            "name": "",
                            "type": "tuple",
                            "components": [
                                {
                                    "internalType": "bool",
                                    "name": "zeroForOne",
                                    "type": "bool"
                                },
                                {
                                    "internalType": "int256",
                                    "name": "amountSpecified",
                                    "type": "int256"
                                },
                                {
                                    "internalType": "uint160",
                                    "name": "sqrtPriceLimitX96",
                                    "type": "uint160"
                                }
                            ]
                        },
                        {
                            "internalType": "BalanceDelta",
                            "name": "",
                            "type": "int256"
                        },
                        {
                            "internalType": "bytes",
                            "name": "",
                            "type": "bytes"
                        }
                    ],
                    "stateMutability": "nonpayable",
                    "type": "function",
                    "name": "afterSwap",
                    "outputs": [
                        {
                            "internalType": "bytes4",
                            "name": "",
                            "type": "bytes4"
                        },
                        {
                            "internalType": "int128",
                            "name": "",
                            "type": "int128"
                        }
                    ]
                },
                {
                    "inputs": [
                        {
                            "internalType": "address",
                            "name": "",
                            "type": "address"
                        },
                        {
                            "internalType": "struct PoolKey",
                            "name": "",
                            "type": "tuple",
                            "components": [
                                {
                                    "internalType": "Currency",
                                    "name": "currency0",
                                    "type": "address"
                                },
                                {
                                    "internalType": "Currency",
                                    "name": "currency1",
                                    "type": "address"
                                },
                                {
                                    "internalType": "uint24",
                                    "name": "fee",
                                    "type": "uint24"
                                },
                                {
                                    "internalType": "int24",
                                    "name": "tickSpacing",
                                    "type": "int24"
                                },
                                {
                                    "internalType": "contract IHooks",
                                    "name": "hooks",
                                    "type": "address"
                                }
                            ]
                        },
                        {
                            "internalType": "struct IPoolManager.ModifyLiquidityParams",
                            "name": "",
                            "type": "tuple",
                            "components": [
                                {
                                    "internalType": "int24",
                                    "name": "tickLower",
                                    "type": "int24"
                                },
                                {
                                    "internalType": "int24",
                                    "name": "tickUpper",
                                    "type": "int24"
                                },
                                {
                                    "internalType": "int256",
                                    "name": "liquidityDelta",
                                    "type": "int256"
                                },
                                {
                                    "internalType": "bytes32",
                                    "name": "salt",
                                    "type": "bytes32"
                                }
                            ]
                        },
                        {
                            "internalType": "bytes",
                            "name": "",
                            "type": "bytes"
                        }
                    ],
                    "stateMutability": "nonpayable",
                    "type": "function",
                    "name": "beforeAddLiquidity",
                    "outputs": [
                        {
                            "internalType": "bytes4",
                            "name": "",
                            "type": "bytes4"
                        }
                    ]
                },
                {
                    "inputs": [
                        {
                            "internalType": "address",
                            "name": "",
                            "type": "address"
                        },
                        {
                            "internalType": "struct PoolKey",
                            "name": "",
                            "type": "tuple",
                            "components": [
                                {
                                    "internalType": "Currency",
                                    "name": "currency0",
                                    "type": "address"
                                },
                                {
                                    "internalType": "Currency",
                                    "name": "currency1",
                                    "type": "address"
                                },
                                {
                                    "internalType": "uint24",
                                    "name": "fee",
                                    "type": "uint24"
                                },
                                {
                                    "internalType": "int24",
                                    "name": "tickSpacing",
                                    "type": "int24"
                                },
                                {
                                    "internalType": "contract IHooks",
                                    "name": "hooks",
                                    "type": "address"
                                }
                            ]
                        },
                        {
                            "internalType": "uint256",
                            "name": "",
                            "type": "uint256"
                        },
                        {
                            "internalType": "uint256",
                            "name": "",
                            "type": "uint256"
                        },
                        {
                            "internalType": "bytes",
                            "name": "",
                            "type": "bytes"
                        }
                    ],
                    "stateMutability": "nonpayable",
                    "type": "function",
                    "name": "beforeDonate",
                    "outputs": [
                        {
                            "internalType": "bytes4",
                            "name": "",
                            "type": "bytes4"
                        }
                    ]
                },
                {
                    "inputs": [
                        {
                            "internalType": "address",
                            "name": "",
                            "type": "address"
                        },
                        {
                            "internalType": "struct PoolKey",
                            "name": "key",
                            "type": "tuple",
                            "components": [
                                {
                                    "internalType": "Currency",
                                    "name": "currency0",
                                    "type": "address"
                                },
                                {
                                    "internalType": "Currency",
                                    "name": "currency1",
                                    "type": "address"
                                },
                                {
                                    "internalType": "uint24",
                                    "name": "fee",
                                    "type": "uint24"
                                },
                                {
                                    "internalType": "int24",
                                    "name": "tickSpacing",
                                    "type": "int24"
                                },
                                {
                                    "internalType": "contract IHooks",
                                    "name": "hooks",
                                    "type": "address"
                                }
                            ]
                        },
                        {
                            "internalType": "uint160",
                            "name": "",
                            "type": "uint160"
                        }
                    ],
                    "stateMutability": "nonpayable",
                    "type": "function",
                    "name": "beforeInitialize",
                    "outputs": [
                        {
                            "internalType": "bytes4",
                            "name": "",
                            "type": "bytes4"
                        }
                    ]
                },
                {
                    "inputs": [
                        {
                            "internalType": "address",
                            "name": "",
                            "type": "address"
                        },
                        {
                            "internalType": "struct PoolKey",
                            "name": "",
                            "type": "tuple",
                            "components": [
                                {
                                    "internalType": "Currency",
                                    "name": "currency0",
                                    "type": "address"
                                },
                                {
                                    "internalType": "Currency",
                                    "name": "currency1",
                                    "type": "address"
                                },
                                {
                                    "internalType": "uint24",
                                    "name": "fee",
                                    "type": "uint24"
                                },
                                {
                                    "internalType": "int24",
                                    "name": "tickSpacing",
                                    "type": "int24"
                                },
                                {
                                    "internalType": "contract IHooks",
                                    "name": "hooks",
                                    "type": "address"
                                }
                            ]
                        },
                        {
                            "internalType": "struct IPoolManager.ModifyLiquidityParams",
                            "name": "",
                            "type": "tuple",
                            "components": [
                                {
                                    "internalType": "int24",
                                    "name": "tickLower",
                                    "type": "int24"
                                },
                                {
                                    "internalType": "int24",
                                    "name": "tickUpper",
                                    "type": "int24"
                                },
                                {
                                    "internalType": "int256",
                                    "name": "liquidityDelta",
                                    "type": "int256"
                                },
                                {
                                    "internalType": "bytes32",
                                    "name": "salt",
                                    "type": "bytes32"
                                }
                            ]
                        },
                        {
                            "internalType": "bytes",
                            "name": "",
                            "type": "bytes"
                        }
                    ],
                    "stateMutability": "nonpayable",
                    "type": "function",
                    "name": "beforeRemoveLiquidity",
                    "outputs": [
                        {
                            "internalType": "bytes4",
                            "name": "",
                            "type": "bytes4"
                        }
                    ]
                },
                {
                    "inputs": [
                        {
                            "internalType": "address",
                            "name": "",
                            "type": "address"
                        },
                        {
                            "internalType": "struct PoolKey",
                            "name": "key",
                            "type": "tuple",
                            "components": [
                                {
                                    "internalType": "Currency",
                                    "name": "currency0",
                                    "type": "address"
                                },
                                {
                                    "internalType": "Currency",
                                    "name": "currency1",
                                    "type": "address"
                                },
                                {
                                    "internalType": "uint24",
                                    "name": "fee",
                                    "type": "uint24"
                                },
                                {
                                    "internalType": "int24",
                                    "name": "tickSpacing",
                                    "type": "int24"
                                },
                                {
                                    "internalType": "contract IHooks",
                                    "name": "hooks",
                                    "type": "address"
                                }
                            ]
                        },
                        {
                            "internalType": "struct IPoolManager.SwapParams",
                            "name": "",
                            "type": "tuple",
                            "components": [
                                {
                                    "internalType": "bool",
                                    "name": "zeroForOne",
                                    "type": "bool"
                                },
                                {
                                    "internalType": "int256",
                                    "name": "amountSpecified",
                                    "type": "int256"
                                },
                                {
                                    "internalType": "uint160",
                                    "name": "sqrtPriceLimitX96",
                                    "type": "uint160"
                                }
                            ]
                        },
                        {
                            "internalType": "bytes",
                            "name": "",
                            "type": "bytes"
                        }
                    ],
                    "stateMutability": "nonpayable",
                    "type": "function",
                    "name": "beforeSwap",
                    "outputs": [
                        {
                            "internalType": "bytes4",
                            "name": "",
                            "type": "bytes4"
                        },
                        {
                            "internalType": "BeforeSwapDelta",
                            "name": "",
                            "type": "int256"
                        },
                        {
                            "internalType": "uint24",
                            "name": "",
                            "type": "uint24"
                        }
                    ]
                },
                {
                    "inputs": [],
                    "stateMutability": "pure",
                    "type": "function",
                    "name": "getHookPermissions",
                    "outputs": [
                        {
                            "internalType": "struct Hooks.Permissions",
                            "name": "",
                            "type": "tuple",
                            "components": [
                                {
                                    "internalType": "bool",
                                    "name": "beforeInitialize",
                                    "type": "bool"
                                },
                                {
                                    "internalType": "bool",
                                    "name": "afterInitialize",
                                    "type": "bool"
                                },
                                {
                                    "internalType": "bool",
                                    "name": "beforeAddLiquidity",
                                    "type": "bool"
                                },
                                {
                                    "internalType": "bool",
                                    "name": "afterAddLiquidity",
                                    "type": "bool"
                                },
                                {
                                    "internalType": "bool",
                                    "name": "beforeRemoveLiquidity",
                                    "type": "bool"
                                },
                                {
                                    "internalType": "bool",
                                    "name": "afterRemoveLiquidity",
                                    "type": "bool"
                                },
                                {
                                    "internalType": "bool",
                                    "name": "beforeSwap",
                                    "type": "bool"
                                },
                                {
                                    "internalType": "bool",
                                    "name": "afterSwap",
                                    "type": "bool"
                                },
                                {
                                    "internalType": "bool",
                                    "name": "beforeDonate",
                                    "type": "bool"
                                },
                                {
                                    "internalType": "bool",
                                    "name": "afterDonate",
                                    "type": "bool"
                                },
                                {
                                    "internalType": "bool",
                                    "name": "beforeSwapReturnDelta",
                                    "type": "bool"
                                },
                                {
                                    "internalType": "bool",
                                    "name": "afterSwapReturnDelta",
                                    "type": "bool"
                                },
                                {
                                    "internalType": "bool",
                                    "name": "afterAddLiquidityReturnDelta",
                                    "type": "bool"
                                },
                                {
                                    "internalType": "bool",
                                    "name": "afterRemoveLiquidityReturnDelta",
                                    "type": "bool"
                                }
                            ]
                        }
                    ]
                },
                {
                    "inputs": [],
                    "stateMutability": "view",
                    "type": "function",
                    "name": "movingAverageGasPrice",
                    "outputs": [
                        {
                            "internalType": "uint128",
                            "name": "",
                            "type": "uint128"
                        }
                    ]
                },
                {
                    "inputs": [],
                    "stateMutability": "view",
                    "type": "function",
                    "name": "movingAverageGasPriceCount",
                    "outputs": [
                        {
                            "internalType": "uint104",
                            "name": "",
                            "type": "uint104"
                        }
                    ]
                },
                {
                    "inputs": [],
                    "stateMutability": "view",
                    "type": "function",
                    "name": "poolManager",
                    "outputs": [
                        {
                            "internalType": "contract IPoolManager",
                            "name": "",
                            "type": "address"
                        }
                    ]
                },
                {
                    "inputs": [
                        {
                            "internalType": "bytes",
                            "name": "data",
                            "type": "bytes"
                        }
                    ],
                    "stateMutability": "nonpayable",
                    "type": "function",
                    "name": "unlockCallback",
                    "outputs": [
                        {
                            "internalType": "bytes",
                            "name": "",
                            "type": "bytes"
                        }
                    ]
                }
            ],
            "devdoc": {
                "kind": "dev",
                "methods": {
                    "afterAddLiquidity(address,(address,address,uint24,int24,address),(int24,int24,int256,bytes32),int256,int256,bytes)": {
                        "params": {
                            "delta": "The caller's balance delta after adding liquidity; the sum of principal delta, fees accrued, and hook delta",
                            "feesAccrued": "The fees accrued since the last time fees were collected from this position",
                            "hookData": "Arbitrary data handed into the PoolManager by the liquidity provider to be passed on to the hook",
                            "key": "The key for the pool",
                            "params": "The parameters for adding liquidity",
                            "sender": "The initial msg.sender for the add liquidity call"
                        },
                        "returns": {
                            "_0": "bytes4 The function selector for the hook",
                            "_1": "BalanceDelta The hook's delta in token0 and token1. Positive: the hook is owed/took currency, negative: the hook owes/sent currency"
                        }
                    },
                    "afterDonate(address,(address,address,uint24,int24,address),uint256,uint256,bytes)": {
                        "params": {
                            "amount0": "The amount of token0 being donated",
                            "amount1": "The amount of token1 being donated",
                            "hookData": "Arbitrary data handed into the PoolManager by the donor to be be passed on to the hook",
                            "key": "The key for the pool",
                            "sender": "The initial msg.sender for the donate call"
                        },
                        "returns": {
                            "_0": "bytes4 The function selector for the hook"
                        }
                    },
                    "afterInitialize(address,(address,address,uint24,int24,address),uint160,int24)": {
                        "params": {
                            "key": "The key for the pool being initialized",
                            "sender": "The initial msg.sender for the initialize call",
                            "sqrtPriceX96": "The sqrt(price) of the pool as a Q64.96",
                            "tick": "The current tick after the state of a pool is initialized"
                        },
                        "returns": {
                            "_0": "bytes4 The function selector for the hook"
                        }
                    },
                    "afterRemoveLiquidity(address,(address,address,uint24,int24,address),(int24,int24,int256,bytes32),int256,int256,bytes)": {
                        "params": {
                            "delta": "The caller's balance delta after adding liquidity; the sum of principal delta, fees accrued, and hook delta",
                            "feesAccrued": "The fees accrued since the last time fees were collected from this position",
                            "hookData": "Arbitrary data handed into the PoolManager by the liquidity provider to be be passed on to the hook",
                            "key": "The key for the pool",
                            "params": "The parameters for removing liquidity",
                            "sender": "The initial msg.sender for the remove liquidity call"
                        },
                        "returns": {
                            "_0": "bytes4 The function selector for the hook",
                            "_1": "BalanceDelta The hook's delta in token0 and token1. Positive: the hook is owed/took currency, negative: the hook owes/sent currency"
                        }
                    },
                    "afterSwap(address,(address,address,uint24,int24,address),(bool,int256,uint160),int256,bytes)": {
                        "params": {
                            "delta": "The amount owed to the caller (positive) or owed to the pool (negative)",
                            "hookData": "Arbitrary data handed into the PoolManager by the swapper to be be passed on to the hook",
                            "key": "The key for the pool",
                            "params": "The parameters for the swap",
                            "sender": "The initial msg.sender for the swap call"
                        },
                        "returns": {
                            "_0": "bytes4 The function selector for the hook",
                            "_1": "int128 The hook's delta in unspecified currency. Positive: the hook is owed/took currency, negative: the hook owes/sent currency"
                        }
                    },
                    "beforeAddLiquidity(address,(address,address,uint24,int24,address),(int24,int24,int256,bytes32),bytes)": {
                        "params": {
                            "hookData": "Arbitrary data handed into the PoolManager by the liquidity provider to be passed on to the hook",
                            "key": "The key for the pool",
                            "params": "The parameters for adding liquidity",
                            "sender": "The initial msg.sender for the add liquidity call"
                        },
                        "returns": {
                            "_0": "bytes4 The function selector for the hook"
                        }
                    },
                    "beforeDonate(address,(address,address,uint24,int24,address),uint256,uint256,bytes)": {
                        "params": {
                            "amount0": "The amount of token0 being donated",
                            "amount1": "The amount of token1 being donated",
                            "hookData": "Arbitrary data handed into the PoolManager by the donor to be be passed on to the hook",
                            "key": "The key for the pool",
                            "sender": "The initial msg.sender for the donate call"
                        },
                        "returns": {
                            "_0": "bytes4 The function selector for the hook"
                        }
                    },
                    "beforeRemoveLiquidity(address,(address,address,uint24,int24,address),(int24,int24,int256,bytes32),bytes)": {
                        "params": {
                            "hookData": "Arbitrary data handed into the PoolManager by the liquidity provider to be be passed on to the hook",
                            "key": "The key for the pool",
                            "params": "The parameters for removing liquidity",
                            "sender": "The initial msg.sender for the remove liquidity call"
                        },
                        "returns": {
                            "_0": "bytes4 The function selector for the hook"
                        }
                    },
                    "getHookPermissions()": {
                        "details": "Used at deployment to validate the address correctly represents the expected permissions"
                    },
                    "unlockCallback(bytes)": {
                        "details": "We force the onlyPoolManager modifier by exposing a virtual function after the onlyPoolManager check.",
                        "params": {
                            "data": "The data that was passed to the call to unlock"
                        },
                        "returns": {
                            "_0": "Any data that you want to be returned from the unlock call"
                        }
                    }
                },
                "version": 1
            },
            "userdoc": {
                "kind": "user",
                "methods": {
                    "afterAddLiquidity(address,(address,address,uint24,int24,address),(int24,int24,int256,bytes32),int256,int256,bytes)": {
                        "notice": "The hook called after liquidity is added"
                    },
                    "afterDonate(address,(address,address,uint24,int24,address),uint256,uint256,bytes)": {
                        "notice": "The hook called after donate"
                    },
                    "afterInitialize(address,(address,address,uint24,int24,address),uint160,int24)": {
                        "notice": "The hook called after the state of a pool is initialized"
                    },
                    "afterRemoveLiquidity(address,(address,address,uint24,int24,address),(int24,int24,int256,bytes32),int256,int256,bytes)": {
                        "notice": "The hook called after liquidity is removed"
                    },
                    "afterSwap(address,(address,address,uint24,int24,address),(bool,int256,uint160),int256,bytes)": {
                        "notice": "The hook called after a swap"
                    },
                    "beforeAddLiquidity(address,(address,address,uint24,int24,address),(int24,int24,int256,bytes32),bytes)": {
                        "notice": "The hook called before liquidity is added"
                    },
                    "beforeDonate(address,(address,address,uint24,int24,address),uint256,uint256,bytes)": {
                        "notice": "The hook called before donate"
                    },
                    "beforeRemoveLiquidity(address,(address,address,uint24,int24,address),(int24,int24,int256,bytes32),bytes)": {
                        "notice": "The hook called before liquidity is removed"
                    },
                    "getHookPermissions()": {
                        "notice": "Returns a struct of permissions to signal which hook functions are to be implemented"
                    },
                    "poolManager()": {
                        "notice": "The Uniswap v4 PoolManager contract"
                    },
                    "unlockCallback(bytes)": {
                        "notice": "Called by the pool manager on `msg.sender` when the manager is unlocked"
                    }
                },
                "version": 1
            }
        },
        "settings": {
            "remappings": [
                "@ensdomains/=lib/v4-periphery/lib/v4-core/node_modules/@ensdomains/",
                "@openzeppelin/=lib/v4-periphery/lib/v4-core/lib/openzeppelin-contracts/",
                "@openzeppelin/contracts/=lib/v4-periphery/lib/v4-core/lib/openzeppelin-contracts/contracts/",
                "@uniswap/v4-core/=lib/v4-periphery/lib/v4-core/",
                "ds-test/=lib/v4-periphery/lib/v4-core/lib/forge-std/lib/ds-test/src/",
                "erc4626-tests/=lib/v4-periphery/lib/v4-core/lib/openzeppelin-contracts/lib/erc4626-tests/",
                "forge-gas-snapshot/=lib/v4-periphery/lib/v4-core/lib/forge-gas-snapshot/src/",
                "forge-std/=lib/forge-std/src/",
                "hardhat/=lib/v4-periphery/lib/v4-core/node_modules/hardhat/",
                "openzeppelin-contracts/=lib/v4-periphery/lib/v4-core/lib/openzeppelin-contracts/",
                "permit2/=lib/v4-periphery/lib/permit2/",
                "solmate/=lib/v4-periphery/lib/v4-core/lib/solmate/",
                "v4-core/=lib/v4-periphery/lib/v4-core/src/",
                "v4-periphery/=lib/v4-periphery/"
            ],
            "optimizer": {
                "enabled": true,
                "runs": 800
            },
            "metadata": {
                "bytecodeHash": "ipfs"
            },
            "compilationTarget": {
                "src/GasPriceFeesHook.sol": "GasPriceFeesHook"
            },
            "evmVersion": "cancun",
            "libraries": {}
        },
        "sources": {
            "lib/v4-periphery/lib/v4-core/src/interfaces/IExtsload.sol": {
                "keccak256": "0x80b53ca4907d6f0088c3b931f2b72cad1dc4615a95094d96bd0fb8dff8d5ba43",
                "urls": [
                    "bzz-raw://375c69148622aab7a3537d5fd37d373a8e9731022c8d87bdaee46233b0a99fe1",
                    "dweb:/ipfs/QmXFjdoYRxsA5B1kyuxEXgNf3FBoL1zPvy26Qy8EtpdFRN"
                ],
                "license": "MIT"
            },
            "lib/v4-periphery/lib/v4-core/src/interfaces/IExttload.sol": {
                "keccak256": "0xc6b68283ebd8d1c789df536756726eed51c589134bb20821b236a0d22a135937",
                "urls": [
                    "bzz-raw://294394f72dfc219689209f4130d85601dfd0d63c8d47578050d312db70f9b6c8",
                    "dweb:/ipfs/QmTDMQ3oxCGHgEBU48a3Lp4S1rRjc8vVCxkhE5ZNej1bsY"
                ],
                "license": "MIT"
            },
            "lib/v4-periphery/lib/v4-core/src/interfaces/IHooks.sol": {
                "keccak256": "0x556e093b73b1002371eb3cbc1f182e7ca948def61c321d2d566bdca7ab257697",
                "urls": [
                    "bzz-raw://3af364d5189171800768f7a7b9c47d6714fe8e0532ac755ed1e22c91c17dabea",
                    "dweb:/ipfs/QmX6kqyyRrHWZSg55PSnY8U5FAnMMhGA7Jwmj5uHGAcxcL"
                ],
                "license": "MIT"
            },
            "lib/v4-periphery/lib/v4-core/src/interfaces/IPoolManager.sol": {
                "keccak256": "0xd682b9f3a6c6908c252a6bea95b7cf6631395dc6cff427e16af97210aedba854",
                "urls": [
                    "bzz-raw://e52c885e336ddafcb3deea6cafafd0c5a469affa2013741cd021a87f8cf9f25e",
                    "dweb:/ipfs/QmaAz8rqdpUY7hhN55Gwr5cF1fH7ZrNuVzXaEqqdzHCKGS"
                ],
                "license": "MIT"
            },
            "lib/v4-periphery/lib/v4-core/src/interfaces/IProtocolFeeController.sol": {
                "keccak256": "0xc2d7f3605da9767e36cf25d4d4fa9b95663a6659e26ce28cf29b8b88acb79a4c",
                "urls": [
                    "bzz-raw://c7a43cda35b8a9254ed3e46cfd8649361f09121d17ef554bd3d190b9a8d57cc6",
                    "dweb:/ipfs/QmRBDQoqCWddH5hY1JdxMyYtY8jMZhWAwtuFJBc3r8V31G"
                ],
                "license": "MIT"
            },
            "lib/v4-periphery/lib/v4-core/src/interfaces/IProtocolFees.sol": {
                "keccak256": "0x8fc7260b141b65a5c3dc70ab869dce5725f1677075d2a51df293825170495c29",
                "urls": [
                    "bzz-raw://ed86c9fe65d6bc88dec37bdb56338a5da3ead74bfa71b106f7c484d3f860e0a7",
                    "dweb:/ipfs/QmQAx3YCg5JiCuz9kXyuqe1Y5B4zqiq5zgn5cKLhoK5Qrk"
                ],
                "license": "MIT"
            },
            "lib/v4-periphery/lib/v4-core/src/interfaces/callback/IUnlockCallback.sol": {
                "keccak256": "0x58c82f2bd9d7c097ed09bd0991fedc403b0ec270eb3d0158bfb095c06a03d719",
                "urls": [
                    "bzz-raw://91168ca26a10980df2cdc3fbfe8ddf372c002b7ef19e3c59a0c9870d64198f1b",
                    "dweb:/ipfs/QmUSpaM825vd1SwvF38esgbdLgYiPwefKaFERTWvUi6uSK"
                ],
                "license": "MIT"
            },
            "lib/v4-periphery/lib/v4-core/src/interfaces/external/IERC20Minimal.sol": {
                "keccak256": "0xc1c23330c1511ecfd45c67a683962b4e2555b82f1dacd40cc8b46ae5a6e250e7",
                "urls": [
                    "bzz-raw://5ce10b7970482a65f9e9a365b810eeb154a5d4a8229a26653028d84b9622a410",
                    "dweb:/ipfs/QmTSwXxZ2FTkM5duBZgbpFs8SRVDR5NPAnW4YimeDhb1s8"
                ],
                "license": "GPL-2.0-or-later"
            },
            "lib/v4-periphery/lib/v4-core/src/interfaces/external/IERC6909Claims.sol": {
                "keccak256": "0xa586f345739e52b0488a0fe40b6e375cce67fdd25758408b0efcb5133ad96a48",
                "urls": [
                    "bzz-raw://e8c557b7e52abdbbd82e415a1acc27921446a7fd090b7d4877e52be72619547f",
                    "dweb:/ipfs/QmXE2KNPbXmGX8BQF3ei6zhzRTnhoTQg39XmqMnkhbr6QK"
                ],
                "license": "MIT"
            },
            "lib/v4-periphery/lib/v4-core/src/libraries/CustomRevert.sol": {
                "keccak256": "0x745ca9c258d00fae52f293af065471f1bc1099de1bea4ceb52e312240ac52895",
                "urls": [
                    "bzz-raw://71eee0aa4e395f2c7fce16760d6547c6a12a6fd3dc56b94f4d44480fed538495",
                    "dweb:/ipfs/QmPfJBiHzeVe9sx3PZ27jWrzJqF9atvevpYBC9j3Ekz9TG"
                ],
                "license": "MIT"
            },
            "lib/v4-periphery/lib/v4-core/src/libraries/Hooks.sol": {
                "keccak256": "0x8142e347f4e139fe3c7b2182fb7933ce937def49b32164e6429ad59291151424",
                "urls": [
                    "bzz-raw://88dcd7b3f6f383f3c40b21507f7d6d7ebf4b3fd24c78b2f09e2137b7e18a7565",
                    "dweb:/ipfs/QmWGtUCEBwqXCkA4EKmt6KrKxRFXiMszQLSe8AKu4EC1Kn"
                ],
                "license": "MIT"
            },
            "lib/v4-periphery/lib/v4-core/src/libraries/LPFeeLibrary.sol": {
                "keccak256": "0x9cb794c60d4c867732b20a6cd14b965bf3a63df1161eb3cd28e2c9d0447db46f",
                "urls": [
                    "bzz-raw://3d987ee5738f74c3fb091db503b44ad6651e4e47554623182e0ecbe696bd7382",
                    "dweb:/ipfs/QmW7Rt5qjD4mmRnvYcT2Fj7VPzBm1eT9w15WUHtfWmKEPh"
                ],
                "license": "GPL-2.0-or-later"
            },
            "lib/v4-periphery/lib/v4-core/src/libraries/ParseBytes.sol": {
                "keccak256": "0xf0795198d1e651b0b33fd1708d80a14f501bb2a1486905676d35f364e880f579",
                "urls": [
                    "bzz-raw://5aea527fcec51d7274f0c189dc2479a6aa708fc91857187a4d7db46bb1d6c7a8",
                    "dweb:/ipfs/QmUTrwTPSZ7EHBaTyfAA78rZVP17iQzmAmvDcQ8GhDRAEf"
                ],
                "license": "GPL-2.0-or-later"
            },
            "lib/v4-periphery/lib/v4-core/src/libraries/SafeCast.sol": {
                "keccak256": "0x8060d21c4d54a431113f9a594b860e6a9bf1f346d0c7c02dfafe9847dd8a0591",
                "urls": [
                    "bzz-raw://e7f71b73d82965d1d949f388060f6f0daab7cd14718e260682918ec6fa0253b9",
                    "dweb:/ipfs/QmP85jtFrCeV6Y8zuJfrrgiMy1shX3tHWs2wX7DMAB7Lft"
                ],
                "license": "GPL-2.0-or-later"
            },
            "lib/v4-periphery/lib/v4-core/src/types/BalanceDelta.sol": {
                "keccak256": "0xa719c8fe51e0a9524280178f19f6851bcc3b3b60e73618f3d60905d35ae5569f",
                "urls": [
                    "bzz-raw://7436928dc9de35c6c7c5c636cb51adaf295cfd590da83b19a004ae33cbec9ef9",
                    "dweb:/ipfs/QmRJ9yZkUpzk4433GX3LgVVL8jwpbSYSUwXcucKisf3v4H"
                ],
                "license": "MIT"
            },
            "lib/v4-periphery/lib/v4-core/src/types/BeforeSwapDelta.sol": {
                "keccak256": "0x2a774312d91285313d569da1a718c909655da5432310417692097a1d4dc83a78",
                "urls": [
                    "bzz-raw://a2c7a0379955cff9c17ab9e61f95e42909aa5947c22740f86ce940d09856f782",
                    "dweb:/ipfs/QmaAuo8UBYXsGrVuKh8iRoAAdqwtg1jDq515cW1ZRP5m9K"
                ],
                "license": "MIT"
            },
            "lib/v4-periphery/lib/v4-core/src/types/Currency.sol": {
                "keccak256": "0x35c74eae038ecfbbae48b0e13f2b9a43ac6d8da4847ffa0f1482e4e2d455ee74",
                "urls": [
                    "bzz-raw://cadb54f9c89b6970583148e503a23c7b654aff1f3e6a0da57705c54e5b03b39f",
                    "dweb:/ipfs/Qma3CKKwyzGwzHN4Z9HDJ4Q7J5VfbN594i8F2DTGWTMWcB"
                ],
                "license": "MIT"
            },
            "lib/v4-periphery/lib/v4-core/src/types/PoolId.sol": {
                "keccak256": "0x308311916ea0f5c2fd878b6a2751eb223d170a69e33f601fae56dfe3c5d392af",
                "urls": [
                    "bzz-raw://669c2cd7ac17690b5d8831e0bda72822376c3a04b36afed6d31df4d75fe60918",
                    "dweb:/ipfs/QmT6EpkxqU8VF3WsgrZ66F3s1cCQRffR95z1HDYZz7ph6y"
                ],
                "license": "MIT"
            },
            "lib/v4-periphery/lib/v4-core/src/types/PoolKey.sol": {
                "keccak256": "0xf89856e0580d7a4856d3187a76858377ccee9d59702d230c338d84388221b786",
                "urls": [
                    "bzz-raw://6f3118fa189025695c37fdf0bdd1190f085ad097484d3c88cf4c56d1db65f639",
                    "dweb:/ipfs/QmamXpgtB8GV1CaFLvqefPWSoikLDhMk1yU4heBnVzU8gi"
                ],
                "license": "MIT"
            },
            "lib/v4-periphery/src/base/ImmutableState.sol": {
                "keccak256": "0x12b175e4ed6d31da545e3b6c9930901568c99d153b1e51044d32e88f42b9b633",
                "urls": [
                    "bzz-raw://f4347899e0b3bfd66e8d79652b1a14a62a02d16bfece63a40c6efe0e5656c384",
                    "dweb:/ipfs/QmSbbT8fefHstA72BqF7SDooDtmhs79dR8T6pWv8LxKU2L"
                ],
                "license": "GPL-2.0-or-later"
            },
            "lib/v4-periphery/src/base/SafeCallback.sol": {
                "keccak256": "0x6284bd1d1fbe78a901e63dc70720e2bf19de6758347b050f8ba2b155e73325c5",
                "urls": [
                    "bzz-raw://3afb423a3c0f8b5f6436680ff3cde9247924d442a9720dc39b2b07a352607187",
                    "dweb:/ipfs/QmaT5bMwiiqkp8KWUnHjWJz55Ah9vbpASzJagg9riHbpTf"
                ],
                "license": "GPL-3.0-or-later"
            },
            "lib/v4-periphery/src/base/hooks/BaseHook.sol": {
                "keccak256": "0x734be8d61303f27e1dae3b54a0925c2c2458fa5858b4c303fa899aca39aea5cb",
                "urls": [
                    "bzz-raw://ad4d0f2c40953a5755a5ab9034675337a945411745a5d8595d9831a3de94a0a1",
                    "dweb:/ipfs/QmZbGVJHoB7bnaAbKH1B47eQaJbQTXxz9PBvLgJsdiLMXC"
                ],
                "license": "GPL-3.0-or-later"
            },
            "src/GasPriceFeesHook.sol": {
                "keccak256": "0xf2fd49ea1fbbb528f568be788b286ea904d512e1b3548ca2ffc2c43f1a7502e3",
                "urls": [
                    "bzz-raw://590d72f024727d407338c34bd7cbd2895eec72c212395b9551984e067d0cbace",
                    "dweb:/ipfs/QmVhsUhU59V5pCL1vDLfvHx1WSEt9ZkcBXKq9Upb49A8xZ"
                ],
                "license": "MIT"
            }
        },
        "version": 1
    },
    "id": 107
}