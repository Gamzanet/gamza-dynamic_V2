{
    "abi": [
        {
            "type": "constructor",
            "inputs": [
                {
                    "name": "_manager",
                    "type": "address",
                    "internalType": "contract IPoolManager"
                },
                {
                    "name": "_name",
                    "type": "string",
                    "internalType": "string"
                },
                {
                    "name": "_symbol",
                    "type": "string",
                    "internalType": "string"
                }
            ],
            "stateMutability": "nonpayable"
        },
        {
            "type": "function",
            "name": "DOMAIN_SEPARATOR",
            "inputs": [],
            "outputs": [
                {
                    "name": "",
                    "type": "bytes32",
                    "internalType": "bytes32"
                }
            ],
            "stateMutability": "view"
        },
        {
            "type": "function",
            "name": "POINTS_FOR_REFERRAL",
            "inputs": [],
            "outputs": [
                {
                    "name": "",
                    "type": "uint256",
                    "internalType": "uint256"
                }
            ],
            "stateMutability": "view"
        },
        {
            "type": "function",
            "name": "afterAddLiquidity",
            "inputs": [
                {
                    "name": "",
                    "type": "address",
                    "internalType": "address"
                },
                {
                    "name": "key",
                    "type": "tuple",
                    "internalType": "struct PoolKey",
                    "components": [
                        {
                            "name": "currency0",
                            "type": "address",
                            "internalType": "Currency"
                        },
                        {
                            "name": "currency1",
                            "type": "address",
                            "internalType": "Currency"
                        },
                        {
                            "name": "fee",
                            "type": "uint24",
                            "internalType": "uint24"
                        },
                        {
                            "name": "tickSpacing",
                            "type": "int24",
                            "internalType": "int24"
                        },
                        {
                            "name": "hooks",
                            "type": "address",
                            "internalType": "contract IHooks"
                        }
                    ]
                },
                {
                    "name": "",
                    "type": "tuple",
                    "internalType": "struct IPoolManager.ModifyLiquidityParams",
                    "components": [
                        {
                            "name": "tickLower",
                            "type": "int24",
                            "internalType": "int24"
                        },
                        {
                            "name": "tickUpper",
                            "type": "int24",
                            "internalType": "int24"
                        },
                        {
                            "name": "liquidityDelta",
                            "type": "int256",
                            "internalType": "int256"
                        },
                        {
                            "name": "salt",
                            "type": "bytes32",
                            "internalType": "bytes32"
                        }
                    ]
                },
                {
                    "name": "delta",
                    "type": "int256",
                    "internalType": "BalanceDelta"
                },
                {
                    "name": "delta1",
                    "type": "int256",
                    "internalType": "BalanceDelta"
                },
                {
                    "name": "hookData",
                    "type": "bytes",
                    "internalType": "bytes"
                }
            ],
            "outputs": [
                {
                    "name": "",
                    "type": "bytes4",
                    "internalType": "bytes4"
                },
                {
                    "name": "",
                    "type": "int256",
                    "internalType": "BalanceDelta"
                }
            ],
            "stateMutability": "nonpayable"
        },
        {
            "type": "function",
            "name": "afterDonate",
            "inputs": [
                {
                    "name": "",
                    "type": "address",
                    "internalType": "address"
                },
                {
                    "name": "",
                    "type": "tuple",
                    "internalType": "struct PoolKey",
                    "components": [
                        {
                            "name": "currency0",
                            "type": "address",
                            "internalType": "Currency"
                        },
                        {
                            "name": "currency1",
                            "type": "address",
                            "internalType": "Currency"
                        },
                        {
                            "name": "fee",
                            "type": "uint24",
                            "internalType": "uint24"
                        },
                        {
                            "name": "tickSpacing",
                            "type": "int24",
                            "internalType": "int24"
                        },
                        {
                            "name": "hooks",
                            "type": "address",
                            "internalType": "contract IHooks"
                        }
                    ]
                },
                {
                    "name": "",
                    "type": "uint256",
                    "internalType": "uint256"
                },
                {
                    "name": "",
                    "type": "uint256",
                    "internalType": "uint256"
                },
                {
                    "name": "",
                    "type": "bytes",
                    "internalType": "bytes"
                }
            ],
            "outputs": [
                {
                    "name": "",
                    "type": "bytes4",
                    "internalType": "bytes4"
                }
            ],
            "stateMutability": "nonpayable"
        },
        {
            "type": "function",
            "name": "afterInitialize",
            "inputs": [
                {
                    "name": "",
                    "type": "address",
                    "internalType": "address"
                },
                {
                    "name": "",
                    "type": "tuple",
                    "internalType": "struct PoolKey",
                    "components": [
                        {
                            "name": "currency0",
                            "type": "address",
                            "internalType": "Currency"
                        },
                        {
                            "name": "currency1",
                            "type": "address",
                            "internalType": "Currency"
                        },
                        {
                            "name": "fee",
                            "type": "uint24",
                            "internalType": "uint24"
                        },
                        {
                            "name": "tickSpacing",
                            "type": "int24",
                            "internalType": "int24"
                        },
                        {
                            "name": "hooks",
                            "type": "address",
                            "internalType": "contract IHooks"
                        }
                    ]
                },
                {
                    "name": "",
                    "type": "uint160",
                    "internalType": "uint160"
                },
                {
                    "name": "",
                    "type": "int24",
                    "internalType": "int24"
                },
                {
                    "name": "",
                    "type": "bytes",
                    "internalType": "bytes"
                }
            ],
            "outputs": [
                {
                    "name": "",
                    "type": "bytes4",
                    "internalType": "bytes4"
                }
            ],
            "stateMutability": "nonpayable"
        },
        {
            "type": "function",
            "name": "afterRemoveLiquidity",
            "inputs": [
                {
                    "name": "",
                    "type": "address",
                    "internalType": "address"
                },
                {
                    "name": "",
                    "type": "tuple",
                    "internalType": "struct PoolKey",
                    "components": [
                        {
                            "name": "currency0",
                            "type": "address",
                            "internalType": "Currency"
                        },
                        {
                            "name": "currency1",
                            "type": "address",
                            "internalType": "Currency"
                        },
                        {
                            "name": "fee",
                            "type": "uint24",
                            "internalType": "uint24"
                        },
                        {
                            "name": "tickSpacing",
                            "type": "int24",
                            "internalType": "int24"
                        },
                        {
                            "name": "hooks",
                            "type": "address",
                            "internalType": "contract IHooks"
                        }
                    ]
                },
                {
                    "name": "",
                    "type": "tuple",
                    "internalType": "struct IPoolManager.ModifyLiquidityParams",
                    "components": [
                        {
                            "name": "tickLower",
                            "type": "int24",
                            "internalType": "int24"
                        },
                        {
                            "name": "tickUpper",
                            "type": "int24",
                            "internalType": "int24"
                        },
                        {
                            "name": "liquidityDelta",
                            "type": "int256",
                            "internalType": "int256"
                        },
                        {
                            "name": "salt",
                            "type": "bytes32",
                            "internalType": "bytes32"
                        }
                    ]
                },
                {
                    "name": "",
                    "type": "int256",
                    "internalType": "BalanceDelta"
                },
                {
                    "name": "",
                    "type": "int256",
                    "internalType": "BalanceDelta"
                },
                {
                    "name": "",
                    "type": "bytes",
                    "internalType": "bytes"
                }
            ],
            "outputs": [
                {
                    "name": "",
                    "type": "bytes4",
                    "internalType": "bytes4"
                },
                {
                    "name": "",
                    "type": "int256",
                    "internalType": "BalanceDelta"
                }
            ],
            "stateMutability": "nonpayable"
        },
        {
            "type": "function",
            "name": "afterSwap",
            "inputs": [
                {
                    "name": "",
                    "type": "address",
                    "internalType": "address"
                },
                {
                    "name": "key",
                    "type": "tuple",
                    "internalType": "struct PoolKey",
                    "components": [
                        {
                            "name": "currency0",
                            "type": "address",
                            "internalType": "Currency"
                        },
                        {
                            "name": "currency1",
                            "type": "address",
                            "internalType": "Currency"
                        },
                        {
                            "name": "fee",
                            "type": "uint24",
                            "internalType": "uint24"
                        },
                        {
                            "name": "tickSpacing",
                            "type": "int24",
                            "internalType": "int24"
                        },
                        {
                            "name": "hooks",
                            "type": "address",
                            "internalType": "contract IHooks"
                        }
                    ]
                },
                {
                    "name": "swapParams",
                    "type": "tuple",
                    "internalType": "struct IPoolManager.SwapParams",
                    "components": [
                        {
                            "name": "zeroForOne",
                            "type": "bool",
                            "internalType": "bool"
                        },
                        {
                            "name": "amountSpecified",
                            "type": "int256",
                            "internalType": "int256"
                        },
                        {
                            "name": "sqrtPriceLimitX96",
                            "type": "uint160",
                            "internalType": "uint160"
                        }
                    ]
                },
                {
                    "name": "delta",
                    "type": "int256",
                    "internalType": "BalanceDelta"
                },
                {
                    "name": "hookData",
                    "type": "bytes",
                    "internalType": "bytes"
                }
            ],
            "outputs": [
                {
                    "name": "",
                    "type": "bytes4",
                    "internalType": "bytes4"
                },
                {
                    "name": "",
                    "type": "int128",
                    "internalType": "int128"
                }
            ],
            "stateMutability": "nonpayable"
        },
        {
            "type": "function",
            "name": "allowance",
            "inputs": [
                {
                    "name": "",
                    "type": "address",
                    "internalType": "address"
                },
                {
                    "name": "",
                    "type": "address",
                    "internalType": "address"
                }
            ],
            "outputs": [
                {
                    "name": "",
                    "type": "uint256",
                    "internalType": "uint256"
                }
            ],
            "stateMutability": "view"
        },
        {
            "type": "function",
            "name": "approve",
            "inputs": [
                {
                    "name": "spender",
                    "type": "address",
                    "internalType": "address"
                },
                {
                    "name": "amount",
                    "type": "uint256",
                    "internalType": "uint256"
                }
            ],
            "outputs": [
                {
                    "name": "",
                    "type": "bool",
                    "internalType": "bool"
                }
            ],
            "stateMutability": "nonpayable"
        },
        {
            "type": "function",
            "name": "balanceOf",
            "inputs": [
                {
                    "name": "",
                    "type": "address",
                    "internalType": "address"
                }
            ],
            "outputs": [
                {
                    "name": "",
                    "type": "uint256",
                    "internalType": "uint256"
                }
            ],
            "stateMutability": "view"
        },
        {
            "type": "function",
            "name": "beforeAddLiquidity",
            "inputs": [
                {
                    "name": "",
                    "type": "address",
                    "internalType": "address"
                },
                {
                    "name": "",
                    "type": "tuple",
                    "internalType": "struct PoolKey",
                    "components": [
                        {
                            "name": "currency0",
                            "type": "address",
                            "internalType": "Currency"
                        },
                        {
                            "name": "currency1",
                            "type": "address",
                            "internalType": "Currency"
                        },
                        {
                            "name": "fee",
                            "type": "uint24",
                            "internalType": "uint24"
                        },
                        {
                            "name": "tickSpacing",
                            "type": "int24",
                            "internalType": "int24"
                        },
                        {
                            "name": "hooks",
                            "type": "address",
                            "internalType": "contract IHooks"
                        }
                    ]
                },
                {
                    "name": "",
                    "type": "tuple",
                    "internalType": "struct IPoolManager.ModifyLiquidityParams",
                    "components": [
                        {
                            "name": "tickLower",
                            "type": "int24",
                            "internalType": "int24"
                        },
                        {
                            "name": "tickUpper",
                            "type": "int24",
                            "internalType": "int24"
                        },
                        {
                            "name": "liquidityDelta",
                            "type": "int256",
                            "internalType": "int256"
                        },
                        {
                            "name": "salt",
                            "type": "bytes32",
                            "internalType": "bytes32"
                        }
                    ]
                },
                {
                    "name": "",
                    "type": "bytes",
                    "internalType": "bytes"
                }
            ],
            "outputs": [
                {
                    "name": "",
                    "type": "bytes4",
                    "internalType": "bytes4"
                }
            ],
            "stateMutability": "nonpayable"
        },
        {
            "type": "function",
            "name": "beforeDonate",
            "inputs": [
                {
                    "name": "",
                    "type": "address",
                    "internalType": "address"
                },
                {
                    "name": "",
                    "type": "tuple",
                    "internalType": "struct PoolKey",
                    "components": [
                        {
                            "name": "currency0",
                            "type": "address",
                            "internalType": "Currency"
                        },
                        {
                            "name": "currency1",
                            "type": "address",
                            "internalType": "Currency"
                        },
                        {
                            "name": "fee",
                            "type": "uint24",
                            "internalType": "uint24"
                        },
                        {
                            "name": "tickSpacing",
                            "type": "int24",
                            "internalType": "int24"
                        },
                        {
                            "name": "hooks",
                            "type": "address",
                            "internalType": "contract IHooks"
                        }
                    ]
                },
                {
                    "name": "",
                    "type": "uint256",
                    "internalType": "uint256"
                },
                {
                    "name": "",
                    "type": "uint256",
                    "internalType": "uint256"
                },
                {
                    "name": "",
                    "type": "bytes",
                    "internalType": "bytes"
                }
            ],
            "outputs": [
                {
                    "name": "",
                    "type": "bytes4",
                    "internalType": "bytes4"
                }
            ],
            "stateMutability": "nonpayable"
        },
        {
            "type": "function",
            "name": "beforeInitialize",
            "inputs": [
                {
                    "name": "",
                    "type": "address",
                    "internalType": "address"
                },
                {
                    "name": "",
                    "type": "tuple",
                    "internalType": "struct PoolKey",
                    "components": [
                        {
                            "name": "currency0",
                            "type": "address",
                            "internalType": "Currency"
                        },
                        {
                            "name": "currency1",
                            "type": "address",
                            "internalType": "Currency"
                        },
                        {
                            "name": "fee",
                            "type": "uint24",
                            "internalType": "uint24"
                        },
                        {
                            "name": "tickSpacing",
                            "type": "int24",
                            "internalType": "int24"
                        },
                        {
                            "name": "hooks",
                            "type": "address",
                            "internalType": "contract IHooks"
                        }
                    ]
                },
                {
                    "name": "",
                    "type": "uint160",
                    "internalType": "uint160"
                },
                {
                    "name": "",
                    "type": "bytes",
                    "internalType": "bytes"
                }
            ],
            "outputs": [
                {
                    "name": "",
                    "type": "bytes4",
                    "internalType": "bytes4"
                }
            ],
            "stateMutability": "nonpayable"
        },
        {
            "type": "function",
            "name": "beforeRemoveLiquidity",
            "inputs": [
                {
                    "name": "",
                    "type": "address",
                    "internalType": "address"
                },
                {
                    "name": "",
                    "type": "tuple",
                    "internalType": "struct PoolKey",
                    "components": [
                        {
                            "name": "currency0",
                            "type": "address",
                            "internalType": "Currency"
                        },
                        {
                            "name": "currency1",
                            "type": "address",
                            "internalType": "Currency"
                        },
                        {
                            "name": "fee",
                            "type": "uint24",
                            "internalType": "uint24"
                        },
                        {
                            "name": "tickSpacing",
                            "type": "int24",
                            "internalType": "int24"
                        },
                        {
                            "name": "hooks",
                            "type": "address",
                            "internalType": "contract IHooks"
                        }
                    ]
                },
                {
                    "name": "",
                    "type": "tuple",
                    "internalType": "struct IPoolManager.ModifyLiquidityParams",
                    "components": [
                        {
                            "name": "tickLower",
                            "type": "int24",
                            "internalType": "int24"
                        },
                        {
                            "name": "tickUpper",
                            "type": "int24",
                            "internalType": "int24"
                        },
                        {
                            "name": "liquidityDelta",
                            "type": "int256",
                            "internalType": "int256"
                        },
                        {
                            "name": "salt",
                            "type": "bytes32",
                            "internalType": "bytes32"
                        }
                    ]
                },
                {
                    "name": "",
                    "type": "bytes",
                    "internalType": "bytes"
                }
            ],
            "outputs": [
                {
                    "name": "",
                    "type": "bytes4",
                    "internalType": "bytes4"
                }
            ],
            "stateMutability": "nonpayable"
        },
        {
            "type": "function",
            "name": "beforeSwap",
            "inputs": [
                {
                    "name": "",
                    "type": "address",
                    "internalType": "address"
                },
                {
                    "name": "",
                    "type": "tuple",
                    "internalType": "struct PoolKey",
                    "components": [
                        {
                            "name": "currency0",
                            "type": "address",
                            "internalType": "Currency"
                        },
                        {
                            "name": "currency1",
                            "type": "address",
                            "internalType": "Currency"
                        },
                        {
                            "name": "fee",
                            "type": "uint24",
                            "internalType": "uint24"
                        },
                        {
                            "name": "tickSpacing",
                            "type": "int24",
                            "internalType": "int24"
                        },
                        {
                            "name": "hooks",
                            "type": "address",
                            "internalType": "contract IHooks"
                        }
                    ]
                },
                {
                    "name": "",
                    "type": "tuple",
                    "internalType": "struct IPoolManager.SwapParams",
                    "components": [
                        {
                            "name": "zeroForOne",
                            "type": "bool",
                            "internalType": "bool"
                        },
                        {
                            "name": "amountSpecified",
                            "type": "int256",
                            "internalType": "int256"
                        },
                        {
                            "name": "sqrtPriceLimitX96",
                            "type": "uint160",
                            "internalType": "uint160"
                        }
                    ]
                },
                {
                    "name": "",
                    "type": "bytes",
                    "internalType": "bytes"
                }
            ],
            "outputs": [
                {
                    "name": "",
                    "type": "bytes4",
                    "internalType": "bytes4"
                },
                {
                    "name": "",
                    "type": "int256",
                    "internalType": "BeforeSwapDelta"
                },
                {
                    "name": "",
                    "type": "uint24",
                    "internalType": "uint24"
                }
            ],
            "stateMutability": "nonpayable"
        },
        {
            "type": "function",
            "name": "decimals",
            "inputs": [],
            "outputs": [
                {
                    "name": "",
                    "type": "uint8",
                    "internalType": "uint8"
                }
            ],
            "stateMutability": "view"
        },
        {
            "type": "function",
            "name": "getHookData",
            "inputs": [
                {
                    "name": "referrer",
                    "type": "address",
                    "internalType": "address"
                },
                {
                    "name": "referree",
                    "type": "address",
                    "internalType": "address"
                }
            ],
            "outputs": [
                {
                    "name": "",
                    "type": "bytes",
                    "internalType": "bytes"
                }
            ],
            "stateMutability": "pure"
        },
        {
            "type": "function",
            "name": "getHookPermissions",
            "inputs": [],
            "outputs": [
                {
                    "name": "",
                    "type": "tuple",
                    "internalType": "struct Hooks.Permissions",
                    "components": [
                        {
                            "name": "beforeInitialize",
                            "type": "bool",
                            "internalType": "bool"
                        },
                        {
                            "name": "afterInitialize",
                            "type": "bool",
                            "internalType": "bool"
                        },
                        {
                            "name": "beforeAddLiquidity",
                            "type": "bool",
                            "internalType": "bool"
                        },
                        {
                            "name": "afterAddLiquidity",
                            "type": "bool",
                            "internalType": "bool"
                        },
                        {
                            "name": "beforeRemoveLiquidity",
                            "type": "bool",
                            "internalType": "bool"
                        },
                        {
                            "name": "afterRemoveLiquidity",
                            "type": "bool",
                            "internalType": "bool"
                        },
                        {
                            "name": "beforeSwap",
                            "type": "bool",
                            "internalType": "bool"
                        },
                        {
                            "name": "afterSwap",
                            "type": "bool",
                            "internalType": "bool"
                        },
                        {
                            "name": "beforeDonate",
                            "type": "bool",
                            "internalType": "bool"
                        },
                        {
                            "name": "afterDonate",
                            "type": "bool",
                            "internalType": "bool"
                        },
                        {
                            "name": "beforeSwapReturnDelta",
                            "type": "bool",
                            "internalType": "bool"
                        },
                        {
                            "name": "afterSwapReturnDelta",
                            "type": "bool",
                            "internalType": "bool"
                        },
                        {
                            "name": "afterAddLiquidityReturnDelta",
                            "type": "bool",
                            "internalType": "bool"
                        },
                        {
                            "name": "afterRemoveLiquidityReturnDelta",
                            "type": "bool",
                            "internalType": "bool"
                        }
                    ]
                }
            ],
            "stateMutability": "pure"
        },
        {
            "type": "function",
            "name": "name",
            "inputs": [],
            "outputs": [
                {
                    "name": "",
                    "type": "string",
                    "internalType": "string"
                }
            ],
            "stateMutability": "view"
        },
        {
            "type": "function",
            "name": "nonces",
            "inputs": [
                {
                    "name": "",
                    "type": "address",
                    "internalType": "address"
                }
            ],
            "outputs": [
                {
                    "name": "",
                    "type": "uint256",
                    "internalType": "uint256"
                }
            ],
            "stateMutability": "view"
        },
        {
            "type": "function",
            "name": "permit",
            "inputs": [
                {
                    "name": "owner",
                    "type": "address",
                    "internalType": "address"
                },
                {
                    "name": "spender",
                    "type": "address",
                    "internalType": "address"
                },
                {
                    "name": "value",
                    "type": "uint256",
                    "internalType": "uint256"
                },
                {
                    "name": "deadline",
                    "type": "uint256",
                    "internalType": "uint256"
                },
                {
                    "name": "v",
                    "type": "uint8",
                    "internalType": "uint8"
                },
                {
                    "name": "r",
                    "type": "bytes32",
                    "internalType": "bytes32"
                },
                {
                    "name": "s",
                    "type": "bytes32",
                    "internalType": "bytes32"
                }
            ],
            "outputs": [],
            "stateMutability": "nonpayable"
        },
        {
            "type": "function",
            "name": "poolManager",
            "inputs": [],
            "outputs": [
                {
                    "name": "",
                    "type": "address",
                    "internalType": "contract IPoolManager"
                }
            ],
            "stateMutability": "view"
        },
        {
            "type": "function",
            "name": "referredBy",
            "inputs": [
                {
                    "name": "",
                    "type": "address",
                    "internalType": "address"
                }
            ],
            "outputs": [
                {
                    "name": "",
                    "type": "address",
                    "internalType": "address"
                }
            ],
            "stateMutability": "view"
        },
        {
            "type": "function",
            "name": "symbol",
            "inputs": [],
            "outputs": [
                {
                    "name": "",
                    "type": "string",
                    "internalType": "string"
                }
            ],
            "stateMutability": "view"
        },
        {
            "type": "function",
            "name": "totalSupply",
            "inputs": [],
            "outputs": [
                {
                    "name": "",
                    "type": "uint256",
                    "internalType": "uint256"
                }
            ],
            "stateMutability": "view"
        },
        {
            "type": "function",
            "name": "transfer",
            "inputs": [
                {
                    "name": "to",
                    "type": "address",
                    "internalType": "address"
                },
                {
                    "name": "amount",
                    "type": "uint256",
                    "internalType": "uint256"
                }
            ],
            "outputs": [
                {
                    "name": "",
                    "type": "bool",
                    "internalType": "bool"
                }
            ],
            "stateMutability": "nonpayable"
        },
        {
            "type": "function",
            "name": "transferFrom",
            "inputs": [
                {
                    "name": "from",
                    "type": "address",
                    "internalType": "address"
                },
                {
                    "name": "to",
                    "type": "address",
                    "internalType": "address"
                },
                {
                    "name": "amount",
                    "type": "uint256",
                    "internalType": "uint256"
                }
            ],
            "outputs": [
                {
                    "name": "",
                    "type": "bool",
                    "internalType": "bool"
                }
            ],
            "stateMutability": "nonpayable"
        },
        {
            "type": "function",
            "name": "unlockCallback",
            "inputs": [
                {
                    "name": "data",
                    "type": "bytes",
                    "internalType": "bytes"
                }
            ],
            "outputs": [
                {
                    "name": "",
                    "type": "bytes",
                    "internalType": "bytes"
                }
            ],
            "stateMutability": "nonpayable"
        },
        {
            "type": "event",
            "name": "Approval",
            "inputs": [
                {
                    "name": "owner",
                    "type": "address",
                    "indexed": true,
                    "internalType": "address"
                },
                {
                    "name": "spender",
                    "type": "address",
                    "indexed": true,
                    "internalType": "address"
                },
                {
                    "name": "amount",
                    "type": "uint256",
                    "indexed": false,
                    "internalType": "uint256"
                }
            ],
            "anonymous": false
        },
        {
            "type": "event",
            "name": "Transfer",
            "inputs": [
                {
                    "name": "from",
                    "type": "address",
                    "indexed": true,
                    "internalType": "address"
                },
                {
                    "name": "to",
                    "type": "address",
                    "indexed": true,
                    "internalType": "address"
                },
                {
                    "name": "amount",
                    "type": "uint256",
                    "indexed": false,
                    "internalType": "uint256"
                }
            ],
            "anonymous": false
        },
        {
            "type": "error",
            "name": "HookNotImplemented",
            "inputs": []
        },
        {
            "type": "error",
            "name": "InvalidPool",
            "inputs": []
        },
        {
            "type": "error",
            "name": "LockFailure",
            "inputs": []
        },
        {
            "type": "error",
            "name": "NotPoolManager",
            "inputs": []
        },
        {
            "type": "error",
            "name": "NotSelf",
            "inputs": []
        }
    ],
    "bytecode": {
        "object": "0x610100604052348015610010575f80fd5b50604051611e04380380611e0483398101604081905261002f91610413565b6001600160a01b038316608052818160128561004a30610086565b505f6100568482610519565b5060016100638382610519565b5060ff811660a0524660c052610077610179565b60e05250610644945050505050565b61017681610171604080516101c0810182525f80825260208201819052918101829052606081018290526080810182905260a0810182905260c0810182905260e08101829052610100810182905261012081018290526101408101829052610160810182905261018081018290526101a081019190915250604080516101c0810182525f808252602082018190529181018290526001606082018190526080820183905260a0820183905260c0820183905260e0820152610100810182905261012081018290526101408101829052610160810182905261018081018290526101a081019190915290565b610211565b50565b5f7f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f5f6040516101a991906105d3565b6040805191829003822060208301939093528101919091527fc89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc660608201524660808201523060a082015260c00160405160208183030381529060405280519060200120905090565b80511515612000831615151415806102355750602081015115156110008316151514155b8061024c5750604081015115156108008316151514155b806102635750606081015115156104008316151514155b8061027a5750608081015115156102008316151514155b80610291575060a081015115156101008316151514155b806102a7575060c0810151151560808316151514155b806102bd575060e0810151151560408316151514155b806102d45750610100810151151560208316151514155b806102eb5750610120810151151560108316151514155b806103025750610140810151151560088316151514155b806103195750610160810151151560048316151514155b806103305750610180810151151560028316151514155b8061034757506101a0810151151560018316151514155b1561035d5761035d630732d7b560e51b83610361565b5050565b815f526001600160a01b03811660045260245ffd5b634e487b7160e01b5f52604160045260245ffd5b5f82601f830112610399575f80fd5b81516001600160401b038111156103b2576103b2610376565b604051601f8201601f19908116603f011681016001600160401b03811182821017156103e0576103e0610376565b6040528181528382016020018510156103f7575f80fd5b8160208501602083015e5f918101602001919091529392505050565b5f805f60608486031215610425575f80fd5b83516001600160a01b038116811461043b575f80fd5b60208501519093506001600160401b03811115610456575f80fd5b6104628682870161038a565b604086015190935090506001600160401b0381111561047f575f80fd5b61048b8682870161038a565b9150509250925092565b600181811c908216806104a957607f821691505b6020821081036104c757634e487b7160e01b5f52602260045260245ffd5b50919050565b601f82111561051457805f5260205f20601f840160051c810160208510156104f25750805b601f840160051c820191505b81811015610511575f81556001016104fe565b50505b505050565b81516001600160401b0381111561053257610532610376565b610546816105408454610495565b846104cd565b6020601f821160018114610578575f83156105615750848201515b5f19600385901b1c1916600184901b178455610511565b5f84815260208120601f198516915b828110156105a75787850151825560209485019460019092019101610587565b50848210156105c457868401515f19600387901b60f8161c191681555b50505050600190811b01905550565b5f8083546105e081610495565b6001821680156105f7576001811461060c57610639565b60ff1983168652811515820286019350610639565b865f5260205f205f5b8381101561063157815488820152600190910190602001610615565b505081860193505b509195945050505050565b60805160a05160c05160e05161178661067e5f395f61080501525f6107d001525f61029901525f8181610583015261086b01526117865ff3fe608060405234801561000f575f80fd5b50600436106101bb575f3560e01c80637ecebe00116100f3578063b47b2fb111610093578063d505accf1161006e578063d505accf14610569578063dc4c90d31461057e578063dd62ed3e146105a5578063e1b4af6914610467575f80fd5b8063b47b2fb114610431578063b6a8b0fa14610467578063c4e833ce14610475575f80fd5b80639f063efc116100ce5780639f063efc146103bd578063a9059cbb146103d0578063a90f8e9a146103e3578063a910f80f14610423575f80fd5b80637ecebe001461038357806391dd7346146103a257806395d89b41146103b5575f80fd5b8063313ce5671161015e578063458658291161013957806345865829146102e3578063575e24b4146102f35780636c2bbe7e1461033157806370a0823114610364575f80fd5b8063313ce567146102945780633440d820146102cd5780633644e515146102db575f80fd5b806318160ddd1161019957806318160ddd1461023e57806321d0ee701461025557806323b872dd14610281578063259982e514610255575f80fd5b806306fdde03146101bf578063095ea7b3146101dd5780631783e86514610200575b5f80fd5b6101c76105cf565b6040516101d49190610f82565b60405180910390f35b6101f06101eb366004610fab565b61065a565b60405190151581526020016101d4565b6101c761020e366004610fd5565b604080516001600160a01b0393841660208201529190921681830152815180820383018152606090910190915290565b61024760025481565b6040519081526020016101d4565b610268610263366004611077565b6106c6565b6040516001600160e01b031990911681526020016101d4565b6101f061028f3660046110ee565b6106e0565b6102bb7f000000000000000000000000000000000000000000000000000000000000000081565b60405160ff90911681526020016101d4565b61026861026336600461112c565b6102476107cd565b610247681b1ae4d6e2ef50000081565b610306610301366004611196565b610827565b604080516001600160e01b03199094168452602084019290925262ffffff16908201526060016101d4565b61034461033f3660046111f0565b610843565b604080516001600160e01b031990931683526020830191909152016101d4565b61024761037236600461127b565b60036020525f908152604090205481565b61024761039136600461127b565b60056020525f908152604090205481565b6101c76103b0366004611296565b61085e565b6101c76108ba565b6103446103cb3660046111f0565b6108c7565b6101f06103de366004610fab565b61093a565b61040b6103f136600461127b565b60066020525f90815260409020546001600160a01b031681565b6040516001600160a01b0390911681526020016101d4565b6102686102633660046112d5565b61044461043f366004611365565b6109b0565b604080516001600160e01b03199093168352600f9190910b6020830152016101d4565b6102686102633660046113c8565b61055c604080516101c0810182525f80825260208201819052918101829052606081018290526080810182905260a0810182905260c0810182905260e08101829052610100810182905261012081018290526101408101829052610160810182905261018081018290526101a081019190915250604080516101c0810182525f808252602082018190529181018290526001606082018190526080820183905260a0820183905260c0820183905260e0820152610100810182905261012081018290526101408101829052610160810182905261018081018290526101a081019190915290565b6040516101d49190611422565b61057c610577366004611543565b610a63565b005b61040b7f000000000000000000000000000000000000000000000000000000000000000081565b6102476105b3366004610fd5565b600460209081525f928352604080842090915290825290205481565b5f80546105db906115b4565b80601f0160208091040260200160405190810160405280929190818152602001828054610607906115b4565b80156106525780601f1061062957610100808354040283529160200191610652565b820191905f5260205f20905b81548152906001019060200180831161063557829003601f168201915b505050505081565b335f8181526004602090815260408083206001600160a01b038716808552925280832085905551919290917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925906106b49086815260200190565b60405180910390a35060015b92915050565b5f604051630a85dc2960e01b815260040160405180910390fd5b6001600160a01b0383165f9081526004602090815260408083203384529091528120545f1981146107395761071583826115fa565b6001600160a01b0386165f9081526004602090815260408083203384529091529020555b6001600160a01b0385165f90815260036020526040812080548592906107609084906115fa565b90915550506001600160a01b038085165f81815260036020526040908190208054870190555190918716907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef906107ba9087815260200190565b60405180910390a3506001949350505050565b5f7f00000000000000000000000000000000000000000000000000000000000000004614610802576107fd610cb5565b905090565b507f000000000000000000000000000000000000000000000000000000000000000090565b5f805f604051630a85dc2960e01b815260040160405180910390fd5b5f80604051630a85dc2960e01b815260040160405180910390fd5b6060336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146108a95760405163570c108560e11b815260040160405180910390fd5b6108b38383610d4d565b9392505050565b600180546105db906115b4565b5f806108e66108d960208a018a61127b565b6001600160a01b03161590565b6108fb57506327c18fbf60e21b90508461092e565b5f6109068760801d90565b61090f9061160d565b600f0b905061091f858583610de6565b506327c18fbf60e21b91508590505b97509795505050505050565b335f9081526003602052604081208054839190839061095a9084906115fa565b90915550506001600160a01b0383165f81815260036020526040908190208054850190555133907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef906106b49086815260200190565b5f806109c26108d9602089018961127b565b6109d7575063b47b2fb160e01b90505f610a58565b6109e4602087018761163a565b6109f9575063b47b2fb160e01b90505f610a58565b5f80876020013512610a2057610a0f8660801d90565b610a189061160d565b600f0b610a2d565b610a2d6020880135611659565b90505f610a3b600583611673565b9050610a48868683610de6565b5063b47b2fb160e01b92505f9150505b965096945050505050565b42841015610ab85760405162461bcd60e51b815260206004820152601760248201527f5045524d49545f444541444c494e455f4558504952454400000000000000000060448201526064015b60405180910390fd5b5f6001610ac36107cd565b6001600160a01b038a81165f8181526005602090815260409182902080546001810190915582517f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c98184015280840194909452938d166060840152608083018c905260a083019390935260c08083018b90528151808403909101815260e08301909152805192019190912061190160f01b6101008301526101028201929092526101228101919091526101420160408051601f1981840301815282825280516020918201205f84529083018083525260ff871690820152606081018590526080810184905260a0016020604051602081039080840390855afa158015610bcb573d5f803e3d5ffd5b5050604051601f1901519150506001600160a01b03811615801590610c015750876001600160a01b0316816001600160a01b0316145b610c4d5760405162461bcd60e51b815260206004820152600e60248201527f494e56414c49445f5349474e45520000000000000000000000000000000000006044820152606401610aaf565b6001600160a01b039081165f9081526004602090815260408083208a8516808552908352928190208990555188815291928a16917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a350505050505050565b5f7f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f5f604051610ce59190611692565b6040805191829003822060208301939093528101919091527fc89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc660608201524660808201523060a082015260c00160405160208183030381529060405280519060200120905090565b60605f80306001600160a01b03168585604051610d6b92919061172e565b5f604051808303815f865af19150503d805f8114610da4576040519150601f19603f3d011682016040523d82523d5f602084013e610da9565b606091505b50915091508115610dbd5791506106c09050565b80515f03610dde576040516314815f4760e31b815260040160405180910390fd5b805160208201fd5b5f829003610df357505050565b5f80610e0184860186610fd5565b90925090506001600160a01b038116610e1b575050505050565b6001600160a01b038181165f9081526006602052604090205416158015610e4a57506001600160a01b03821615155b15610ea7576001600160a01b038181165f90815260066020526040902080547fffffffffffffffffffffffff000000000000000000000000000000000000000016918416919091179055610ea782681b1ae4d6e2ef500000610eeb565b6001600160a01b038181165f908152600660205260409020541615610eda57610eda82610ed5600a86611673565b610eeb565b610ee48184610eeb565b5050505050565b8060025f828254610efc919061173d565b90915550506001600160a01b0382165f818152600360209081526040808320805486019055518481527fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a35050565b5f81518084528060208401602086015e5f602082860101526020601f19601f83011685010191505092915050565b602081525f6108b36020830184610f54565b6001600160a01b0381168114610fa8575f80fd5b50565b5f8060408385031215610fbc575f80fd5b8235610fc781610f94565b946020939093013593505050565b5f8060408385031215610fe6575f80fd5b8235610ff181610f94565b9150602083013561100181610f94565b809150509250929050565b5f60a0828403121561101c575f80fd5b50919050565b5f6080828403121561101c575f80fd5b5f8083601f840112611042575f80fd5b50813567ffffffffffffffff811115611059575f80fd5b602083019150836020828501011115611070575f80fd5b9250929050565b5f805f805f610160868803121561108c575f80fd5b853561109781610f94565b94506110a6876020880161100c565b93506110b58760c08801611022565b925061014086013567ffffffffffffffff8111156110d1575f80fd5b6110dd88828901611032565b969995985093965092949392505050565b5f805f60608486031215611100575f80fd5b833561110b81610f94565b9250602084013561111b81610f94565b929592945050506040919091013590565b5f805f805f6101008688031215611141575f80fd5b853561114c81610f94565b945061115b876020880161100c565b935060c086013561116b81610f94565b925060e086013567ffffffffffffffff8111156110d1575f80fd5b5f6060828403121561101c575f80fd5b5f805f805f61014086880312156111ab575f80fd5b85356111b681610f94565b94506111c5876020880161100c565b93506111d48760c08801611186565b925061012086013567ffffffffffffffff8111156110d1575f80fd5b5f805f805f805f6101a0888a031215611207575f80fd5b873561121281610f94565b96506112218960208a0161100c565b95506112308960c08a01611022565b94506101408801359350610160880135925061018088013567ffffffffffffffff81111561125c575f80fd5b6112688a828b01611032565b989b979a50959850939692959293505050565b5f6020828403121561128b575f80fd5b81356108b381610f94565b5f80602083850312156112a7575f80fd5b823567ffffffffffffffff8111156112bd575f80fd5b6112c985828601611032565b90969095509350505050565b5f805f805f8061012087890312156112eb575f80fd5b86356112f681610f94565b9550611305886020890161100c565b945060c087013561131581610f94565b935060e0870135600281900b811461132b575f80fd5b925061010087013567ffffffffffffffff811115611347575f80fd5b61135389828a01611032565b979a9699509497509295939492505050565b5f805f805f80610160878903121561137b575f80fd5b863561138681610f94565b9550611395886020890161100c565b94506113a48860c08901611186565b9350610120870135925061014087013567ffffffffffffffff811115611347575f80fd5b5f805f805f8061012087890312156113de575f80fd5b86356113e981610f94565b95506113f8886020890161100c565b945060c0870135935060e0870135925061010087013567ffffffffffffffff811115611347575f80fd5b8151151581526101c081016020830151611440602084018215159052565b506040830151611454604084018215159052565b506060830151611468606084018215159052565b50608083015161147c608084018215159052565b5060a083015161149060a084018215159052565b5060c08301516114a460c084018215159052565b5060e08301516114b860e084018215159052565b506101008301516114ce61010084018215159052565b506101208301516114e461012084018215159052565b506101408301516114fa61014084018215159052565b5061016083015161151061016084018215159052565b5061018083015161152661018084018215159052565b506101a083015161153c6101a084018215159052565b5092915050565b5f805f805f805f60e0888a031215611559575f80fd5b873561156481610f94565b9650602088013561157481610f94565b95506040880135945060608801359350608088013560ff81168114611597575f80fd5b9699959850939692959460a0840135945060c09093013592915050565b600181811c908216806115c857607f821691505b60208210810361101c57634e487b7160e01b5f52602260045260245ffd5b634e487b7160e01b5f52601160045260245ffd5b818103818111156106c0576106c06115e6565b5f81600f0b6f7fffffffffffffffffffffffffffffff198103611632576116326115e6565b5f0392915050565b5f6020828403121561164a575f80fd5b813580151581146108b3575f80fd5b5f600160ff1b820161166d5761166d6115e6565b505f0390565b5f8261168d57634e487b7160e01b5f52601260045260245ffd5b500490565b5f8083545f8160011c905060018216806116ad57607f821691505b6020821081036116cb57634e487b7160e01b5f52602260045260245ffd5b8080156116df57600181146116f457611722565b60ff1984168752821515830287019450611722565b5f888152602090205f5b8481101561171a578154898201526001909101906020016116fe565b505082870194505b50929695505050505050565b818382375f9101908152919050565b808201808211156106c0576106c06115e656fea2646970667358221220d716b562e923de6d65b3b209ec9a67b04d4c7ea0304f1281f0d0c45a337a251464736f6c634300081a0033",
        "sourceMap": "500:5161:95:-:0;;;1035:156;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;451:26:92;;;;1169:5:95;1176:7;1185:2;1153:8;854:25:94::1;874:4;854:19;:25::i;:::-;-1:-1:-1::0;2094:4:28;:12;2101:5;2094:4;:12;:::i;:::-;-1:-1:-1;2116:6:28;:16;2125:7;2116:6;:16;:::i;:::-;-1:-1:-1;2142:20:28;;;;;2192:13;2173:32;;2242:24;:22;:24::i;:::-;2215:51;;-1:-1:-1;500:5161:95;;-1:-1:-1;;;;;500:5161:95;1842:142:94;1919:58;1949:5;1956:20;500:5161:95;;;;;;;;-1:-1:-1;500:5161:95;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1496:630:95;;;;;;;;-1:-1:-1;1496:630:95;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1345:788;1956:20:94;1919:29;:58::i;:::-;1842:142;:::o;5510:446:28:-;5575:7;5672:95;5805:4;5789:22;;;;;;:::i;:::-;;;;;;;;;;5640:295;;;5197:25:97;;;;5238:18;;5231:34;;;;5833:14:28;5281:18:97;;;5274:34;5869:13:28;5324:18:97;;;5317:34;5912:4:28;5367:19:97;;;5360:61;5169:19;;5640:295:28;;;;;;;;;;;;5613:336;;;;;;5594:355;;5510:446;:::o;3584:1599:53:-;3703:28;;:74;;1319:7;16446:29;;:34;;3703:74;;;:166;;-1:-1:-1;3797:27:53;;;;:72;;1382:7;16446:29;;:34;;3797:72;;3703:166;:265;;;-1:-1:-1;3889:30:53;;;;:79;;1450:7;16446:29;;:34;;3889:79;;3703:265;:362;;;-1:-1:-1;3988:29:53;;;;:77;;1516:7;16446:29;;:34;;3988:77;;3703:362;:467;;;-1:-1:-1;4085:33:53;;;;:85;;1587:6;16446:29;;:34;;4085:85;;3703:467;:570;;;-1:-1:-1;4190:32:53;;;;:83;;1655:6;16446:29;;:34;;4190:83;;3703:570;:652;;;-1:-1:-1;4293:22:53;;;;:62;;1713:6;16446:29;;:34;;4293:62;;3703:652;:732;;;-1:-1:-1;4375:21:53;;;;:60;;1769:6;16446:29;;:34;;4375:60;;3703:732;:818;;;-1:-1:-1;4455:24:53;;;;:66;;1829:6;16446:29;;:34;;4455:66;;3703:818;:902;;;-1:-1:-1;4541:23:53;;;;:64;;1887:6;16446:29;;:34;;4541:64;;3703:902;:1009;;;-1:-1:-1;4625:33:53;;;;:87;;1959:6;16446:29;;:34;;4625:87;;3703:1009;:1114;;;-1:-1:-1;4732:32:53;;;;:85;;2029:6;16446:29;;:34;;4732:85;;3703:1114;:1236;;;-1:-1:-1;4837:40:53;;;;:102;;2108:6;16446:29;;:34;;4837:102;;3703:1236;:1384;;;-1:-1:-1;4959:43:53;;;;:128;;2190:6;16446:29;;:34;;4959:128;;3703:1384;3686:1491;;;5112:54;-1:-1:-1;;;5160:4:53;5112:39;:54::i;:::-;3584:1599;;:::o;862:257:49:-;986:8;983:1;976:19;-1:-1:-1;;;;;1025:4:49;1021:53;1015:4;1008:67;1098:4;1095:1;1088:15;14:127:97;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:723;200:5;253:3;246:4;238:6;234:17;230:27;220:55;;271:1;268;261:12;220:55;298:13;;-1:-1:-1;;;;;323:30:97;;320:56;;;356:18;;:::i;:::-;405:2;399:9;497:2;459:17;;-1:-1:-1;;455:31:97;;;488:2;451:40;447:54;435:67;;-1:-1:-1;;;;;517:34:97;;553:22;;;514:62;511:88;;;579:18;;:::i;:::-;615:2;608:22;639;;;680:19;;;701:4;676:30;673:39;-1:-1:-1;670:59:97;;;725:1;722;715:12;670:59;782:6;775:4;767:6;763:17;756:4;748:6;744:17;738:51;837:1;809:19;;;830:4;805:30;798:41;;;;813:6;146:723;-1:-1:-1;;;146:723:97:o;874:746::-;1004:6;1012;1020;1073:2;1061:9;1052:7;1048:23;1044:32;1041:52;;;1089:1;1086;1079:12;1041:52;1115:16;;-1:-1:-1;;;;;1160:31:97;;1150:42;;1140:70;;1206:1;1203;1196:12;1140:70;1278:2;1263:18;;1257:25;1229:5;;-1:-1:-1;;;;;;1294:30:97;;1291:50;;;1337:1;1334;1327:12;1291:50;1360:61;1413:7;1404:6;1393:9;1389:22;1360:61;:::i;:::-;1467:2;1452:18;;1446:25;1350:71;;-1:-1:-1;1446:25:97;-1:-1:-1;;;;;;1483:32:97;;1480:52;;;1528:1;1525;1518:12;1480:52;1551:63;1606:7;1595:8;1584:9;1580:24;1551:63;:::i;:::-;1541:73;;;874:746;;;;;:::o;1625:380::-;1704:1;1700:12;;;;1747;;;1768:61;;1822:4;1814:6;1810:17;1800:27;;1768:61;1875:2;1867:6;1864:14;1844:18;1841:38;1838:161;;1921:10;1916:3;1912:20;1909:1;1902:31;1956:4;1953:1;1946:15;1984:4;1981:1;1974:15;1838:161;;1625:380;;;:::o;2136:518::-;2238:2;2233:3;2230:11;2227:421;;;2274:5;2271:1;2264:16;2318:4;2315:1;2305:18;2388:2;2376:10;2372:19;2369:1;2365:27;2359:4;2355:38;2424:4;2412:10;2409:20;2406:47;;;-1:-1:-1;2447:4:97;2406:47;2502:2;2497:3;2493:12;2490:1;2486:20;2480:4;2476:31;2466:41;;2557:81;2575:2;2568:5;2565:13;2557:81;;;2634:1;2620:16;;2601:1;2590:13;2557:81;;;2561:3;;2227:421;2136:518;;;:::o;2830:1299::-;2950:10;;-1:-1:-1;;;;;2972:30:97;;2969:56;;;3005:18;;:::i;:::-;3034:97;3124:6;3084:38;3116:4;3110:11;3084:38;:::i;:::-;3078:4;3034:97;:::i;:::-;3180:4;3211:2;3200:14;;3228:1;3223:649;;;;3916:1;3933:6;3930:89;;;-1:-1:-1;3985:19:97;;;3979:26;3930:89;-1:-1:-1;;2787:1:97;2783:11;;;2779:24;2775:29;2765:40;2811:1;2807:11;;;2762:57;4032:81;;3193:930;;3223:649;2083:1;2076:14;;;2120:4;2107:18;;-1:-1:-1;;3259:20:97;;;3377:222;3391:7;3388:1;3385:14;3377:222;;;3473:19;;;3467:26;3452:42;;3580:4;3565:20;;;;3533:1;3521:14;;;;3407:12;3377:222;;;3381:3;3627:6;3618:7;3615:19;3612:201;;;3688:19;;;3682:26;-1:-1:-1;;3771:1:97;3767:14;;;3783:3;3763:24;3759:37;3755:42;3740:58;3725:74;;3612:201;-1:-1:-1;;;;3859:1:97;3843:14;;;3839:22;3826:36;;-1:-1:-1;2830:1299:97:o;4134:799::-;4264:3;4293:1;4326:6;4320:13;4356:36;4382:9;4356:36;:::i;:::-;4423:1;4408:17;;4434:133;;;;4581:1;4576:332;;;;4401:507;;4434:133;-1:-1:-1;;4467:24:97;;4455:37;;4540:14;;4533:22;4521:35;;4512:45;;;-1:-1:-1;4434:133:97;;4576:332;4607:6;4604:1;4597:17;4655:4;4652:1;4642:18;4682:1;4696:166;4710:6;4707:1;4704:13;4696:166;;;4790:14;;4777:11;;;4770:35;4846:1;4833:15;;;;4732:4;4725:12;4696:166;;;4700:3;;4891:6;4886:3;4882:16;4875:23;;4401:507;-1:-1:-1;4924:3:97;;4134:799;-1:-1:-1;;;;;4134:799:97:o;4938:489::-;500:5161:95;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;",
        "linkReferences": {}
    },
    "deployedBytecode": {
        "object": "0x608060405234801561000f575f80fd5b50600436106101bb575f3560e01c80637ecebe00116100f3578063b47b2fb111610093578063d505accf1161006e578063d505accf14610569578063dc4c90d31461057e578063dd62ed3e146105a5578063e1b4af6914610467575f80fd5b8063b47b2fb114610431578063b6a8b0fa14610467578063c4e833ce14610475575f80fd5b80639f063efc116100ce5780639f063efc146103bd578063a9059cbb146103d0578063a90f8e9a146103e3578063a910f80f14610423575f80fd5b80637ecebe001461038357806391dd7346146103a257806395d89b41146103b5575f80fd5b8063313ce5671161015e578063458658291161013957806345865829146102e3578063575e24b4146102f35780636c2bbe7e1461033157806370a0823114610364575f80fd5b8063313ce567146102945780633440d820146102cd5780633644e515146102db575f80fd5b806318160ddd1161019957806318160ddd1461023e57806321d0ee701461025557806323b872dd14610281578063259982e514610255575f80fd5b806306fdde03146101bf578063095ea7b3146101dd5780631783e86514610200575b5f80fd5b6101c76105cf565b6040516101d49190610f82565b60405180910390f35b6101f06101eb366004610fab565b61065a565b60405190151581526020016101d4565b6101c761020e366004610fd5565b604080516001600160a01b0393841660208201529190921681830152815180820383018152606090910190915290565b61024760025481565b6040519081526020016101d4565b610268610263366004611077565b6106c6565b6040516001600160e01b031990911681526020016101d4565b6101f061028f3660046110ee565b6106e0565b6102bb7f000000000000000000000000000000000000000000000000000000000000000081565b60405160ff90911681526020016101d4565b61026861026336600461112c565b6102476107cd565b610247681b1ae4d6e2ef50000081565b610306610301366004611196565b610827565b604080516001600160e01b03199094168452602084019290925262ffffff16908201526060016101d4565b61034461033f3660046111f0565b610843565b604080516001600160e01b031990931683526020830191909152016101d4565b61024761037236600461127b565b60036020525f908152604090205481565b61024761039136600461127b565b60056020525f908152604090205481565b6101c76103b0366004611296565b61085e565b6101c76108ba565b6103446103cb3660046111f0565b6108c7565b6101f06103de366004610fab565b61093a565b61040b6103f136600461127b565b60066020525f90815260409020546001600160a01b031681565b6040516001600160a01b0390911681526020016101d4565b6102686102633660046112d5565b61044461043f366004611365565b6109b0565b604080516001600160e01b03199093168352600f9190910b6020830152016101d4565b6102686102633660046113c8565b61055c604080516101c0810182525f80825260208201819052918101829052606081018290526080810182905260a0810182905260c0810182905260e08101829052610100810182905261012081018290526101408101829052610160810182905261018081018290526101a081019190915250604080516101c0810182525f808252602082018190529181018290526001606082018190526080820183905260a0820183905260c0820183905260e0820152610100810182905261012081018290526101408101829052610160810182905261018081018290526101a081019190915290565b6040516101d49190611422565b61057c610577366004611543565b610a63565b005b61040b7f000000000000000000000000000000000000000000000000000000000000000081565b6102476105b3366004610fd5565b600460209081525f928352604080842090915290825290205481565b5f80546105db906115b4565b80601f0160208091040260200160405190810160405280929190818152602001828054610607906115b4565b80156106525780601f1061062957610100808354040283529160200191610652565b820191905f5260205f20905b81548152906001019060200180831161063557829003601f168201915b505050505081565b335f8181526004602090815260408083206001600160a01b038716808552925280832085905551919290917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925906106b49086815260200190565b60405180910390a35060015b92915050565b5f604051630a85dc2960e01b815260040160405180910390fd5b6001600160a01b0383165f9081526004602090815260408083203384529091528120545f1981146107395761071583826115fa565b6001600160a01b0386165f9081526004602090815260408083203384529091529020555b6001600160a01b0385165f90815260036020526040812080548592906107609084906115fa565b90915550506001600160a01b038085165f81815260036020526040908190208054870190555190918716907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef906107ba9087815260200190565b60405180910390a3506001949350505050565b5f7f00000000000000000000000000000000000000000000000000000000000000004614610802576107fd610cb5565b905090565b507f000000000000000000000000000000000000000000000000000000000000000090565b5f805f604051630a85dc2960e01b815260040160405180910390fd5b5f80604051630a85dc2960e01b815260040160405180910390fd5b6060336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146108a95760405163570c108560e11b815260040160405180910390fd5b6108b38383610d4d565b9392505050565b600180546105db906115b4565b5f806108e66108d960208a018a61127b565b6001600160a01b03161590565b6108fb57506327c18fbf60e21b90508461092e565b5f6109068760801d90565b61090f9061160d565b600f0b905061091f858583610de6565b506327c18fbf60e21b91508590505b97509795505050505050565b335f9081526003602052604081208054839190839061095a9084906115fa565b90915550506001600160a01b0383165f81815260036020526040908190208054850190555133907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef906106b49086815260200190565b5f806109c26108d9602089018961127b565b6109d7575063b47b2fb160e01b90505f610a58565b6109e4602087018761163a565b6109f9575063b47b2fb160e01b90505f610a58565b5f80876020013512610a2057610a0f8660801d90565b610a189061160d565b600f0b610a2d565b610a2d6020880135611659565b90505f610a3b600583611673565b9050610a48868683610de6565b5063b47b2fb160e01b92505f9150505b965096945050505050565b42841015610ab85760405162461bcd60e51b815260206004820152601760248201527f5045524d49545f444541444c494e455f4558504952454400000000000000000060448201526064015b60405180910390fd5b5f6001610ac36107cd565b6001600160a01b038a81165f8181526005602090815260409182902080546001810190915582517f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c98184015280840194909452938d166060840152608083018c905260a083019390935260c08083018b90528151808403909101815260e08301909152805192019190912061190160f01b6101008301526101028201929092526101228101919091526101420160408051601f1981840301815282825280516020918201205f84529083018083525260ff871690820152606081018590526080810184905260a0016020604051602081039080840390855afa158015610bcb573d5f803e3d5ffd5b5050604051601f1901519150506001600160a01b03811615801590610c015750876001600160a01b0316816001600160a01b0316145b610c4d5760405162461bcd60e51b815260206004820152600e60248201527f494e56414c49445f5349474e45520000000000000000000000000000000000006044820152606401610aaf565b6001600160a01b039081165f9081526004602090815260408083208a8516808552908352928190208990555188815291928a16917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a350505050505050565b5f7f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f5f604051610ce59190611692565b6040805191829003822060208301939093528101919091527fc89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc660608201524660808201523060a082015260c00160405160208183030381529060405280519060200120905090565b60605f80306001600160a01b03168585604051610d6b92919061172e565b5f604051808303815f865af19150503d805f8114610da4576040519150601f19603f3d011682016040523d82523d5f602084013e610da9565b606091505b50915091508115610dbd5791506106c09050565b80515f03610dde576040516314815f4760e31b815260040160405180910390fd5b805160208201fd5b5f829003610df357505050565b5f80610e0184860186610fd5565b90925090506001600160a01b038116610e1b575050505050565b6001600160a01b038181165f9081526006602052604090205416158015610e4a57506001600160a01b03821615155b15610ea7576001600160a01b038181165f90815260066020526040902080547fffffffffffffffffffffffff000000000000000000000000000000000000000016918416919091179055610ea782681b1ae4d6e2ef500000610eeb565b6001600160a01b038181165f908152600660205260409020541615610eda57610eda82610ed5600a86611673565b610eeb565b610ee48184610eeb565b5050505050565b8060025f828254610efc919061173d565b90915550506001600160a01b0382165f818152600360209081526040808320805486019055518481527fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a35050565b5f81518084528060208401602086015e5f602082860101526020601f19601f83011685010191505092915050565b602081525f6108b36020830184610f54565b6001600160a01b0381168114610fa8575f80fd5b50565b5f8060408385031215610fbc575f80fd5b8235610fc781610f94565b946020939093013593505050565b5f8060408385031215610fe6575f80fd5b8235610ff181610f94565b9150602083013561100181610f94565b809150509250929050565b5f60a0828403121561101c575f80fd5b50919050565b5f6080828403121561101c575f80fd5b5f8083601f840112611042575f80fd5b50813567ffffffffffffffff811115611059575f80fd5b602083019150836020828501011115611070575f80fd5b9250929050565b5f805f805f610160868803121561108c575f80fd5b853561109781610f94565b94506110a6876020880161100c565b93506110b58760c08801611022565b925061014086013567ffffffffffffffff8111156110d1575f80fd5b6110dd88828901611032565b969995985093965092949392505050565b5f805f60608486031215611100575f80fd5b833561110b81610f94565b9250602084013561111b81610f94565b929592945050506040919091013590565b5f805f805f6101008688031215611141575f80fd5b853561114c81610f94565b945061115b876020880161100c565b935060c086013561116b81610f94565b925060e086013567ffffffffffffffff8111156110d1575f80fd5b5f6060828403121561101c575f80fd5b5f805f805f61014086880312156111ab575f80fd5b85356111b681610f94565b94506111c5876020880161100c565b93506111d48760c08801611186565b925061012086013567ffffffffffffffff8111156110d1575f80fd5b5f805f805f805f6101a0888a031215611207575f80fd5b873561121281610f94565b96506112218960208a0161100c565b95506112308960c08a01611022565b94506101408801359350610160880135925061018088013567ffffffffffffffff81111561125c575f80fd5b6112688a828b01611032565b989b979a50959850939692959293505050565b5f6020828403121561128b575f80fd5b81356108b381610f94565b5f80602083850312156112a7575f80fd5b823567ffffffffffffffff8111156112bd575f80fd5b6112c985828601611032565b90969095509350505050565b5f805f805f8061012087890312156112eb575f80fd5b86356112f681610f94565b9550611305886020890161100c565b945060c087013561131581610f94565b935060e0870135600281900b811461132b575f80fd5b925061010087013567ffffffffffffffff811115611347575f80fd5b61135389828a01611032565b979a9699509497509295939492505050565b5f805f805f80610160878903121561137b575f80fd5b863561138681610f94565b9550611395886020890161100c565b94506113a48860c08901611186565b9350610120870135925061014087013567ffffffffffffffff811115611347575f80fd5b5f805f805f8061012087890312156113de575f80fd5b86356113e981610f94565b95506113f8886020890161100c565b945060c0870135935060e0870135925061010087013567ffffffffffffffff811115611347575f80fd5b8151151581526101c081016020830151611440602084018215159052565b506040830151611454604084018215159052565b506060830151611468606084018215159052565b50608083015161147c608084018215159052565b5060a083015161149060a084018215159052565b5060c08301516114a460c084018215159052565b5060e08301516114b860e084018215159052565b506101008301516114ce61010084018215159052565b506101208301516114e461012084018215159052565b506101408301516114fa61014084018215159052565b5061016083015161151061016084018215159052565b5061018083015161152661018084018215159052565b506101a083015161153c6101a084018215159052565b5092915050565b5f805f805f805f60e0888a031215611559575f80fd5b873561156481610f94565b9650602088013561157481610f94565b95506040880135945060608801359350608088013560ff81168114611597575f80fd5b9699959850939692959460a0840135945060c09093013592915050565b600181811c908216806115c857607f821691505b60208210810361101c57634e487b7160e01b5f52602260045260245ffd5b634e487b7160e01b5f52601160045260245ffd5b818103818111156106c0576106c06115e6565b5f81600f0b6f7fffffffffffffffffffffffffffffff198103611632576116326115e6565b5f0392915050565b5f6020828403121561164a575f80fd5b813580151581146108b3575f80fd5b5f600160ff1b820161166d5761166d6115e6565b505f0390565b5f8261168d57634e487b7160e01b5f52601260045260245ffd5b500490565b5f8083545f8160011c905060018216806116ad57607f821691505b6020821081036116cb57634e487b7160e01b5f52602260045260245ffd5b8080156116df57600181146116f457611722565b60ff1984168752821515830287019450611722565b5f888152602090205f5b8481101561171a578154898201526001909101906020016116fe565b505082870194505b50929695505050505050565b818382375f9101908152919050565b808201808211156106c0576106c06115e656fea2646970667358221220d716b562e923de6d65b3b209ec9a67b04d4c7ea0304f1281f0d0c45a337a251464736f6c634300081a0033",
        "sourceMap": "500:5161:95:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1031:18:28;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2461:211;;;;;;:::i;:::-;;:::i;:::-;;;1325:14:97;;1318:22;1300:41;;1288:2;1273:18;2461:211:28;1160:187:97;4307:168:95;;;;;;:::i;:::-;4438:30;;;-1:-1:-1;;;;;16155:55:97;;;4438:30:95;;;16137:74:97;16247:55;;;;16227:18;;;16220:83;4438:30:95;;;;;;;;;4407:12;16110:18:97;;;4438:30:95;;;;4307:168;1304:26:28;;;;;;;;;2114:25:97;;;2102:2;2087:18;1304:26:28;1968:177:97;3122:235:94;;;;;;:::i;:::-;;:::i;:::-;;;-1:-1:-1;;;;;;3834:33:97;;;3816:52;;3804:2;3789:18;3122:235:94;3672:202:97;3057:592:28;;;;;;:::i;:::-;;:::i;1083:31::-;;;;;;;;4564:4:97;4552:17;;;4534:36;;4522:2;4507:18;1083:31:28;4392:184:97;2455:156:94;;;;;;:::i;5327:177:28:-;;;:::i;931:60:95:-;;977:14;931:60;;4037:228:94;;;;;;:::i;:::-;;:::i;:::-;;;;-1:-1:-1;;;;;;6810:33:97;;;6792:52;;6875:2;6860:18;;6853:34;;;;6935:8;6923:21;6903:18;;;6896:49;6780:2;6765:18;4037:228:94;6558:393:97;3712:292:94;;;;;;:::i;:::-;;:::i;:::-;;;;-1:-1:-1;;;;;;8323:33:97;;;8305:52;;8388:2;8373:18;;8366:34;;;;8278:18;3712:292:94;8100:306:97;1337:44:28;;;;;;:::i;:::-;;;;;;;;;;;;;;1751:41;;;;;;:::i;:::-;;;;;;;;;;;;;;1018:138:93;;;;;;:::i;:::-;;:::i;1056:20:28:-;;;:::i;3503:798:95:-;;;;;;:::i;:::-;;:::i;2678:373:28:-;;;;;;:::i;:::-;;:::i;815:45:95:-;;;;;;:::i;:::-;;;;;;;;;;;;-1:-1:-1;;;;;815:45:95;;;;;;-1:-1:-1;;;;;9241:55:97;;;9223:74;;9211:2;9196:18;815:45:95;9077:226:97;2644:190:94;;;;;;:::i;2139:1358:95:-;;;;;;:::i;:::-;;:::i;:::-;;;;-1:-1:-1;;;;;;11453:33:97;;;11435:52;;11534:2;11523:22;;;;11518:2;11503:18;;11496:50;11408:18;2139:1358:95;11265:287:97;4555:189:94;;;;;;:::i;1345:788:95:-;;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1496:630:95;;;;;;;;-1:-1:-1;1496:630:95;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1345:788;;;;;;;;:::i;3838:1483:28:-;;;;;;:::i;:::-;;:::i;:::-;;354:41:92;;;;;1388:64:28;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;1031:18;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;2461:211::-;2561:10;2535:4;2551:21;;;:9;:21;;;;;;;;-1:-1:-1;;;;;2551:30:28;;;;;;;;;;:39;;;2606:37;2535:4;;2551:30;;2606:37;;;;2584:6;2114:25:97;;2102:2;2087:18;;1968:177;2606:37:28;;;;;;;;-1:-1:-1;2661:4:28;2461:211;;;;;:::o;3122:235:94:-;3305:6;3330:20;;-1:-1:-1;;;3330:20:94;;;;;;;;;;;3057:592:28;-1:-1:-1;;;;;3209:15:28;;3175:4;3209:15;;;:9;:15;;;;;;;;3225:10;3209:27;;;;;;;;-1:-1:-1;;3287:28:28;;3283:80;;3347:16;3357:6;3347:7;:16;:::i;:::-;-1:-1:-1;;;;;3317:15:28;;;;;;:9;:15;;;;;;;;3333:10;3317:27;;;;;;;:46;3283:80;-1:-1:-1;;;;;3374:15:28;;;;;;:9;:15;;;;;:25;;3393:6;;3374:15;:25;;3393:6;;3374:25;:::i;:::-;;;;-1:-1:-1;;;;;;;3545:13:28;;;;;;;:9;:13;;;;;;;:23;;;;;;3594:26;3545:13;;3594:26;;;;;;;3562:6;2114:25:97;;2102:2;2087:18;;1968:177;3594:26:28;;;;;;;;-1:-1:-1;3638:4:28;;3057:592;-1:-1:-1;;;;3057:592:28:o;5327:177::-;5384:7;5427:16;5410:13;:33;:87;;5473:24;:22;:24::i;:::-;5403:94;;5327:177;:::o;5410:87::-;-1:-1:-1;5446:24:28;;5327:177::o;4037:228:94:-;4184:6;4192:15;4209:6;4238:20;;-1:-1:-1;;;4238:20:94;;;;;;;;;;;3712:292;3938:6;3946:12;3977:20;;-1:-1:-1;;;3977:20:94;;;;;;;;;;;1018:138:93;1097:12;784:10;-1:-1:-1;;;;;806:11:93;784:34;;780:63;;827:16;;-1:-1:-1;;;827:16:93;;;;;;;;;;;780:63;1128:21:::1;1144:4;;1128:15;:21::i;:::-;1121:28:::0;1018:138;-1:-1:-1;;;1018:138:93:o;1056:20:28:-;;;;;;;:::i;3503:798:95:-;3771:6;;3884:29:::1;:13;;::::0;::::1;:3:::0;:13:::1;:::i;:::-;-1:-1:-1::0;;;;;3884:27:95::1;4958:58:83::0;;4870:153;3884:29:95::1;3879:83;;-1:-1:-1::0;;;;3923:31:95;-1:-1:-1;3956:5:95;3915:47:::1;;3879:83;4051:32;4102:15;:5;2107:3:81::0;2103:22;;1958:183;4102:15:95::1;4101:16;;;:::i;:::-;4094:24;;4051:68;;4187:49;4201:8;;4211:24;4187:13;:49::i;:::-;-1:-1:-1::0;;;;4255:31:95;-1:-1:-1;4288:5:95;;-1:-1:-1;1236:1:95::1;3503:798:::0;;;;;;;;;;:::o;2678:373:28:-;2774:10;2748:4;2764:21;;;:9;:21;;;;;:31;;2789:6;;2764:21;2748:4;;2764:31;;2789:6;;2764:31;:::i;:::-;;;;-1:-1:-1;;;;;;;2941:13:28;;;;;;:9;:13;;;;;;;:23;;;;;;2990:32;2999:10;;2990:32;;;;2958:6;2114:25:97;;2102:2;2087:18;;1968:177;2139:1358:95;2370:6;;2477:29:::1;:13;;::::0;::::1;:3:::0;:13:::1;:::i;:29::-;2472:71;;-1:-1:-1::0;;;;2516:23:95;-1:-1:-1;2541:1:95::1;2508:35;;2472:71;2623:21;;::::0;::::1;:10:::0;:21:::1;:::i;:::-;2618:63;;-1:-1:-1::0;;;;2654:23:95;-1:-1:-1;2679:1:95::1;2646:35;;2618:63;3132:22;3186:1:::0;3157:10:::1;:26;;;:30;:129;;3269:15;:5;2107:3:81::0;2103:22;;1958:183;3269:15:95::1;3268:16;;;:::i;:::-;3261:24;;3157:129;;;3210:27;3211:26;::::0;::::1;;3210:27;:::i;:::-;3132:154:::0;-1:-1:-1;3296:21:95::1;3320:18;3337:1;3132:154:::0;3320:18:::1;:::i;:::-;3296:42;;3406:38;3420:8;;3430:13;3406;:38::i;:::-;-1:-1:-1::0;;;;3463:23:95;-1:-1:-1;3488:1:95::1;::::0;-1:-1:-1;;1236:1:95::1;2139:1358:::0;;;;;;;;;:::o;3838:1483:28:-;4057:15;4045:8;:27;;4037:63;;;;-1:-1:-1;;;4037:63:28;;17922:2:97;4037:63:28;;;17904:21:97;17961:2;17941:18;;;17934:30;18000:25;17980:18;;;17973:53;18043:18;;4037:63:28;;;;;;;;;4265:24;4292:805;4428:18;:16;:18::i;:::-;-1:-1:-1;;;;;4873:13:28;;;;;;;:6;:13;;;;;;;;;:15;;;;;;;;4511:449;;4555:165;4511:449;;;18359:25:97;18400:18;;;18393:83;;;;18512:55;;;18492:18;;;18485:83;18584:18;;;18577:34;;;18627:19;;;18620:35;;;;18671:19;;;;18664:35;;;4511:449:28;;;;;;;;;;18331:19:97;;;4511:449:28;;;4472:514;;;;;;;;-1:-1:-1;;;4350:658:28;;;18968:27:97;19011:11;;;19004:27;;;;19047:12;;;19040:28;;;;19084:12;;4350:658:28;;;-1:-1:-1;;4350:658:28;;;;;;;;;4319:707;;4350:658;4319:707;;;;4292:805;;;;;;;;;19334:25:97;19407:4;19395:17;;19375:18;;;19368:45;19429:18;;;19422:34;;;19472:18;;;19465:34;;;19306:19;;4292:805:28;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;4292:805:28;;-1:-1:-1;;4292:805:28;;;-1:-1:-1;;;;;;;5120:30:28;;;;;;:59;;;5174:5;-1:-1:-1;;;;;5154:25:28;:16;-1:-1:-1;;;;;5154:25:28;;5120:59;5112:86;;;;-1:-1:-1;;;5112:86:28;;19712:2:97;5112:86:28;;;19694:21:97;19751:2;19731:18;;;19724:30;19790:16;19770:18;;;19763:44;19824:18;;5112:86:28;19510:338:97;5112:86:28;-1:-1:-1;;;;;5213:27:28;;;;;;;:9;:27;;;;;;;;:36;;;;;;;;;;;;;:44;;;5283:31;2114:25:97;;;5213:36:28;;5283:31;;;;;2087:18:97;5283:31:28;;;;;;;3838:1483;;;;;;;:::o;5510:446::-;5575:7;5672:95;5805:4;5789:22;;;;;;:::i;:::-;;;;;;;;;;5640:295;;;21329:25:97;;;;21370:18;;21363:34;;;;5833:14:28;21413:18:97;;;21406:34;5869:13:28;21456:18:97;;;21449:34;5912:4:28;21499:19:97;;;21492:84;21301:19;;5640:295:28;;;;;;;;;;;;5613:336;;;;;;5594:355;;5510:446;:::o;1990:432:94:-;2071:12;2096;2110:23;2145:4;-1:-1:-1;;;;;2137:18:94;2156:4;;2137:24;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2095:66;;;;2175:7;2171:30;;;2191:10;-1:-1:-1;2184:17:94;;-1:-1:-1;2184:17:94;2171:30;2215:10;:17;2236:1;2215:22;2211:48;;2246:13;;-1:-1:-1;;;2246:13:94;;;;;;;;;;;2211:48;2394:10;2388:17;2383:2;2371:10;2367:19;2360:46;4481:1178:95;4700:1;4681:20;;;4677:33;;4481:1178;;;:::o;4677:33::-;4775:16;;4813:74;;;;4837:8;4813:74;:::i;:::-;4774:113;;-1:-1:-1;4774:113:95;-1:-1:-1;;;;;;4953:22:95;;4949:35;;4977:7;;4481:1178;;;:::o;4949:35::-;-1:-1:-1;;;;;5200:20:95;;;5232:1;5200:20;;;:10;:20;;;;;;;:34;:60;;;;-1:-1:-1;;;;;;5238:22:95;;;;5200:60;5196:172;;;-1:-1:-1;;;;;5276:20:95;;;;;;;:10;:20;;;;;:31;;;;;;;;;;;;;5321:36;5276:31;977:14;5321:5;:36::i;:::-;-1:-1:-1;;;;;5449:20:95;;;5481:1;5449:20;;;:10;:20;;;;;;;:34;5445:101;;5499:36;5505:8;5515:19;5532:2;5515:14;:19;:::i;:::-;5499:5;:36::i;:::-;5621:31;5627:8;5637:14;5621:5;:31::i;:::-;4584:1075;;4481:1178;;;:::o;6150:325:28:-;6235:6;6220:11;;:21;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;;;6387:13:28;;;;;;:9;:13;;;;;;;;:23;;;;;;6436:32;2114:25:97;;;6436:32:28;;2087:18:97;6436:32:28;;;;;;;6150:325;;:::o;14:289:97:-;56:3;94:5;88:12;121:6;116:3;109:19;177:6;170:4;163:5;159:16;152:4;147:3;143:14;137:47;229:1;222:4;213:6;208:3;204:16;200:27;193:38;292:4;285:2;281:7;276:2;268:6;264:15;260:29;255:3;251:39;247:50;240:57;;;14:289;;;;:::o;308:220::-;457:2;446:9;439:21;420:4;477:45;518:2;507:9;503:18;495:6;477:45;:::i;533:154::-;-1:-1:-1;;;;;612:5:97;608:54;601:5;598:65;588:93;;677:1;674;667:12;588:93;533:154;:::o;692:367::-;760:6;768;821:2;809:9;800:7;796:23;792:32;789:52;;;837:1;834;827:12;789:52;876:9;863:23;895:31;920:5;895:31;:::i;:::-;945:5;1023:2;1008:18;;;;995:32;;-1:-1:-1;;;692:367:97:o;1352:388::-;1420:6;1428;1481:2;1469:9;1460:7;1456:23;1452:32;1449:52;;;1497:1;1494;1487:12;1449:52;1536:9;1523:23;1555:31;1580:5;1555:31;:::i;:::-;1605:5;-1:-1:-1;1662:2:97;1647:18;;1634:32;1675:33;1634:32;1675:33;:::i;:::-;1727:7;1717:17;;;1352:388;;;;;:::o;2150:156::-;2210:5;2255:3;2246:6;2241:3;2237:16;2233:26;2230:46;;;2272:1;2269;2262:12;2230:46;-1:-1:-1;2294:6:97;2150:156;-1:-1:-1;2150:156:97:o;2311:170::-;2385:5;2430:3;2421:6;2416:3;2412:16;2408:26;2405:46;;;2447:1;2444;2437:12;2486:347;2537:8;2547:6;2601:3;2594:4;2586:6;2582:17;2578:27;2568:55;;2619:1;2616;2609:12;2568:55;-1:-1:-1;2642:20:97;;2685:18;2674:30;;2671:50;;;2717:1;2714;2707:12;2671:50;2754:4;2746:6;2742:17;2730:29;;2806:3;2799:4;2790:6;2782;2778:19;2774:30;2771:39;2768:59;;;2823:1;2820;2813:12;2768:59;2486:347;;;;;:::o;2838:829::-;3005:6;3013;3021;3029;3037;3090:3;3078:9;3069:7;3065:23;3061:33;3058:53;;;3107:1;3104;3097:12;3058:53;3146:9;3133:23;3165:31;3190:5;3165:31;:::i;:::-;3215:5;-1:-1:-1;3239:63:97;3294:7;3289:2;3274:18;;3239:63;:::i;:::-;3229:73;;3321:78;3391:7;3385:3;3374:9;3370:19;3321:78;:::i;:::-;3311:88;;3450:3;3439:9;3435:19;3422:33;3478:18;3470:6;3467:30;3464:50;;;3510:1;3507;3500:12;3464:50;3549:58;3599:7;3590:6;3579:9;3575:22;3549:58;:::i;:::-;2838:829;;;;-1:-1:-1;2838:829:97;;-1:-1:-1;3626:8:97;;3523:84;2838:829;-1:-1:-1;;;2838:829:97:o;3879:508::-;3956:6;3964;3972;4025:2;4013:9;4004:7;4000:23;3996:32;3993:52;;;4041:1;4038;4031:12;3993:52;4080:9;4067:23;4099:31;4124:5;4099:31;:::i;:::-;4149:5;-1:-1:-1;4206:2:97;4191:18;;4178:32;4219:33;4178:32;4219:33;:::i;:::-;3879:508;;4271:7;;-1:-1:-1;;;4351:2:97;4336:18;;;;4323:32;;3879:508::o;4581:815::-;4706:6;4714;4722;4730;4738;4791:3;4779:9;4770:7;4766:23;4762:33;4759:53;;;4808:1;4805;4798:12;4759:53;4847:9;4834:23;4866:31;4891:5;4866:31;:::i;:::-;4916:5;-1:-1:-1;4940:63:97;4995:7;4990:2;4975:18;;4940:63;:::i;:::-;4930:73;;5055:3;5044:9;5040:19;5027:33;5069;5094:7;5069:33;:::i;:::-;5121:7;-1:-1:-1;5179:3:97;5164:19;;5151:33;5207:18;5196:30;;5193:50;;;5239:1;5236;5229:12;5583:158;5646:5;5691:2;5682:6;5677:3;5673:16;5669:25;5666:45;;;5707:1;5704;5697:12;5746:807;5902:6;5910;5918;5926;5934;5987:3;5975:9;5966:7;5962:23;5958:33;5955:53;;;6004:1;6001;5994:12;5955:53;6043:9;6030:23;6062:31;6087:5;6062:31;:::i;:::-;6112:5;-1:-1:-1;6136:63:97;6191:7;6186:2;6171:18;;6136:63;:::i;:::-;6126:73;;6218:67;6277:7;6271:3;6260:9;6256:19;6218:67;:::i;:::-;6208:77;;6336:3;6325:9;6321:19;6308:33;6364:18;6356:6;6353:30;6350:50;;;6396:1;6393;6386:12;6956:1139;7209:6;7217;7225;7233;7241;7249;7257;7310:3;7298:9;7289:7;7285:23;7281:33;7278:53;;;7327:1;7324;7317:12;7278:53;7366:9;7353:23;7385:31;7410:5;7385:31;:::i;:::-;7435:5;-1:-1:-1;7459:63:97;7514:7;7509:2;7494:18;;7459:63;:::i;:::-;7449:73;;7541:78;7611:7;7605:3;7594:9;7590:19;7541:78;:::i;:::-;7531:88;-1:-1:-1;7692:3:97;7677:19;;7664:33;;-1:-1:-1;7796:3:97;7781:19;;7768:33;;-1:-1:-1;7878:3:97;7863:19;;7850:33;7906:18;7895:30;;7892:50;;;7938:1;7935;7928:12;7892:50;7977:58;8027:7;8018:6;8007:9;8003:22;7977:58;:::i;:::-;6956:1139;;;;-1:-1:-1;6956:1139:97;;-1:-1:-1;6956:1139:97;;;;7951:84;;-1:-1:-1;;;6956:1139:97:o;8411:247::-;8470:6;8523:2;8511:9;8502:7;8498:23;8494:32;8491:52;;;8539:1;8536;8529:12;8491:52;8578:9;8565:23;8597:31;8622:5;8597:31;:::i;8663:409::-;8733:6;8741;8794:2;8782:9;8773:7;8769:23;8765:32;8762:52;;;8810:1;8807;8800:12;8762:52;8850:9;8837:23;8883:18;8875:6;8872:30;8869:50;;;8915:1;8912;8905:12;8869:50;8954:58;9004:7;8995:6;8984:9;8980:22;8954:58;:::i;:::-;9031:8;;8928:84;;-1:-1:-1;8663:409:97;-1:-1:-1;;;;8663:409:97:o;9308:985::-;9440:6;9448;9456;9464;9472;9480;9533:3;9521:9;9512:7;9508:23;9504:33;9501:53;;;9550:1;9547;9540:12;9501:53;9589:9;9576:23;9608:31;9633:5;9608:31;:::i;:::-;9658:5;-1:-1:-1;9682:63:97;9737:7;9732:2;9717:18;;9682:63;:::i;:::-;9672:73;;9797:3;9786:9;9782:19;9769:33;9811;9836:7;9811:33;:::i;:::-;9863:7;-1:-1:-1;9922:3:97;9907:19;;9894:33;9969:1;9958:22;;;9946:35;;9936:63;;9995:1;9992;9985:12;9936:63;10018:7;-1:-1:-1;10076:3:97;10061:19;;10048:33;10104:18;10093:30;;10090:50;;;10136:1;10133;10126:12;10090:50;10175:58;10225:7;10216:6;10205:9;10201:22;10175:58;:::i;:::-;9308:985;;;;-1:-1:-1;9308:985:97;;-1:-1:-1;9308:985:97;;10252:8;;9308:985;-1:-1:-1;;;9308:985:97:o;10298:962::-;10497:6;10505;10513;10521;10529;10537;10590:3;10578:9;10569:7;10565:23;10561:33;10558:53;;;10607:1;10604;10597:12;10558:53;10646:9;10633:23;10665:31;10690:5;10665:31;:::i;:::-;10715:5;-1:-1:-1;10739:63:97;10794:7;10789:2;10774:18;;10739:63;:::i;:::-;10729:73;;10821:67;10880:7;10874:3;10863:9;10859:19;10821:67;:::i;:::-;10811:77;-1:-1:-1;10961:3:97;10946:19;;10933:33;;-1:-1:-1;11043:3:97;11028:19;;11015:33;11071:18;11060:30;;11057:50;;;11103:1;11100;11093:12;11557:915;11691:6;11699;11707;11715;11723;11731;11784:3;11772:9;11763:7;11759:23;11755:33;11752:53;;;11801:1;11798;11791:12;11752:53;11840:9;11827:23;11859:31;11884:5;11859:31;:::i;:::-;11909:5;-1:-1:-1;11933:63:97;11988:7;11983:2;11968:18;;11933:63;:::i;:::-;11923:73;-1:-1:-1;12069:3:97;12054:19;;12041:33;;-1:-1:-1;12173:3:97;12158:19;;12145:33;;-1:-1:-1;12255:3:97;12240:19;;12227:33;12283:18;12272:30;;12269:50;;;12315:1;12312;12305:12;12477:1801;12700:13;;1134;1127:21;1115:34;;12671:3;12656:19;;12772:4;12764:6;12760:17;12754:24;12787:51;12832:4;12821:9;12817:20;12803:12;1134:13;1127:21;1115:34;;1064:91;12787:51;;12887:4;12879:6;12875:17;12869:24;12902:53;12949:4;12938:9;12934:20;12918:14;1134:13;1127:21;1115:34;;1064:91;12902:53;;13004:4;12996:6;12992:17;12986:24;13019:53;13066:4;13055:9;13051:20;13035:14;1134:13;1127:21;1115:34;;1064:91;13019:53;;13121:4;13113:6;13109:17;13103:24;13136:53;13183:4;13172:9;13168:20;13152:14;1134:13;1127:21;1115:34;;1064:91;13136:53;;13238:4;13230:6;13226:17;13220:24;13253:53;13300:4;13289:9;13285:20;13269:14;1134:13;1127:21;1115:34;;1064:91;13253:53;;13355:4;13347:6;13343:17;13337:24;13370:53;13417:4;13406:9;13402:20;13386:14;1134:13;1127:21;1115:34;;1064:91;13370:53;;13472:4;13464:6;13460:17;13454:24;13487:53;13534:4;13523:9;13519:20;13503:14;1134:13;1127:21;1115:34;;1064:91;13487:53;;13589:6;13581;13577:19;13571:26;13606:55;13653:6;13642:9;13638:22;13622:14;1134:13;1127:21;1115:34;;1064:91;13606:55;;13710:6;13702;13698:19;13692:26;13727:55;13774:6;13763:9;13759:22;13743:14;1134:13;1127:21;1115:34;;1064:91;13727:55;;13831:6;13823;13819:19;13813:26;13848:55;13895:6;13884:9;13880:22;13864:14;1134:13;1127:21;1115:34;;1064:91;13848:55;;13953:6;13945;13941:19;13935:26;13970:56;14018:6;14007:9;14003:22;13986:15;1134:13;1127:21;1115:34;;1064:91;13970:56;;14076:6;14068;14064:19;14058:26;14093:56;14141:6;14130:9;14126:22;14109:15;1134:13;1127:21;1115:34;;1064:91;14093:56;;14199:6;14191;14187:19;14181:26;14216:56;14264:6;14253:9;14249:22;14232:15;1134:13;1127:21;1115:34;;1064:91;14216:56;;12477:1801;;;;:::o;14283:1037::-;14394:6;14402;14410;14418;14426;14434;14442;14495:3;14483:9;14474:7;14470:23;14466:33;14463:53;;;14512:1;14509;14502:12;14463:53;14551:9;14538:23;14570:31;14595:5;14570:31;:::i;:::-;14620:5;-1:-1:-1;14677:2:97;14662:18;;14649:32;14690:33;14649:32;14690:33;:::i;:::-;14742:7;-1:-1:-1;14822:2:97;14807:18;;14794:32;;-1:-1:-1;14925:2:97;14910:18;;14897:32;;-1:-1:-1;15007:3:97;14992:19;;14979:33;15056:4;15043:18;;15031:31;;15021:59;;15076:1;15073;15066:12;15021:59;14283:1037;;;;-1:-1:-1;14283:1037:97;;;;15099:7;15179:3;15164:19;;15151:33;;-1:-1:-1;15283:3:97;15268:19;;;15255:33;;14283:1037;-1:-1:-1;;14283:1037:97:o;15578:380::-;15657:1;15653:12;;;;15700;;;15721:61;;15775:4;15767:6;15763:17;15753:27;;15721:61;15828:2;15820:6;15817:14;15797:18;15794:38;15791:161;;15874:10;15869:3;15865:20;15862:1;15855:31;15909:4;15906:1;15899:15;15937:4;15934:1;15927:15;16314:127;16375:10;16370:3;16366:20;16363:1;16356:31;16406:4;16403:1;16396:15;16430:4;16427:1;16420:15;16446:128;16513:9;;;16534:11;;;16531:37;;;16548:18;;:::i;16861:213::-;16896:3;16944:5;16940:2;16929:21;16978:34;16974:39;16965:7;16962:52;16959:78;;17017:18;;:::i;:::-;17057:1;17053:15;;16861:213;-1:-1:-1;;16861:213:97:o;17079:273::-;17135:6;17188:2;17176:9;17167:7;17163:23;17159:32;17156:52;;;17204:1;17201;17194:12;17156:52;17243:9;17230:23;17296:5;17289:13;17282:21;17275:5;17272:32;17262:60;;17318:1;17315;17308:12;17357:136;17392:3;-1:-1:-1;;;17413:22:97;;17410:48;;17438:18;;:::i;:::-;-1:-1:-1;17478:1:97;17474:13;;17357:136::o;17498:217::-;17538:1;17564;17554:132;;17608:10;17603:3;17599:20;17596:1;17589:31;17643:4;17640:1;17633:15;17671:4;17668:1;17661:15;17554:132;-1:-1:-1;17700:9:97;;17498:217::o;19982:1083::-;20112:3;20141:1;20174:6;20168:13;20204:1;20231:9;20228:1;20224:17;20214:27;;20291:1;20280:9;20276:17;20312:18;20302:61;;20356:4;20348:6;20344:17;20334:27;;20302:61;20409:2;20401:6;20398:14;20378:18;20375:38;20372:161;;20455:10;20450:3;20446:20;20443:1;20436:31;20490:4;20487:1;20480:15;20518:4;20515:1;20508:15;20372:161;20549:18;20576:133;;;;20723:1;20718:322;;;;20542:498;;20576:133;-1:-1:-1;;20609:24:97;;20597:37;;20682:14;;20675:22;20663:35;;20654:45;;;-1:-1:-1;20576:133:97;;20718:322;19929:1;19922:14;;;19966:4;19953:18;;20816:1;20830:164;20844:6;20841:1;20838:13;20830:164;;;20922:14;;20909:11;;;20902:35;20978:1;20965:15;;;;20866:2;20859:10;20830:164;;;20834:3;;21023:6;21018:3;21014:16;21007:23;;20542:498;-1:-1:-1;21056:3:97;;19982:1083;-1:-1:-1;;;;;;19982:1083:97:o;21587:271::-;21770:6;21762;21757:3;21744:33;21726:3;21796:16;;21821:13;;;21796:16;21587:271;-1:-1:-1;21587:271:97:o;22272:125::-;22337:9;;;22358:10;;;22355:36;;;22371:18;;:::i",
        "linkReferences": {},
        "immutableReferences": {
            "39675": [
                {
                    "start": 665,
                    "length": 32
                }
            ],
            "39689": [
                {
                    "start": 2000,
                    "length": 32
                }
            ],
            "39691": [
                {
                    "start": 2053,
                    "length": 32
                }
            ],
            "55910": [
                {
                    "start": 1411,
                    "length": 32
                },
                {
                    "start": 2155,
                    "length": 32
                }
            ]
        }
    },
    "methodIdentifiers": {
        "DOMAIN_SEPARATOR()": "3644e515",
        "POINTS_FOR_REFERRAL()": "45865829",
        "afterAddLiquidity(address,(address,address,uint24,int24,address),(int24,int24,int256,bytes32),int256,int256,bytes)": "9f063efc",
        "afterDonate(address,(address,address,uint24,int24,address),uint256,uint256,bytes)": "e1b4af69",
        "afterInitialize(address,(address,address,uint24,int24,address),uint160,int24,bytes)": "a910f80f",
        "afterRemoveLiquidity(address,(address,address,uint24,int24,address),(int24,int24,int256,bytes32),int256,int256,bytes)": "6c2bbe7e",
        "afterSwap(address,(address,address,uint24,int24,address),(bool,int256,uint160),int256,bytes)": "b47b2fb1",
        "allowance(address,address)": "dd62ed3e",
        "approve(address,uint256)": "095ea7b3",
        "balanceOf(address)": "70a08231",
        "beforeAddLiquidity(address,(address,address,uint24,int24,address),(int24,int24,int256,bytes32),bytes)": "259982e5",
        "beforeDonate(address,(address,address,uint24,int24,address),uint256,uint256,bytes)": "b6a8b0fa",
        "beforeInitialize(address,(address,address,uint24,int24,address),uint160,bytes)": "3440d820",
        "beforeRemoveLiquidity(address,(address,address,uint24,int24,address),(int24,int24,int256,bytes32),bytes)": "21d0ee70",
        "beforeSwap(address,(address,address,uint24,int24,address),(bool,int256,uint160),bytes)": "575e24b4",
        "decimals()": "313ce567",
        "getHookData(address,address)": "1783e865",
        "getHookPermissions()": "c4e833ce",
        "name()": "06fdde03",
        "nonces(address)": "7ecebe00",
        "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": "d505accf",
        "poolManager()": "dc4c90d3",
        "referredBy(address)": "a90f8e9a",
        "symbol()": "95d89b41",
        "totalSupply()": "18160ddd",
        "transfer(address,uint256)": "a9059cbb",
        "transferFrom(address,address,uint256)": "23b872dd",
        "unlockCallback(bytes)": "91dd7346"
    },
    "rawMetadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract IPoolManager\",\"name\":\"_manager\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_symbol\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"HookNotImplemented\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidPool\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"LockFailure\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotPoolManager\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotSelf\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"POINTS_FOR_REFERRAL\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"Currency\",\"name\":\"currency0\",\"type\":\"address\"},{\"internalType\":\"Currency\",\"name\":\"currency1\",\"type\":\"address\"},{\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"},{\"internalType\":\"int24\",\"name\":\"tickSpacing\",\"type\":\"int24\"},{\"internalType\":\"contract IHooks\",\"name\":\"hooks\",\"type\":\"address\"}],\"internalType\":\"struct PoolKey\",\"name\":\"key\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"},{\"internalType\":\"int256\",\"name\":\"liquidityDelta\",\"type\":\"int256\"},{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"}],\"internalType\":\"struct IPoolManager.ModifyLiquidityParams\",\"name\":\"\",\"type\":\"tuple\"},{\"internalType\":\"BalanceDelta\",\"name\":\"delta\",\"type\":\"int256\"},{\"internalType\":\"BalanceDelta\",\"name\":\"delta1\",\"type\":\"int256\"},{\"internalType\":\"bytes\",\"name\":\"hookData\",\"type\":\"bytes\"}],\"name\":\"afterAddLiquidity\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"},{\"internalType\":\"BalanceDelta\",\"name\":\"\",\"type\":\"int256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"Currency\",\"name\":\"currency0\",\"type\":\"address\"},{\"internalType\":\"Currency\",\"name\":\"currency1\",\"type\":\"address\"},{\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"},{\"internalType\":\"int24\",\"name\":\"tickSpacing\",\"type\":\"int24\"},{\"internalType\":\"contract IHooks\",\"name\":\"hooks\",\"type\":\"address\"}],\"internalType\":\"struct PoolKey\",\"name\":\"\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"afterDonate\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"Currency\",\"name\":\"currency0\",\"type\":\"address\"},{\"internalType\":\"Currency\",\"name\":\"currency1\",\"type\":\"address\"},{\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"},{\"internalType\":\"int24\",\"name\":\"tickSpacing\",\"type\":\"int24\"},{\"internalType\":\"contract IHooks\",\"name\":\"hooks\",\"type\":\"address\"}],\"internalType\":\"struct PoolKey\",\"name\":\"\",\"type\":\"tuple\"},{\"internalType\":\"uint160\",\"name\":\"\",\"type\":\"uint160\"},{\"internalType\":\"int24\",\"name\":\"\",\"type\":\"int24\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"afterInitialize\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"Currency\",\"name\":\"currency0\",\"type\":\"address\"},{\"internalType\":\"Currency\",\"name\":\"currency1\",\"type\":\"address\"},{\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"},{\"internalType\":\"int24\",\"name\":\"tickSpacing\",\"type\":\"int24\"},{\"internalType\":\"contract IHooks\",\"name\":\"hooks\",\"type\":\"address\"}],\"internalType\":\"struct PoolKey\",\"name\":\"\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"},{\"internalType\":\"int256\",\"name\":\"liquidityDelta\",\"type\":\"int256\"},{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"}],\"internalType\":\"struct IPoolManager.ModifyLiquidityParams\",\"name\":\"\",\"type\":\"tuple\"},{\"internalType\":\"BalanceDelta\",\"name\":\"\",\"type\":\"int256\"},{\"internalType\":\"BalanceDelta\",\"name\":\"\",\"type\":\"int256\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"afterRemoveLiquidity\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"},{\"internalType\":\"BalanceDelta\",\"name\":\"\",\"type\":\"int256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"Currency\",\"name\":\"currency0\",\"type\":\"address\"},{\"internalType\":\"Currency\",\"name\":\"currency1\",\"type\":\"address\"},{\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"},{\"internalType\":\"int24\",\"name\":\"tickSpacing\",\"type\":\"int24\"},{\"internalType\":\"contract IHooks\",\"name\":\"hooks\",\"type\":\"address\"}],\"internalType\":\"struct PoolKey\",\"name\":\"key\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"bool\",\"name\":\"zeroForOne\",\"type\":\"bool\"},{\"internalType\":\"int256\",\"name\":\"amountSpecified\",\"type\":\"int256\"},{\"internalType\":\"uint160\",\"name\":\"sqrtPriceLimitX96\",\"type\":\"uint160\"}],\"internalType\":\"struct IPoolManager.SwapParams\",\"name\":\"swapParams\",\"type\":\"tuple\"},{\"internalType\":\"BalanceDelta\",\"name\":\"delta\",\"type\":\"int256\"},{\"internalType\":\"bytes\",\"name\":\"hookData\",\"type\":\"bytes\"}],\"name\":\"afterSwap\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"},{\"internalType\":\"int128\",\"name\":\"\",\"type\":\"int128\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"Currency\",\"name\":\"currency0\",\"type\":\"address\"},{\"internalType\":\"Currency\",\"name\":\"currency1\",\"type\":\"address\"},{\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"},{\"internalType\":\"int24\",\"name\":\"tickSpacing\",\"type\":\"int24\"},{\"internalType\":\"contract IHooks\",\"name\":\"hooks\",\"type\":\"address\"}],\"internalType\":\"struct PoolKey\",\"name\":\"\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"},{\"internalType\":\"int256\",\"name\":\"liquidityDelta\",\"type\":\"int256\"},{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"}],\"internalType\":\"struct IPoolManager.ModifyLiquidityParams\",\"name\":\"\",\"type\":\"tuple\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"beforeAddLiquidity\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"Currency\",\"name\":\"currency0\",\"type\":\"address\"},{\"internalType\":\"Currency\",\"name\":\"currency1\",\"type\":\"address\"},{\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"},{\"internalType\":\"int24\",\"name\":\"tickSpacing\",\"type\":\"int24\"},{\"internalType\":\"contract IHooks\",\"name\":\"hooks\",\"type\":\"address\"}],\"internalType\":\"struct PoolKey\",\"name\":\"\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"beforeDonate\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"Currency\",\"name\":\"currency0\",\"type\":\"address\"},{\"internalType\":\"Currency\",\"name\":\"currency1\",\"type\":\"address\"},{\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"},{\"internalType\":\"int24\",\"name\":\"tickSpacing\",\"type\":\"int24\"},{\"internalType\":\"contract IHooks\",\"name\":\"hooks\",\"type\":\"address\"}],\"internalType\":\"struct PoolKey\",\"name\":\"\",\"type\":\"tuple\"},{\"internalType\":\"uint160\",\"name\":\"\",\"type\":\"uint160\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"beforeInitialize\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"Currency\",\"name\":\"currency0\",\"type\":\"address\"},{\"internalType\":\"Currency\",\"name\":\"currency1\",\"type\":\"address\"},{\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"},{\"internalType\":\"int24\",\"name\":\"tickSpacing\",\"type\":\"int24\"},{\"internalType\":\"contract IHooks\",\"name\":\"hooks\",\"type\":\"address\"}],\"internalType\":\"struct PoolKey\",\"name\":\"\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"},{\"internalType\":\"int256\",\"name\":\"liquidityDelta\",\"type\":\"int256\"},{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"}],\"internalType\":\"struct IPoolManager.ModifyLiquidityParams\",\"name\":\"\",\"type\":\"tuple\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"beforeRemoveLiquidity\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"Currency\",\"name\":\"currency0\",\"type\":\"address\"},{\"internalType\":\"Currency\",\"name\":\"currency1\",\"type\":\"address\"},{\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"},{\"internalType\":\"int24\",\"name\":\"tickSpacing\",\"type\":\"int24\"},{\"internalType\":\"contract IHooks\",\"name\":\"hooks\",\"type\":\"address\"}],\"internalType\":\"struct PoolKey\",\"name\":\"\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"bool\",\"name\":\"zeroForOne\",\"type\":\"bool\"},{\"internalType\":\"int256\",\"name\":\"amountSpecified\",\"type\":\"int256\"},{\"internalType\":\"uint160\",\"name\":\"sqrtPriceLimitX96\",\"type\":\"uint160\"}],\"internalType\":\"struct IPoolManager.SwapParams\",\"name\":\"\",\"type\":\"tuple\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"beforeSwap\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"},{\"internalType\":\"BeforeSwapDelta\",\"name\":\"\",\"type\":\"int256\"},{\"internalType\":\"uint24\",\"name\":\"\",\"type\":\"uint24\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"referrer\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"referree\",\"type\":\"address\"}],\"name\":\"getHookData\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getHookPermissions\",\"outputs\":[{\"components\":[{\"internalType\":\"bool\",\"name\":\"beforeInitialize\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"afterInitialize\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"beforeAddLiquidity\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"afterAddLiquidity\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"beforeRemoveLiquidity\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"afterRemoveLiquidity\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"beforeSwap\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"afterSwap\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"beforeDonate\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"afterDonate\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"beforeSwapReturnDelta\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"afterSwapReturnDelta\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"afterAddLiquidityReturnDelta\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"afterRemoveLiquidityReturnDelta\",\"type\":\"bool\"}],\"internalType\":\"struct Hooks.Permissions\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"poolManager\",\"outputs\":[{\"internalType\":\"contract IPoolManager\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"referredBy\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"unlockCallback\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"afterDonate(address,(address,address,uint24,int24,address),uint256,uint256,bytes)\":{\"params\":{\"amount0\":\"The amount of token0 being donated\",\"amount1\":\"The amount of token1 being donated\",\"hookData\":\"Arbitrary data handed into the PoolManager by the donor to be be passed on to the hook\",\"key\":\"The key for the pool\",\"sender\":\"The initial msg.sender for the donate call\"},\"returns\":{\"_0\":\"bytes4 The function selector for the hook\"}},\"afterInitialize(address,(address,address,uint24,int24,address),uint160,int24,bytes)\":{\"params\":{\"hookData\":\"Arbitrary data handed into the PoolManager by the initializer to be be passed on to the hook\",\"key\":\"The key for the pool being initialized\",\"sender\":\"The initial msg.sender for the initialize call\",\"sqrtPriceX96\":\"The sqrt(price) of the pool as a Q64.96\",\"tick\":\"The current tick after the state of a pool is initialized\"},\"returns\":{\"_0\":\"bytes4 The function selector for the hook\"}},\"afterRemoveLiquidity(address,(address,address,uint24,int24,address),(int24,int24,int256,bytes32),int256,int256,bytes)\":{\"params\":{\"delta\":\"The caller's balance delta after adding liquidity; the sum of principal delta, fees accrued, and hook delta\",\"feesAccrued\":\"The fees accrued since the last time fees were collected from this position\",\"hookData\":\"Arbitrary data handed into the PoolManager by the liquidity provider to be be passed on to the hook\",\"key\":\"The key for the pool\",\"params\":\"The parameters for removing liquidity\",\"sender\":\"The initial msg.sender for the remove liquidity call\"},\"returns\":{\"_0\":\"bytes4 The function selector for the hook\",\"_1\":\"BalanceDelta The hook's delta in token0 and token1. Positive: the hook is owed/took currency, negative: the hook owes/sent currency\"}},\"beforeAddLiquidity(address,(address,address,uint24,int24,address),(int24,int24,int256,bytes32),bytes)\":{\"params\":{\"hookData\":\"Arbitrary data handed into the PoolManager by the liquidity provider to be passed on to the hook\",\"key\":\"The key for the pool\",\"params\":\"The parameters for adding liquidity\",\"sender\":\"The initial msg.sender for the add liquidity call\"},\"returns\":{\"_0\":\"bytes4 The function selector for the hook\"}},\"beforeDonate(address,(address,address,uint24,int24,address),uint256,uint256,bytes)\":{\"params\":{\"amount0\":\"The amount of token0 being donated\",\"amount1\":\"The amount of token1 being donated\",\"hookData\":\"Arbitrary data handed into the PoolManager by the donor to be be passed on to the hook\",\"key\":\"The key for the pool\",\"sender\":\"The initial msg.sender for the donate call\"},\"returns\":{\"_0\":\"bytes4 The function selector for the hook\"}},\"beforeInitialize(address,(address,address,uint24,int24,address),uint160,bytes)\":{\"params\":{\"hookData\":\"Arbitrary data handed into the PoolManager by the initializer to be be passed on to the hook\",\"key\":\"The key for the pool being initialized\",\"sender\":\"The initial msg.sender for the initialize call\",\"sqrtPriceX96\":\"The sqrt(price) of the pool as a Q64.96\"},\"returns\":{\"_0\":\"bytes4 The function selector for the hook\"}},\"beforeRemoveLiquidity(address,(address,address,uint24,int24,address),(int24,int24,int256,bytes32),bytes)\":{\"params\":{\"hookData\":\"Arbitrary data handed into the PoolManager by the liquidity provider to be be passed on to the hook\",\"key\":\"The key for the pool\",\"params\":\"The parameters for removing liquidity\",\"sender\":\"The initial msg.sender for the remove liquidity call\"},\"returns\":{\"_0\":\"bytes4 The function selector for the hook\"}},\"beforeSwap(address,(address,address,uint24,int24,address),(bool,int256,uint160),bytes)\":{\"params\":{\"hookData\":\"Arbitrary data handed into the PoolManager by the swapper to be be passed on to the hook\",\"key\":\"The key for the pool\",\"params\":\"The parameters for the swap\",\"sender\":\"The initial msg.sender for the swap call\"},\"returns\":{\"_0\":\"bytes4 The function selector for the hook\",\"_1\":\"BeforeSwapDelta The hook's delta in specified and unspecified currencies. Positive: the hook is owed/took currency, negative: the hook owes/sent currency\",\"_2\":\"uint24 Optionally override the lp fee, only used if three conditions are met: 1. the Pool has a dynamic fee, 2. the value's 2nd highest bit is set (23rd bit, 0x400000), and 3. the value is less than or equal to the maximum fee (1 million)\"}},\"getHookPermissions()\":{\"details\":\"Used at deployment to validate the address correctly represents the expected permissions\"},\"unlockCallback(bytes)\":{\"details\":\"We force the onlyPoolManager modifier by exposing a virtual function after the onlyPoolManager check.\",\"params\":{\"data\":\"The data that was passed to the call to unlock\"},\"returns\":{\"_0\":\"Any data that you want to be returned from the unlock call\"}}},\"version\":1},\"userdoc\":{\"errors\":{\"NotPoolManager()\":[{\"notice\":\"Thrown when calling unlockCallback where the caller is not PoolManager\"}]},\"kind\":\"user\",\"methods\":{\"afterDonate(address,(address,address,uint24,int24,address),uint256,uint256,bytes)\":{\"notice\":\"The hook called after donate\"},\"afterInitialize(address,(address,address,uint24,int24,address),uint160,int24,bytes)\":{\"notice\":\"The hook called after the state of a pool is initialized\"},\"afterRemoveLiquidity(address,(address,address,uint24,int24,address),(int24,int24,int256,bytes32),int256,int256,bytes)\":{\"notice\":\"The hook called after liquidity is removed\"},\"beforeAddLiquidity(address,(address,address,uint24,int24,address),(int24,int24,int256,bytes32),bytes)\":{\"notice\":\"The hook called before liquidity is added\"},\"beforeDonate(address,(address,address,uint24,int24,address),uint256,uint256,bytes)\":{\"notice\":\"The hook called before donate\"},\"beforeInitialize(address,(address,address,uint24,int24,address),uint160,bytes)\":{\"notice\":\"The hook called before the state of a pool is initialized\"},\"beforeRemoveLiquidity(address,(address,address,uint24,int24,address),(int24,int24,int256,bytes32),bytes)\":{\"notice\":\"The hook called before liquidity is removed\"},\"beforeSwap(address,(address,address,uint24,int24,address),(bool,int256,uint160),bytes)\":{\"notice\":\"The hook called before a swap\"},\"getHookPermissions()\":{\"notice\":\"Returns a struct of permissions to signal which hook functions are to be implemented\"},\"poolManager()\":{\"notice\":\"The Uniswap v4 PoolManager contract\"},\"unlockCallback(bytes)\":{\"notice\":\"Called by the pool manager on `msg.sender` when the manager is unlocked\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/PointsHook.sol\":\"PointsHook\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":800},\"remappings\":[\":@ensdomains/=lib/v4-periphery/lib/v4-core/node_modules/@ensdomains/\",\":@openzeppelin/=lib/v4-periphery/lib/v4-core/lib/openzeppelin-contracts/\",\":@openzeppelin/contracts/=lib/v4-periphery/lib/v4-core/lib/openzeppelin-contracts/contracts/\",\":@uniswap/v4-core/=lib/v4-periphery/lib/v4-core/\",\":ds-test/=lib/v4-periphery/lib/v4-core/lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/v4-periphery/lib/v4-core/lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-gas-snapshot/=lib/v4-periphery/lib/v4-core/lib/forge-gas-snapshot/src/\",\":forge-std/=lib/forge-std/src/\",\":hardhat/=lib/v4-periphery/lib/v4-core/node_modules/hardhat/\",\":openzeppelin-contracts/=lib/v4-periphery/lib/v4-core/lib/openzeppelin-contracts/\",\":permit2/=lib/v4-periphery/lib/permit2/\",\":solmate/=lib/v4-periphery/lib/v4-core/lib/solmate/\",\":v4-core/=lib/v4-periphery/lib/v4-core/src/\",\":v4-periphery/=lib/v4-periphery/\"]},\"sources\":{\"lib/v4-periphery/lib/v4-core/lib/solmate/src/tokens/ERC20.sol\":{\"keccak256\":\"0xcdfd8db76b2a3415620e4d18cc5545f3d50de792dbf2c3dd5adb40cbe6f94b10\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://57b3ab70cde374af1cf2c9888636e8de6cf660f087b1c9abd805e9271e19fa35\",\"dweb:/ipfs/QmNrLDBAHYFjpjSd12jerm1AdBkDqEYUUaXgnT854BUZ97\"]},\"lib/v4-periphery/lib/v4-core/src/interfaces/IExtsload.sol\":{\"keccak256\":\"0x80b53ca4907d6f0088c3b931f2b72cad1dc4615a95094d96bd0fb8dff8d5ba43\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://375c69148622aab7a3537d5fd37d373a8e9731022c8d87bdaee46233b0a99fe1\",\"dweb:/ipfs/QmXFjdoYRxsA5B1kyuxEXgNf3FBoL1zPvy26Qy8EtpdFRN\"]},\"lib/v4-periphery/lib/v4-core/src/interfaces/IExttload.sol\":{\"keccak256\":\"0xc6b68283ebd8d1c789df536756726eed51c589134bb20821b236a0d22a135937\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://294394f72dfc219689209f4130d85601dfd0d63c8d47578050d312db70f9b6c8\",\"dweb:/ipfs/QmTDMQ3oxCGHgEBU48a3Lp4S1rRjc8vVCxkhE5ZNej1bsY\"]},\"lib/v4-periphery/lib/v4-core/src/interfaces/IHooks.sol\":{\"keccak256\":\"0x2ed03c5c22b1b81490788f54599beb3b26b834e608f6351166f60069f5655671\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://aabb296e1109ccc792e444c63d96c04f75f74275fbd917083b65aa18cc9eb662\",\"dweb:/ipfs/QmWjVWjC831FM6W9yk7ys8vmMesmHb3XrskvTzkFM8q7pK\"]},\"lib/v4-periphery/lib/v4-core/src/interfaces/IPoolManager.sol\":{\"keccak256\":\"0x859e8c7794fc04a72e53d4e9d2b89ae5517f71409a667fc2f4db054c9d121168\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://690097a7065d05ba5641b4a12c91a561c566209313307b5d74d989bcc00c3221\",\"dweb:/ipfs/QmbxiRHURJhcUMJ5NfZg3V1BgVowPQQ263UH43De4DvEBj\"]},\"lib/v4-periphery/lib/v4-core/src/interfaces/IProtocolFeeController.sol\":{\"keccak256\":\"0xc2d7f3605da9767e36cf25d4d4fa9b95663a6659e26ce28cf29b8b88acb79a4c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c7a43cda35b8a9254ed3e46cfd8649361f09121d17ef554bd3d190b9a8d57cc6\",\"dweb:/ipfs/QmRBDQoqCWddH5hY1JdxMyYtY8jMZhWAwtuFJBc3r8V31G\"]},\"lib/v4-periphery/lib/v4-core/src/interfaces/IProtocolFees.sol\":{\"keccak256\":\"0x6274aeb7a4f03734502f3b1b5494f7738d3f3adfa3a15aebf383ce1d2698e971\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ed366e17dc42f9b230b8b7bb27e2c304ea71b7edb11b5738f75a1090f34648f4\",\"dweb:/ipfs/QmVqZbCQ46B5huP8LsDcxbquqCdd74uvhe3F47KqRLAGeq\"]},\"lib/v4-periphery/lib/v4-core/src/interfaces/callback/IUnlockCallback.sol\":{\"keccak256\":\"0x58c82f2bd9d7c097ed09bd0991fedc403b0ec270eb3d0158bfb095c06a03d719\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://91168ca26a10980df2cdc3fbfe8ddf372c002b7ef19e3c59a0c9870d64198f1b\",\"dweb:/ipfs/QmUSpaM825vd1SwvF38esgbdLgYiPwefKaFERTWvUi6uSK\"]},\"lib/v4-periphery/lib/v4-core/src/interfaces/external/IERC20Minimal.sol\":{\"keccak256\":\"0xc1c23330c1511ecfd45c67a683962b4e2555b82f1dacd40cc8b46ae5a6e250e7\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://5ce10b7970482a65f9e9a365b810eeb154a5d4a8229a26653028d84b9622a410\",\"dweb:/ipfs/QmTSwXxZ2FTkM5duBZgbpFs8SRVDR5NPAnW4YimeDhb1s8\"]},\"lib/v4-periphery/lib/v4-core/src/interfaces/external/IERC6909Claims.sol\":{\"keccak256\":\"0xa586f345739e52b0488a0fe40b6e375cce67fdd25758408b0efcb5133ad96a48\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e8c557b7e52abdbbd82e415a1acc27921446a7fd090b7d4877e52be72619547f\",\"dweb:/ipfs/QmXE2KNPbXmGX8BQF3ei6zhzRTnhoTQg39XmqMnkhbr6QK\"]},\"lib/v4-periphery/lib/v4-core/src/libraries/CustomRevert.sol\":{\"keccak256\":\"0x745ca9c258d00fae52f293af065471f1bc1099de1bea4ceb52e312240ac52895\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://71eee0aa4e395f2c7fce16760d6547c6a12a6fd3dc56b94f4d44480fed538495\",\"dweb:/ipfs/QmPfJBiHzeVe9sx3PZ27jWrzJqF9atvevpYBC9j3Ekz9TG\"]},\"lib/v4-periphery/lib/v4-core/src/libraries/Hooks.sol\":{\"keccak256\":\"0x33b963d98de5eadd5b42a4d323ce5d25d87432d8ed538096ecca8d0b77e0d088\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ef49b43fe2fa6a2c6e44a1f8d7712ce4e13c7656da5ec35e73eb644707e5ed1\",\"dweb:/ipfs/QmZCisxCf9a1zxZvZADk1EN8JyFXZ1XZ4B8s1PpwEMugJX\"]},\"lib/v4-periphery/lib/v4-core/src/libraries/LPFeeLibrary.sol\":{\"keccak256\":\"0x9cb794c60d4c867732b20a6cd14b965bf3a63df1161eb3cd28e2c9d0447db46f\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://3d987ee5738f74c3fb091db503b44ad6651e4e47554623182e0ecbe696bd7382\",\"dweb:/ipfs/QmW7Rt5qjD4mmRnvYcT2Fj7VPzBm1eT9w15WUHtfWmKEPh\"]},\"lib/v4-periphery/lib/v4-core/src/libraries/ParseBytes.sol\":{\"keccak256\":\"0xf0795198d1e651b0b33fd1708d80a14f501bb2a1486905676d35f364e880f579\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://5aea527fcec51d7274f0c189dc2479a6aa708fc91857187a4d7db46bb1d6c7a8\",\"dweb:/ipfs/QmUTrwTPSZ7EHBaTyfAA78rZVP17iQzmAmvDcQ8GhDRAEf\"]},\"lib/v4-periphery/lib/v4-core/src/libraries/SafeCast.sol\":{\"keccak256\":\"0x8060d21c4d54a431113f9a594b860e6a9bf1f346d0c7c02dfafe9847dd8a0591\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://e7f71b73d82965d1d949f388060f6f0daab7cd14718e260682918ec6fa0253b9\",\"dweb:/ipfs/QmP85jtFrCeV6Y8zuJfrrgiMy1shX3tHWs2wX7DMAB7Lft\"]},\"lib/v4-periphery/lib/v4-core/src/types/BalanceDelta.sol\":{\"keccak256\":\"0xa719c8fe51e0a9524280178f19f6851bcc3b3b60e73618f3d60905d35ae5569f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7436928dc9de35c6c7c5c636cb51adaf295cfd590da83b19a004ae33cbec9ef9\",\"dweb:/ipfs/QmRJ9yZkUpzk4433GX3LgVVL8jwpbSYSUwXcucKisf3v4H\"]},\"lib/v4-periphery/lib/v4-core/src/types/BeforeSwapDelta.sol\":{\"keccak256\":\"0x2a774312d91285313d569da1a718c909655da5432310417692097a1d4dc83a78\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a2c7a0379955cff9c17ab9e61f95e42909aa5947c22740f86ce940d09856f782\",\"dweb:/ipfs/QmaAuo8UBYXsGrVuKh8iRoAAdqwtg1jDq515cW1ZRP5m9K\"]},\"lib/v4-periphery/lib/v4-core/src/types/Currency.sol\":{\"keccak256\":\"0x35c74eae038ecfbbae48b0e13f2b9a43ac6d8da4847ffa0f1482e4e2d455ee74\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cadb54f9c89b6970583148e503a23c7b654aff1f3e6a0da57705c54e5b03b39f\",\"dweb:/ipfs/Qma3CKKwyzGwzHN4Z9HDJ4Q7J5VfbN594i8F2DTGWTMWcB\"]},\"lib/v4-periphery/lib/v4-core/src/types/PoolId.sol\":{\"keccak256\":\"0x308311916ea0f5c2fd878b6a2751eb223d170a69e33f601fae56dfe3c5d392af\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://669c2cd7ac17690b5d8831e0bda72822376c3a04b36afed6d31df4d75fe60918\",\"dweb:/ipfs/QmT6EpkxqU8VF3WsgrZ66F3s1cCQRffR95z1HDYZz7ph6y\"]},\"lib/v4-periphery/lib/v4-core/src/types/PoolKey.sol\":{\"keccak256\":\"0xf89856e0580d7a4856d3187a76858377ccee9d59702d230c338d84388221b786\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6f3118fa189025695c37fdf0bdd1190f085ad097484d3c88cf4c56d1db65f639\",\"dweb:/ipfs/QmamXpgtB8GV1CaFLvqefPWSoikLDhMk1yU4heBnVzU8gi\"]},\"lib/v4-periphery/src/base/ImmutableState.sol\":{\"keccak256\":\"0x12b175e4ed6d31da545e3b6c9930901568c99d153b1e51044d32e88f42b9b633\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://f4347899e0b3bfd66e8d79652b1a14a62a02d16bfece63a40c6efe0e5656c384\",\"dweb:/ipfs/QmSbbT8fefHstA72BqF7SDooDtmhs79dR8T6pWv8LxKU2L\"]},\"lib/v4-periphery/src/base/SafeCallback.sol\":{\"keccak256\":\"0x6284bd1d1fbe78a901e63dc70720e2bf19de6758347b050f8ba2b155e73325c5\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://3afb423a3c0f8b5f6436680ff3cde9247924d442a9720dc39b2b07a352607187\",\"dweb:/ipfs/QmaT5bMwiiqkp8KWUnHjWJz55Ah9vbpASzJagg9riHbpTf\"]},\"lib/v4-periphery/src/base/hooks/BaseHook.sol\":{\"keccak256\":\"0xe6522a26dfe7b86aea6a84670b502890ede1e96302d641f231906897b2172f2f\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://19d2d2678ca32e81af3419bc4640833fc40e155b6757bb87edb0182f181c7fe7\",\"dweb:/ipfs/QmPGpN6p78SrRW79hX16sM572uD4Fb2hJF6Bv58M9LYNpQ\"]},\"src/PointsHook.sol\":{\"keccak256\":\"0xead1b4c77367f411518120b72d59e7d8ebb8965aeb54235d61a2952c1c6f0cea\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a5ac085c3e9aeac62608812953d83407bbcb24745e6c7f1931e8c4cda2e2cd02\",\"dweb:/ipfs/QmdryALNuX8FK5D3iZ9wCKCBzSBEW2oUiVe3U7gXqSYzCt\"]}},\"version\":1}",
    "metadata": {
        "compiler": {
            "version": "0.8.26+commit.8a97fa7a"
        },
        "language": "Solidity",
        "output": {
            "abi": [
                {
                    "inputs": [
                        {
                            "internalType": "contract IPoolManager",
                            "name": "_manager",
                            "type": "address"
                        },
                        {
                            "internalType": "string",
                            "name": "_name",
                            "type": "string"
                        },
                        {
                            "internalType": "string",
                            "name": "_symbol",
                            "type": "string"
                        }
                    ],
                    "stateMutability": "nonpayable",
                    "type": "constructor"
                },
                {
                    "inputs": [],
                    "type": "error",
                    "name": "HookNotImplemented"
                },
                {
                    "inputs": [],
                    "type": "error",
                    "name": "InvalidPool"
                },
                {
                    "inputs": [],
                    "type": "error",
                    "name": "LockFailure"
                },
                {
                    "inputs": [],
                    "type": "error",
                    "name": "NotPoolManager"
                },
                {
                    "inputs": [],
                    "type": "error",
                    "name": "NotSelf"
                },
                {
                    "inputs": [
                        {
                            "internalType": "address",
                            "name": "owner",
                            "type": "address",
                            "indexed": true
                        },
                        {
                            "internalType": "address",
                            "name": "spender",
                            "type": "address",
                            "indexed": true
                        },
                        {
                            "internalType": "uint256",
                            "name": "amount",
                            "type": "uint256",
                            "indexed": false
                        }
                    ],
                    "type": "event",
                    "name": "Approval",
                    "anonymous": false
                },
                {
                    "inputs": [
                        {
                            "internalType": "address",
                            "name": "from",
                            "type": "address",
                            "indexed": true
                        },
                        {
                            "internalType": "address",
                            "name": "to",
                            "type": "address",
                            "indexed": true
                        },
                        {
                            "internalType": "uint256",
                            "name": "amount",
                            "type": "uint256",
                            "indexed": false
                        }
                    ],
                    "type": "event",
                    "name": "Transfer",
                    "anonymous": false
                },
                {
                    "inputs": [],
                    "stateMutability": "view",
                    "type": "function",
                    "name": "DOMAIN_SEPARATOR",
                    "outputs": [
                        {
                            "internalType": "bytes32",
                            "name": "",
                            "type": "bytes32"
                        }
                    ]
                },
                {
                    "inputs": [],
                    "stateMutability": "view",
                    "type": "function",
                    "name": "POINTS_FOR_REFERRAL",
                    "outputs": [
                        {
                            "internalType": "uint256",
                            "name": "",
                            "type": "uint256"
                        }
                    ]
                },
                {
                    "inputs": [
                        {
                            "internalType": "address",
                            "name": "",
                            "type": "address"
                        },
                        {
                            "internalType": "struct PoolKey",
                            "name": "key",
                            "type": "tuple",
                            "components": [
                                {
                                    "internalType": "Currency",
                                    "name": "currency0",
                                    "type": "address"
                                },
                                {
                                    "internalType": "Currency",
                                    "name": "currency1",
                                    "type": "address"
                                },
                                {
                                    "internalType": "uint24",
                                    "name": "fee",
                                    "type": "uint24"
                                },
                                {
                                    "internalType": "int24",
                                    "name": "tickSpacing",
                                    "type": "int24"
                                },
                                {
                                    "internalType": "contract IHooks",
                                    "name": "hooks",
                                    "type": "address"
                                }
                            ]
                        },
                        {
                            "internalType": "struct IPoolManager.ModifyLiquidityParams",
                            "name": "",
                            "type": "tuple",
                            "components": [
                                {
                                    "internalType": "int24",
                                    "name": "tickLower",
                                    "type": "int24"
                                },
                                {
                                    "internalType": "int24",
                                    "name": "tickUpper",
                                    "type": "int24"
                                },
                                {
                                    "internalType": "int256",
                                    "name": "liquidityDelta",
                                    "type": "int256"
                                },
                                {
                                    "internalType": "bytes32",
                                    "name": "salt",
                                    "type": "bytes32"
                                }
                            ]
                        },
                        {
                            "internalType": "BalanceDelta",
                            "name": "delta",
                            "type": "int256"
                        },
                        {
                            "internalType": "BalanceDelta",
                            "name": "delta1",
                            "type": "int256"
                        },
                        {
                            "internalType": "bytes",
                            "name": "hookData",
                            "type": "bytes"
                        }
                    ],
                    "stateMutability": "nonpayable",
                    "type": "function",
                    "name": "afterAddLiquidity",
                    "outputs": [
                        {
                            "internalType": "bytes4",
                            "name": "",
                            "type": "bytes4"
                        },
                        {
                            "internalType": "BalanceDelta",
                            "name": "",
                            "type": "int256"
                        }
                    ]
                },
                {
                    "inputs": [
                        {
                            "internalType": "address",
                            "name": "",
                            "type": "address"
                        },
                        {
                            "internalType": "struct PoolKey",
                            "name": "",
                            "type": "tuple",
                            "components": [
                                {
                                    "internalType": "Currency",
                                    "name": "currency0",
                                    "type": "address"
                                },
                                {
                                    "internalType": "Currency",
                                    "name": "currency1",
                                    "type": "address"
                                },
                                {
                                    "internalType": "uint24",
                                    "name": "fee",
                                    "type": "uint24"
                                },
                                {
                                    "internalType": "int24",
                                    "name": "tickSpacing",
                                    "type": "int24"
                                },
                                {
                                    "internalType": "contract IHooks",
                                    "name": "hooks",
                                    "type": "address"
                                }
                            ]
                        },
                        {
                            "internalType": "uint256",
                            "name": "",
                            "type": "uint256"
                        },
                        {
                            "internalType": "uint256",
                            "name": "",
                            "type": "uint256"
                        },
                        {
                            "internalType": "bytes",
                            "name": "",
                            "type": "bytes"
                        }
                    ],
                    "stateMutability": "nonpayable",
                    "type": "function",
                    "name": "afterDonate",
                    "outputs": [
                        {
                            "internalType": "bytes4",
                            "name": "",
                            "type": "bytes4"
                        }
                    ]
                },
                {
                    "inputs": [
                        {
                            "internalType": "address",
                            "name": "",
                            "type": "address"
                        },
                        {
                            "internalType": "struct PoolKey",
                            "name": "",
                            "type": "tuple",
                            "components": [
                                {
                                    "internalType": "Currency",
                                    "name": "currency0",
                                    "type": "address"
                                },
                                {
                                    "internalType": "Currency",
                                    "name": "currency1",
                                    "type": "address"
                                },
                                {
                                    "internalType": "uint24",
                                    "name": "fee",
                                    "type": "uint24"
                                },
                                {
                                    "internalType": "int24",
                                    "name": "tickSpacing",
                                    "type": "int24"
                                },
                                {
                                    "internalType": "contract IHooks",
                                    "name": "hooks",
                                    "type": "address"
                                }
                            ]
                        },
                        {
                            "internalType": "uint160",
                            "name": "",
                            "type": "uint160"
                        },
                        {
                            "internalType": "int24",
                            "name": "",
                            "type": "int24"
                        },
                        {
                            "internalType": "bytes",
                            "name": "",
                            "type": "bytes"
                        }
                    ],
                    "stateMutability": "nonpayable",
                    "type": "function",
                    "name": "afterInitialize",
                    "outputs": [
                        {
                            "internalType": "bytes4",
                            "name": "",
                            "type": "bytes4"
                        }
                    ]
                },
                {
                    "inputs": [
                        {
                            "internalType": "address",
                            "name": "",
                            "type": "address"
                        },
                        {
                            "internalType": "struct PoolKey",
                            "name": "",
                            "type": "tuple",
                            "components": [
                                {
                                    "internalType": "Currency",
                                    "name": "currency0",
                                    "type": "address"
                                },
                                {
                                    "internalType": "Currency",
                                    "name": "currency1",
                                    "type": "address"
                                },
                                {
                                    "internalType": "uint24",
                                    "name": "fee",
                                    "type": "uint24"
                                },
                                {
                                    "internalType": "int24",
                                    "name": "tickSpacing",
                                    "type": "int24"
                                },
                                {
                                    "internalType": "contract IHooks",
                                    "name": "hooks",
                                    "type": "address"
                                }
                            ]
                        },
                        {
                            "internalType": "struct IPoolManager.ModifyLiquidityParams",
                            "name": "",
                            "type": "tuple",
                            "components": [
                                {
                                    "internalType": "int24",
                                    "name": "tickLower",
                                    "type": "int24"
                                },
                                {
                                    "internalType": "int24",
                                    "name": "tickUpper",
                                    "type": "int24"
                                },
                                {
                                    "internalType": "int256",
                                    "name": "liquidityDelta",
                                    "type": "int256"
                                },
                                {
                                    "internalType": "bytes32",
                                    "name": "salt",
                                    "type": "bytes32"
                                }
                            ]
                        },
                        {
                            "internalType": "BalanceDelta",
                            "name": "",
                            "type": "int256"
                        },
                        {
                            "internalType": "BalanceDelta",
                            "name": "",
                            "type": "int256"
                        },
                        {
                            "internalType": "bytes",
                            "name": "",
                            "type": "bytes"
                        }
                    ],
                    "stateMutability": "nonpayable",
                    "type": "function",
                    "name": "afterRemoveLiquidity",
                    "outputs": [
                        {
                            "internalType": "bytes4",
                            "name": "",
                            "type": "bytes4"
                        },
                        {
                            "internalType": "BalanceDelta",
                            "name": "",
                            "type": "int256"
                        }
                    ]
                },
                {
                    "inputs": [
                        {
                            "internalType": "address",
                            "name": "",
                            "type": "address"
                        },
                        {
                            "internalType": "struct PoolKey",
                            "name": "key",
                            "type": "tuple",
                            "components": [
                                {
                                    "internalType": "Currency",
                                    "name": "currency0",
                                    "type": "address"
                                },
                                {
                                    "internalType": "Currency",
                                    "name": "currency1",
                                    "type": "address"
                                },
                                {
                                    "internalType": "uint24",
                                    "name": "fee",
                                    "type": "uint24"
                                },
                                {
                                    "internalType": "int24",
                                    "name": "tickSpacing",
                                    "type": "int24"
                                },
                                {
                                    "internalType": "contract IHooks",
                                    "name": "hooks",
                                    "type": "address"
                                }
                            ]
                        },
                        {
                            "internalType": "struct IPoolManager.SwapParams",
                            "name": "swapParams",
                            "type": "tuple",
                            "components": [
                                {
                                    "internalType": "bool",
                                    "name": "zeroForOne",
                                    "type": "bool"
                                },
                                {
                                    "internalType": "int256",
                                    "name": "amountSpecified",
                                    "type": "int256"
                                },
                                {
                                    "internalType": "uint160",
                                    "name": "sqrtPriceLimitX96",
                                    "type": "uint160"
                                }
                            ]
                        },
                        {
                            "internalType": "BalanceDelta",
                            "name": "delta",
                            "type": "int256"
                        },
                        {
                            "internalType": "bytes",
                            "name": "hookData",
                            "type": "bytes"
                        }
                    ],
                    "stateMutability": "nonpayable",
                    "type": "function",
                    "name": "afterSwap",
                    "outputs": [
                        {
                            "internalType": "bytes4",
                            "name": "",
                            "type": "bytes4"
                        },
                        {
                            "internalType": "int128",
                            "name": "",
                            "type": "int128"
                        }
                    ]
                },
                {
                    "inputs": [
                        {
                            "internalType": "address",
                            "name": "",
                            "type": "address"
                        },
                        {
                            "internalType": "address",
                            "name": "",
                            "type": "address"
                        }
                    ],
                    "stateMutability": "view",
                    "type": "function",
                    "name": "allowance",
                    "outputs": [
                        {
                            "internalType": "uint256",
                            "name": "",
                            "type": "uint256"
                        }
                    ]
                },
                {
                    "inputs": [
                        {
                            "internalType": "address",
                            "name": "spender",
                            "type": "address"
                        },
                        {
                            "internalType": "uint256",
                            "name": "amount",
                            "type": "uint256"
                        }
                    ],
                    "stateMutability": "nonpayable",
                    "type": "function",
                    "name": "approve",
                    "outputs": [
                        {
                            "internalType": "bool",
                            "name": "",
                            "type": "bool"
                        }
                    ]
                },
                {
                    "inputs": [
                        {
                            "internalType": "address",
                            "name": "",
                            "type": "address"
                        }
                    ],
                    "stateMutability": "view",
                    "type": "function",
                    "name": "balanceOf",
                    "outputs": [
                        {
                            "internalType": "uint256",
                            "name": "",
                            "type": "uint256"
                        }
                    ]
                },
                {
                    "inputs": [
                        {
                            "internalType": "address",
                            "name": "",
                            "type": "address"
                        },
                        {
                            "internalType": "struct PoolKey",
                            "name": "",
                            "type": "tuple",
                            "components": [
                                {
                                    "internalType": "Currency",
                                    "name": "currency0",
                                    "type": "address"
                                },
                                {
                                    "internalType": "Currency",
                                    "name": "currency1",
                                    "type": "address"
                                },
                                {
                                    "internalType": "uint24",
                                    "name": "fee",
                                    "type": "uint24"
                                },
                                {
                                    "internalType": "int24",
                                    "name": "tickSpacing",
                                    "type": "int24"
                                },
                                {
                                    "internalType": "contract IHooks",
                                    "name": "hooks",
                                    "type": "address"
                                }
                            ]
                        },
                        {
                            "internalType": "struct IPoolManager.ModifyLiquidityParams",
                            "name": "",
                            "type": "tuple",
                            "components": [
                                {
                                    "internalType": "int24",
                                    "name": "tickLower",
                                    "type": "int24"
                                },
                                {
                                    "internalType": "int24",
                                    "name": "tickUpper",
                                    "type": "int24"
                                },
                                {
                                    "internalType": "int256",
                                    "name": "liquidityDelta",
                                    "type": "int256"
                                },
                                {
                                    "internalType": "bytes32",
                                    "name": "salt",
                                    "type": "bytes32"
                                }
                            ]
                        },
                        {
                            "internalType": "bytes",
                            "name": "",
                            "type": "bytes"
                        }
                    ],
                    "stateMutability": "nonpayable",
                    "type": "function",
                    "name": "beforeAddLiquidity",
                    "outputs": [
                        {
                            "internalType": "bytes4",
                            "name": "",
                            "type": "bytes4"
                        }
                    ]
                },
                {
                    "inputs": [
                        {
                            "internalType": "address",
                            "name": "",
                            "type": "address"
                        },
                        {
                            "internalType": "struct PoolKey",
                            "name": "",
                            "type": "tuple",
                            "components": [
                                {
                                    "internalType": "Currency",
                                    "name": "currency0",
                                    "type": "address"
                                },
                                {
                                    "internalType": "Currency",
                                    "name": "currency1",
                                    "type": "address"
                                },
                                {
                                    "internalType": "uint24",
                                    "name": "fee",
                                    "type": "uint24"
                                },
                                {
                                    "internalType": "int24",
                                    "name": "tickSpacing",
                                    "type": "int24"
                                },
                                {
                                    "internalType": "contract IHooks",
                                    "name": "hooks",
                                    "type": "address"
                                }
                            ]
                        },
                        {
                            "internalType": "uint256",
                            "name": "",
                            "type": "uint256"
                        },
                        {
                            "internalType": "uint256",
                            "name": "",
                            "type": "uint256"
                        },
                        {
                            "internalType": "bytes",
                            "name": "",
                            "type": "bytes"
                        }
                    ],
                    "stateMutability": "nonpayable",
                    "type": "function",
                    "name": "beforeDonate",
                    "outputs": [
                        {
                            "internalType": "bytes4",
                            "name": "",
                            "type": "bytes4"
                        }
                    ]
                },
                {
                    "inputs": [
                        {
                            "internalType": "address",
                            "name": "",
                            "type": "address"
                        },
                        {
                            "internalType": "struct PoolKey",
                            "name": "",
                            "type": "tuple",
                            "components": [
                                {
                                    "internalType": "Currency",
                                    "name": "currency0",
                                    "type": "address"
                                },
                                {
                                    "internalType": "Currency",
                                    "name": "currency1",
                                    "type": "address"
                                },
                                {
                                    "internalType": "uint24",
                                    "name": "fee",
                                    "type": "uint24"
                                },
                                {
                                    "internalType": "int24",
                                    "name": "tickSpacing",
                                    "type": "int24"
                                },
                                {
                                    "internalType": "contract IHooks",
                                    "name": "hooks",
                                    "type": "address"
                                }
                            ]
                        },
                        {
                            "internalType": "uint160",
                            "name": "",
                            "type": "uint160"
                        },
                        {
                            "internalType": "bytes",
                            "name": "",
                            "type": "bytes"
                        }
                    ],
                    "stateMutability": "nonpayable",
                    "type": "function",
                    "name": "beforeInitialize",
                    "outputs": [
                        {
                            "internalType": "bytes4",
                            "name": "",
                            "type": "bytes4"
                        }
                    ]
                },
                {
                    "inputs": [
                        {
                            "internalType": "address",
                            "name": "",
                            "type": "address"
                        },
                        {
                            "internalType": "struct PoolKey",
                            "name": "",
                            "type": "tuple",
                            "components": [
                                {
                                    "internalType": "Currency",
                                    "name": "currency0",
                                    "type": "address"
                                },
                                {
                                    "internalType": "Currency",
                                    "name": "currency1",
                                    "type": "address"
                                },
                                {
                                    "internalType": "uint24",
                                    "name": "fee",
                                    "type": "uint24"
                                },
                                {
                                    "internalType": "int24",
                                    "name": "tickSpacing",
                                    "type": "int24"
                                },
                                {
                                    "internalType": "contract IHooks",
                                    "name": "hooks",
                                    "type": "address"
                                }
                            ]
                        },
                        {
                            "internalType": "struct IPoolManager.ModifyLiquidityParams",
                            "name": "",
                            "type": "tuple",
                            "components": [
                                {
                                    "internalType": "int24",
                                    "name": "tickLower",
                                    "type": "int24"
                                },
                                {
                                    "internalType": "int24",
                                    "name": "tickUpper",
                                    "type": "int24"
                                },
                                {
                                    "internalType": "int256",
                                    "name": "liquidityDelta",
                                    "type": "int256"
                                },
                                {
                                    "internalType": "bytes32",
                                    "name": "salt",
                                    "type": "bytes32"
                                }
                            ]
                        },
                        {
                            "internalType": "bytes",
                            "name": "",
                            "type": "bytes"
                        }
                    ],
                    "stateMutability": "nonpayable",
                    "type": "function",
                    "name": "beforeRemoveLiquidity",
                    "outputs": [
                        {
                            "internalType": "bytes4",
                            "name": "",
                            "type": "bytes4"
                        }
                    ]
                },
                {
                    "inputs": [
                        {
                            "internalType": "address",
                            "name": "",
                            "type": "address"
                        },
                        {
                            "internalType": "struct PoolKey",
                            "name": "",
                            "type": "tuple",
                            "components": [
                                {
                                    "internalType": "Currency",
                                    "name": "currency0",
                                    "type": "address"
                                },
                                {
                                    "internalType": "Currency",
                                    "name": "currency1",
                                    "type": "address"
                                },
                                {
                                    "internalType": "uint24",
                                    "name": "fee",
                                    "type": "uint24"
                                },
                                {
                                    "internalType": "int24",
                                    "name": "tickSpacing",
                                    "type": "int24"
                                },
                                {
                                    "internalType": "contract IHooks",
                                    "name": "hooks",
                                    "type": "address"
                                }
                            ]
                        },
                        {
                            "internalType": "struct IPoolManager.SwapParams",
                            "name": "",
                            "type": "tuple",
                            "components": [
                                {
                                    "internalType": "bool",
                                    "name": "zeroForOne",
                                    "type": "bool"
                                },
                                {
                                    "internalType": "int256",
                                    "name": "amountSpecified",
                                    "type": "int256"
                                },
                                {
                                    "internalType": "uint160",
                                    "name": "sqrtPriceLimitX96",
                                    "type": "uint160"
                                }
                            ]
                        },
                        {
                            "internalType": "bytes",
                            "name": "",
                            "type": "bytes"
                        }
                    ],
                    "stateMutability": "nonpayable",
                    "type": "function",
                    "name": "beforeSwap",
                    "outputs": [
                        {
                            "internalType": "bytes4",
                            "name": "",
                            "type": "bytes4"
                        },
                        {
                            "internalType": "BeforeSwapDelta",
                            "name": "",
                            "type": "int256"
                        },
                        {
                            "internalType": "uint24",
                            "name": "",
                            "type": "uint24"
                        }
                    ]
                },
                {
                    "inputs": [],
                    "stateMutability": "view",
                    "type": "function",
                    "name": "decimals",
                    "outputs": [
                        {
                            "internalType": "uint8",
                            "name": "",
                            "type": "uint8"
                        }
                    ]
                },
                {
                    "inputs": [
                        {
                            "internalType": "address",
                            "name": "referrer",
                            "type": "address"
                        },
                        {
                            "internalType": "address",
                            "name": "referree",
                            "type": "address"
                        }
                    ],
                    "stateMutability": "pure",
                    "type": "function",
                    "name": "getHookData",
                    "outputs": [
                        {
                            "internalType": "bytes",
                            "name": "",
                            "type": "bytes"
                        }
                    ]
                },
                {
                    "inputs": [],
                    "stateMutability": "pure",
                    "type": "function",
                    "name": "getHookPermissions",
                    "outputs": [
                        {
                            "internalType": "struct Hooks.Permissions",
                            "name": "",
                            "type": "tuple",
                            "components": [
                                {
                                    "internalType": "bool",
                                    "name": "beforeInitialize",
                                    "type": "bool"
                                },
                                {
                                    "internalType": "bool",
                                    "name": "afterInitialize",
                                    "type": "bool"
                                },
                                {
                                    "internalType": "bool",
                                    "name": "beforeAddLiquidity",
                                    "type": "bool"
                                },
                                {
                                    "internalType": "bool",
                                    "name": "afterAddLiquidity",
                                    "type": "bool"
                                },
                                {
                                    "internalType": "bool",
                                    "name": "beforeRemoveLiquidity",
                                    "type": "bool"
                                },
                                {
                                    "internalType": "bool",
                                    "name": "afterRemoveLiquidity",
                                    "type": "bool"
                                },
                                {
                                    "internalType": "bool",
                                    "name": "beforeSwap",
                                    "type": "bool"
                                },
                                {
                                    "internalType": "bool",
                                    "name": "afterSwap",
                                    "type": "bool"
                                },
                                {
                                    "internalType": "bool",
                                    "name": "beforeDonate",
                                    "type": "bool"
                                },
                                {
                                    "internalType": "bool",
                                    "name": "afterDonate",
                                    "type": "bool"
                                },
                                {
                                    "internalType": "bool",
                                    "name": "beforeSwapReturnDelta",
                                    "type": "bool"
                                },
                                {
                                    "internalType": "bool",
                                    "name": "afterSwapReturnDelta",
                                    "type": "bool"
                                },
                                {
                                    "internalType": "bool",
                                    "name": "afterAddLiquidityReturnDelta",
                                    "type": "bool"
                                },
                                {
                                    "internalType": "bool",
                                    "name": "afterRemoveLiquidityReturnDelta",
                                    "type": "bool"
                                }
                            ]
                        }
                    ]
                },
                {
                    "inputs": [],
                    "stateMutability": "view",
                    "type": "function",
                    "name": "name",
                    "outputs": [
                        {
                            "internalType": "string",
                            "name": "",
                            "type": "string"
                        }
                    ]
                },
                {
                    "inputs": [
                        {
                            "internalType": "address",
                            "name": "",
                            "type": "address"
                        }
                    ],
                    "stateMutability": "view",
                    "type": "function",
                    "name": "nonces",
                    "outputs": [
                        {
                            "internalType": "uint256",
                            "name": "",
                            "type": "uint256"
                        }
                    ]
                },
                {
                    "inputs": [
                        {
                            "internalType": "address",
                            "name": "owner",
                            "type": "address"
                        },
                        {
                            "internalType": "address",
                            "name": "spender",
                            "type": "address"
                        },
                        {
                            "internalType": "uint256",
                            "name": "value",
                            "type": "uint256"
                        },
                        {
                            "internalType": "uint256",
                            "name": "deadline",
                            "type": "uint256"
                        },
                        {
                            "internalType": "uint8",
                            "name": "v",
                            "type": "uint8"
                        },
                        {
                            "internalType": "bytes32",
                            "name": "r",
                            "type": "bytes32"
                        },
                        {
                            "internalType": "bytes32",
                            "name": "s",
                            "type": "bytes32"
                        }
                    ],
                    "stateMutability": "nonpayable",
                    "type": "function",
                    "name": "permit"
                },
                {
                    "inputs": [],
                    "stateMutability": "view",
                    "type": "function",
                    "name": "poolManager",
                    "outputs": [
                        {
                            "internalType": "contract IPoolManager",
                            "name": "",
                            "type": "address"
                        }
                    ]
                },
                {
                    "inputs": [
                        {
                            "internalType": "address",
                            "name": "",
                            "type": "address"
                        }
                    ],
                    "stateMutability": "view",
                    "type": "function",
                    "name": "referredBy",
                    "outputs": [
                        {
                            "internalType": "address",
                            "name": "",
                            "type": "address"
                        }
                    ]
                },
                {
                    "inputs": [],
                    "stateMutability": "view",
                    "type": "function",
                    "name": "symbol",
                    "outputs": [
                        {
                            "internalType": "string",
                            "name": "",
                            "type": "string"
                        }
                    ]
                },
                {
                    "inputs": [],
                    "stateMutability": "view",
                    "type": "function",
                    "name": "totalSupply",
                    "outputs": [
                        {
                            "internalType": "uint256",
                            "name": "",
                            "type": "uint256"
                        }
                    ]
                },
                {
                    "inputs": [
                        {
                            "internalType": "address",
                            "name": "to",
                            "type": "address"
                        },
                        {
                            "internalType": "uint256",
                            "name": "amount",
                            "type": "uint256"
                        }
                    ],
                    "stateMutability": "nonpayable",
                    "type": "function",
                    "name": "transfer",
                    "outputs": [
                        {
                            "internalType": "bool",
                            "name": "",
                            "type": "bool"
                        }
                    ]
                },
                {
                    "inputs": [
                        {
                            "internalType": "address",
                            "name": "from",
                            "type": "address"
                        },
                        {
                            "internalType": "address",
                            "name": "to",
                            "type": "address"
                        },
                        {
                            "internalType": "uint256",
                            "name": "amount",
                            "type": "uint256"
                        }
                    ],
                    "stateMutability": "nonpayable",
                    "type": "function",
                    "name": "transferFrom",
                    "outputs": [
                        {
                            "internalType": "bool",
                            "name": "",
                            "type": "bool"
                        }
                    ]
                },
                {
                    "inputs": [
                        {
                            "internalType": "bytes",
                            "name": "data",
                            "type": "bytes"
                        }
                    ],
                    "stateMutability": "nonpayable",
                    "type": "function",
                    "name": "unlockCallback",
                    "outputs": [
                        {
                            "internalType": "bytes",
                            "name": "",
                            "type": "bytes"
                        }
                    ]
                }
            ],
            "devdoc": {
                "kind": "dev",
                "methods": {
                    "afterDonate(address,(address,address,uint24,int24,address),uint256,uint256,bytes)": {
                        "params": {
                            "amount0": "The amount of token0 being donated",
                            "amount1": "The amount of token1 being donated",
                            "hookData": "Arbitrary data handed into the PoolManager by the donor to be be passed on to the hook",
                            "key": "The key for the pool",
                            "sender": "The initial msg.sender for the donate call"
                        },
                        "returns": {
                            "_0": "bytes4 The function selector for the hook"
                        }
                    },
                    "afterInitialize(address,(address,address,uint24,int24,address),uint160,int24,bytes)": {
                        "params": {
                            "hookData": "Arbitrary data handed into the PoolManager by the initializer to be be passed on to the hook",
                            "key": "The key for the pool being initialized",
                            "sender": "The initial msg.sender for the initialize call",
                            "sqrtPriceX96": "The sqrt(price) of the pool as a Q64.96",
                            "tick": "The current tick after the state of a pool is initialized"
                        },
                        "returns": {
                            "_0": "bytes4 The function selector for the hook"
                        }
                    },
                    "afterRemoveLiquidity(address,(address,address,uint24,int24,address),(int24,int24,int256,bytes32),int256,int256,bytes)": {
                        "params": {
                            "delta": "The caller's balance delta after adding liquidity; the sum of principal delta, fees accrued, and hook delta",
                            "feesAccrued": "The fees accrued since the last time fees were collected from this position",
                            "hookData": "Arbitrary data handed into the PoolManager by the liquidity provider to be be passed on to the hook",
                            "key": "The key for the pool",
                            "params": "The parameters for removing liquidity",
                            "sender": "The initial msg.sender for the remove liquidity call"
                        },
                        "returns": {
                            "_0": "bytes4 The function selector for the hook",
                            "_1": "BalanceDelta The hook's delta in token0 and token1. Positive: the hook is owed/took currency, negative: the hook owes/sent currency"
                        }
                    },
                    "beforeAddLiquidity(address,(address,address,uint24,int24,address),(int24,int24,int256,bytes32),bytes)": {
                        "params": {
                            "hookData": "Arbitrary data handed into the PoolManager by the liquidity provider to be passed on to the hook",
                            "key": "The key for the pool",
                            "params": "The parameters for adding liquidity",
                            "sender": "The initial msg.sender for the add liquidity call"
                        },
                        "returns": {
                            "_0": "bytes4 The function selector for the hook"
                        }
                    },
                    "beforeDonate(address,(address,address,uint24,int24,address),uint256,uint256,bytes)": {
                        "params": {
                            "amount0": "The amount of token0 being donated",
                            "amount1": "The amount of token1 being donated",
                            "hookData": "Arbitrary data handed into the PoolManager by the donor to be be passed on to the hook",
                            "key": "The key for the pool",
                            "sender": "The initial msg.sender for the donate call"
                        },
                        "returns": {
                            "_0": "bytes4 The function selector for the hook"
                        }
                    },
                    "beforeInitialize(address,(address,address,uint24,int24,address),uint160,bytes)": {
                        "params": {
                            "hookData": "Arbitrary data handed into the PoolManager by the initializer to be be passed on to the hook",
                            "key": "The key for the pool being initialized",
                            "sender": "The initial msg.sender for the initialize call",
                            "sqrtPriceX96": "The sqrt(price) of the pool as a Q64.96"
                        },
                        "returns": {
                            "_0": "bytes4 The function selector for the hook"
                        }
                    },
                    "beforeRemoveLiquidity(address,(address,address,uint24,int24,address),(int24,int24,int256,bytes32),bytes)": {
                        "params": {
                            "hookData": "Arbitrary data handed into the PoolManager by the liquidity provider to be be passed on to the hook",
                            "key": "The key for the pool",
                            "params": "The parameters for removing liquidity",
                            "sender": "The initial msg.sender for the remove liquidity call"
                        },
                        "returns": {
                            "_0": "bytes4 The function selector for the hook"
                        }
                    },
                    "beforeSwap(address,(address,address,uint24,int24,address),(bool,int256,uint160),bytes)": {
                        "params": {
                            "hookData": "Arbitrary data handed into the PoolManager by the swapper to be be passed on to the hook",
                            "key": "The key for the pool",
                            "params": "The parameters for the swap",
                            "sender": "The initial msg.sender for the swap call"
                        },
                        "returns": {
                            "_0": "bytes4 The function selector for the hook",
                            "_1": "BeforeSwapDelta The hook's delta in specified and unspecified currencies. Positive: the hook is owed/took currency, negative: the hook owes/sent currency",
                            "_2": "uint24 Optionally override the lp fee, only used if three conditions are met: 1. the Pool has a dynamic fee, 2. the value's 2nd highest bit is set (23rd bit, 0x400000), and 3. the value is less than or equal to the maximum fee (1 million)"
                        }
                    },
                    "getHookPermissions()": {
                        "details": "Used at deployment to validate the address correctly represents the expected permissions"
                    },
                    "unlockCallback(bytes)": {
                        "details": "We force the onlyPoolManager modifier by exposing a virtual function after the onlyPoolManager check.",
                        "params": {
                            "data": "The data that was passed to the call to unlock"
                        },
                        "returns": {
                            "_0": "Any data that you want to be returned from the unlock call"
                        }
                    }
                },
                "version": 1
            },
            "userdoc": {
                "kind": "user",
                "methods": {
                    "afterDonate(address,(address,address,uint24,int24,address),uint256,uint256,bytes)": {
                        "notice": "The hook called after donate"
                    },
                    "afterInitialize(address,(address,address,uint24,int24,address),uint160,int24,bytes)": {
                        "notice": "The hook called after the state of a pool is initialized"
                    },
                    "afterRemoveLiquidity(address,(address,address,uint24,int24,address),(int24,int24,int256,bytes32),int256,int256,bytes)": {
                        "notice": "The hook called after liquidity is removed"
                    },
                    "beforeAddLiquidity(address,(address,address,uint24,int24,address),(int24,int24,int256,bytes32),bytes)": {
                        "notice": "The hook called before liquidity is added"
                    },
                    "beforeDonate(address,(address,address,uint24,int24,address),uint256,uint256,bytes)": {
                        "notice": "The hook called before donate"
                    },
                    "beforeInitialize(address,(address,address,uint24,int24,address),uint160,bytes)": {
                        "notice": "The hook called before the state of a pool is initialized"
                    },
                    "beforeRemoveLiquidity(address,(address,address,uint24,int24,address),(int24,int24,int256,bytes32),bytes)": {
                        "notice": "The hook called before liquidity is removed"
                    },
                    "beforeSwap(address,(address,address,uint24,int24,address),(bool,int256,uint160),bytes)": {
                        "notice": "The hook called before a swap"
                    },
                    "getHookPermissions()": {
                        "notice": "Returns a struct of permissions to signal which hook functions are to be implemented"
                    },
                    "poolManager()": {
                        "notice": "The Uniswap v4 PoolManager contract"
                    },
                    "unlockCallback(bytes)": {
                        "notice": "Called by the pool manager on `msg.sender` when the manager is unlocked"
                    }
                },
                "version": 1
            }
        },
        "settings": {
            "remappings": [
                "@ensdomains/=lib/v4-periphery/lib/v4-core/node_modules/@ensdomains/",
                "@openzeppelin/=lib/v4-periphery/lib/v4-core/lib/openzeppelin-contracts/",
                "@openzeppelin/contracts/=lib/v4-periphery/lib/v4-core/lib/openzeppelin-contracts/contracts/",
                "@uniswap/v4-core/=lib/v4-periphery/lib/v4-core/",
                "ds-test/=lib/v4-periphery/lib/v4-core/lib/forge-std/lib/ds-test/src/",
                "erc4626-tests/=lib/v4-periphery/lib/v4-core/lib/openzeppelin-contracts/lib/erc4626-tests/",
                "forge-gas-snapshot/=lib/v4-periphery/lib/v4-core/lib/forge-gas-snapshot/src/",
                "forge-std/=lib/forge-std/src/",
                "hardhat/=lib/v4-periphery/lib/v4-core/node_modules/hardhat/",
                "openzeppelin-contracts/=lib/v4-periphery/lib/v4-core/lib/openzeppelin-contracts/",
                "permit2/=lib/v4-periphery/lib/permit2/",
                "solmate/=lib/v4-periphery/lib/v4-core/lib/solmate/",
                "v4-core/=lib/v4-periphery/lib/v4-core/src/",
                "v4-periphery/=lib/v4-periphery/"
            ],
            "optimizer": {
                "enabled": true,
                "runs": 800
            },
            "metadata": {
                "bytecodeHash": "ipfs"
            },
            "compilationTarget": {
                "src/PointsHook.sol": "PointsHook"
            },
            "evmVersion": "cancun",
            "libraries": {}
        },
        "sources": {
            "lib/v4-periphery/lib/v4-core/lib/solmate/src/tokens/ERC20.sol": {
                "keccak256": "0xcdfd8db76b2a3415620e4d18cc5545f3d50de792dbf2c3dd5adb40cbe6f94b10",
                "urls": [
                    "bzz-raw://57b3ab70cde374af1cf2c9888636e8de6cf660f087b1c9abd805e9271e19fa35",
                    "dweb:/ipfs/QmNrLDBAHYFjpjSd12jerm1AdBkDqEYUUaXgnT854BUZ97"
                ],
                "license": "AGPL-3.0-only"
            },
            "lib/v4-periphery/lib/v4-core/src/interfaces/IExtsload.sol": {
                "keccak256": "0x80b53ca4907d6f0088c3b931f2b72cad1dc4615a95094d96bd0fb8dff8d5ba43",
                "urls": [
                    "bzz-raw://375c69148622aab7a3537d5fd37d373a8e9731022c8d87bdaee46233b0a99fe1",
                    "dweb:/ipfs/QmXFjdoYRxsA5B1kyuxEXgNf3FBoL1zPvy26Qy8EtpdFRN"
                ],
                "license": "MIT"
            },
            "lib/v4-periphery/lib/v4-core/src/interfaces/IExttload.sol": {
                "keccak256": "0xc6b68283ebd8d1c789df536756726eed51c589134bb20821b236a0d22a135937",
                "urls": [
                    "bzz-raw://294394f72dfc219689209f4130d85601dfd0d63c8d47578050d312db70f9b6c8",
                    "dweb:/ipfs/QmTDMQ3oxCGHgEBU48a3Lp4S1rRjc8vVCxkhE5ZNej1bsY"
                ],
                "license": "MIT"
            },
            "lib/v4-periphery/lib/v4-core/src/interfaces/IHooks.sol": {
                "keccak256": "0x2ed03c5c22b1b81490788f54599beb3b26b834e608f6351166f60069f5655671",
                "urls": [
                    "bzz-raw://aabb296e1109ccc792e444c63d96c04f75f74275fbd917083b65aa18cc9eb662",
                    "dweb:/ipfs/QmWjVWjC831FM6W9yk7ys8vmMesmHb3XrskvTzkFM8q7pK"
                ],
                "license": "MIT"
            },
            "lib/v4-periphery/lib/v4-core/src/interfaces/IPoolManager.sol": {
                "keccak256": "0x859e8c7794fc04a72e53d4e9d2b89ae5517f71409a667fc2f4db054c9d121168",
                "urls": [
                    "bzz-raw://690097a7065d05ba5641b4a12c91a561c566209313307b5d74d989bcc00c3221",
                    "dweb:/ipfs/QmbxiRHURJhcUMJ5NfZg3V1BgVowPQQ263UH43De4DvEBj"
                ],
                "license": "MIT"
            },
            "lib/v4-periphery/lib/v4-core/src/interfaces/IProtocolFeeController.sol": {
                "keccak256": "0xc2d7f3605da9767e36cf25d4d4fa9b95663a6659e26ce28cf29b8b88acb79a4c",
                "urls": [
                    "bzz-raw://c7a43cda35b8a9254ed3e46cfd8649361f09121d17ef554bd3d190b9a8d57cc6",
                    "dweb:/ipfs/QmRBDQoqCWddH5hY1JdxMyYtY8jMZhWAwtuFJBc3r8V31G"
                ],
                "license": "MIT"
            },
            "lib/v4-periphery/lib/v4-core/src/interfaces/IProtocolFees.sol": {
                "keccak256": "0x6274aeb7a4f03734502f3b1b5494f7738d3f3adfa3a15aebf383ce1d2698e971",
                "urls": [
                    "bzz-raw://ed366e17dc42f9b230b8b7bb27e2c304ea71b7edb11b5738f75a1090f34648f4",
                    "dweb:/ipfs/QmVqZbCQ46B5huP8LsDcxbquqCdd74uvhe3F47KqRLAGeq"
                ],
                "license": "MIT"
            },
            "lib/v4-periphery/lib/v4-core/src/interfaces/callback/IUnlockCallback.sol": {
                "keccak256": "0x58c82f2bd9d7c097ed09bd0991fedc403b0ec270eb3d0158bfb095c06a03d719",
                "urls": [
                    "bzz-raw://91168ca26a10980df2cdc3fbfe8ddf372c002b7ef19e3c59a0c9870d64198f1b",
                    "dweb:/ipfs/QmUSpaM825vd1SwvF38esgbdLgYiPwefKaFERTWvUi6uSK"
                ],
                "license": "MIT"
            },
            "lib/v4-periphery/lib/v4-core/src/interfaces/external/IERC20Minimal.sol": {
                "keccak256": "0xc1c23330c1511ecfd45c67a683962b4e2555b82f1dacd40cc8b46ae5a6e250e7",
                "urls": [
                    "bzz-raw://5ce10b7970482a65f9e9a365b810eeb154a5d4a8229a26653028d84b9622a410",
                    "dweb:/ipfs/QmTSwXxZ2FTkM5duBZgbpFs8SRVDR5NPAnW4YimeDhb1s8"
                ],
                "license": "GPL-2.0-or-later"
            },
            "lib/v4-periphery/lib/v4-core/src/interfaces/external/IERC6909Claims.sol": {
                "keccak256": "0xa586f345739e52b0488a0fe40b6e375cce67fdd25758408b0efcb5133ad96a48",
                "urls": [
                    "bzz-raw://e8c557b7e52abdbbd82e415a1acc27921446a7fd090b7d4877e52be72619547f",
                    "dweb:/ipfs/QmXE2KNPbXmGX8BQF3ei6zhzRTnhoTQg39XmqMnkhbr6QK"
                ],
                "license": "MIT"
            },
            "lib/v4-periphery/lib/v4-core/src/libraries/CustomRevert.sol": {
                "keccak256": "0x745ca9c258d00fae52f293af065471f1bc1099de1bea4ceb52e312240ac52895",
                "urls": [
                    "bzz-raw://71eee0aa4e395f2c7fce16760d6547c6a12a6fd3dc56b94f4d44480fed538495",
                    "dweb:/ipfs/QmPfJBiHzeVe9sx3PZ27jWrzJqF9atvevpYBC9j3Ekz9TG"
                ],
                "license": "MIT"
            },
            "lib/v4-periphery/lib/v4-core/src/libraries/Hooks.sol": {
                "keccak256": "0x33b963d98de5eadd5b42a4d323ce5d25d87432d8ed538096ecca8d0b77e0d088",
                "urls": [
                    "bzz-raw://4ef49b43fe2fa6a2c6e44a1f8d7712ce4e13c7656da5ec35e73eb644707e5ed1",
                    "dweb:/ipfs/QmZCisxCf9a1zxZvZADk1EN8JyFXZ1XZ4B8s1PpwEMugJX"
                ],
                "license": "MIT"
            },
            "lib/v4-periphery/lib/v4-core/src/libraries/LPFeeLibrary.sol": {
                "keccak256": "0x9cb794c60d4c867732b20a6cd14b965bf3a63df1161eb3cd28e2c9d0447db46f",
                "urls": [
                    "bzz-raw://3d987ee5738f74c3fb091db503b44ad6651e4e47554623182e0ecbe696bd7382",
                    "dweb:/ipfs/QmW7Rt5qjD4mmRnvYcT2Fj7VPzBm1eT9w15WUHtfWmKEPh"
                ],
                "license": "GPL-2.0-or-later"
            },
            "lib/v4-periphery/lib/v4-core/src/libraries/ParseBytes.sol": {
                "keccak256": "0xf0795198d1e651b0b33fd1708d80a14f501bb2a1486905676d35f364e880f579",
                "urls": [
                    "bzz-raw://5aea527fcec51d7274f0c189dc2479a6aa708fc91857187a4d7db46bb1d6c7a8",
                    "dweb:/ipfs/QmUTrwTPSZ7EHBaTyfAA78rZVP17iQzmAmvDcQ8GhDRAEf"
                ],
                "license": "GPL-2.0-or-later"
            },
            "lib/v4-periphery/lib/v4-core/src/libraries/SafeCast.sol": {
                "keccak256": "0x8060d21c4d54a431113f9a594b860e6a9bf1f346d0c7c02dfafe9847dd8a0591",
                "urls": [
                    "bzz-raw://e7f71b73d82965d1d949f388060f6f0daab7cd14718e260682918ec6fa0253b9",
                    "dweb:/ipfs/QmP85jtFrCeV6Y8zuJfrrgiMy1shX3tHWs2wX7DMAB7Lft"
                ],
                "license": "GPL-2.0-or-later"
            },
            "lib/v4-periphery/lib/v4-core/src/types/BalanceDelta.sol": {
                "keccak256": "0xa719c8fe51e0a9524280178f19f6851bcc3b3b60e73618f3d60905d35ae5569f",
                "urls": [
                    "bzz-raw://7436928dc9de35c6c7c5c636cb51adaf295cfd590da83b19a004ae33cbec9ef9",
                    "dweb:/ipfs/QmRJ9yZkUpzk4433GX3LgVVL8jwpbSYSUwXcucKisf3v4H"
                ],
                "license": "MIT"
            },
            "lib/v4-periphery/lib/v4-core/src/types/BeforeSwapDelta.sol": {
                "keccak256": "0x2a774312d91285313d569da1a718c909655da5432310417692097a1d4dc83a78",
                "urls": [
                    "bzz-raw://a2c7a0379955cff9c17ab9e61f95e42909aa5947c22740f86ce940d09856f782",
                    "dweb:/ipfs/QmaAuo8UBYXsGrVuKh8iRoAAdqwtg1jDq515cW1ZRP5m9K"
                ],
                "license": "MIT"
            },
            "lib/v4-periphery/lib/v4-core/src/types/Currency.sol": {
                "keccak256": "0x35c74eae038ecfbbae48b0e13f2b9a43ac6d8da4847ffa0f1482e4e2d455ee74",
                "urls": [
                    "bzz-raw://cadb54f9c89b6970583148e503a23c7b654aff1f3e6a0da57705c54e5b03b39f",
                    "dweb:/ipfs/Qma3CKKwyzGwzHN4Z9HDJ4Q7J5VfbN594i8F2DTGWTMWcB"
                ],
                "license": "MIT"
            },
            "lib/v4-periphery/lib/v4-core/src/types/PoolId.sol": {
                "keccak256": "0x308311916ea0f5c2fd878b6a2751eb223d170a69e33f601fae56dfe3c5d392af",
                "urls": [
                    "bzz-raw://669c2cd7ac17690b5d8831e0bda72822376c3a04b36afed6d31df4d75fe60918",
                    "dweb:/ipfs/QmT6EpkxqU8VF3WsgrZ66F3s1cCQRffR95z1HDYZz7ph6y"
                ],
                "license": "MIT"
            },
            "lib/v4-periphery/lib/v4-core/src/types/PoolKey.sol": {
                "keccak256": "0xf89856e0580d7a4856d3187a76858377ccee9d59702d230c338d84388221b786",
                "urls": [
                    "bzz-raw://6f3118fa189025695c37fdf0bdd1190f085ad097484d3c88cf4c56d1db65f639",
                    "dweb:/ipfs/QmamXpgtB8GV1CaFLvqefPWSoikLDhMk1yU4heBnVzU8gi"
                ],
                "license": "MIT"
            },
            "lib/v4-periphery/src/base/ImmutableState.sol": {
                "keccak256": "0x12b175e4ed6d31da545e3b6c9930901568c99d153b1e51044d32e88f42b9b633",
                "urls": [
                    "bzz-raw://f4347899e0b3bfd66e8d79652b1a14a62a02d16bfece63a40c6efe0e5656c384",
                    "dweb:/ipfs/QmSbbT8fefHstA72BqF7SDooDtmhs79dR8T6pWv8LxKU2L"
                ],
                "license": "GPL-2.0-or-later"
            },
            "lib/v4-periphery/src/base/SafeCallback.sol": {
                "keccak256": "0x6284bd1d1fbe78a901e63dc70720e2bf19de6758347b050f8ba2b155e73325c5",
                "urls": [
                    "bzz-raw://3afb423a3c0f8b5f6436680ff3cde9247924d442a9720dc39b2b07a352607187",
                    "dweb:/ipfs/QmaT5bMwiiqkp8KWUnHjWJz55Ah9vbpASzJagg9riHbpTf"
                ],
                "license": "GPL-3.0-or-later"
            },
            "lib/v4-periphery/src/base/hooks/BaseHook.sol": {
                "keccak256": "0xe6522a26dfe7b86aea6a84670b502890ede1e96302d641f231906897b2172f2f",
                "urls": [
                    "bzz-raw://19d2d2678ca32e81af3419bc4640833fc40e155b6757bb87edb0182f181c7fe7",
                    "dweb:/ipfs/QmPGpN6p78SrRW79hX16sM572uD4Fb2hJF6Bv58M9LYNpQ"
                ],
                "license": "GPL-3.0-or-later"
            },
            "src/PointsHook.sol": {
                "keccak256": "0xead1b4c77367f411518120b72d59e7d8ebb8965aeb54235d61a2952c1c6f0cea",
                "urls": [
                    "bzz-raw://a5ac085c3e9aeac62608812953d83407bbcb24745e6c7f1931e8c4cda2e2cd02",
                    "dweb:/ipfs/QmdryALNuX8FK5D3iZ9wCKCBzSBEW2oUiVe3U7gXqSYzCt"
                ],
                "license": "MIT"
            }
        },
        "version": 1
    },
    "id": 95
}