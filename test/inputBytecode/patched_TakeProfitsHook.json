{
    "abi": [
        {
            "type": "constructor",
            "inputs": [
                {
                    "name": "_manager",
                    "type": "address",
                    "internalType": "contract IPoolManager"
                },
                {
                    "name": "_uri",
                    "type": "string",
                    "internalType": "string"
                }
            ],
            "stateMutability": "nonpayable"
        },
        {
            "type": "function",
            "name": "afterAddLiquidity",
            "inputs": [
                {
                    "name": "",
                    "type": "address",
                    "internalType": "address"
                },
                {
                    "name": "",
                    "type": "tuple",
                    "internalType": "struct PoolKey",
                    "components": [
                        {
                            "name": "currency0",
                            "type": "address",
                            "internalType": "Currency"
                        },
                        {
                            "name": "currency1",
                            "type": "address",
                            "internalType": "Currency"
                        },
                        {
                            "name": "fee",
                            "type": "uint24",
                            "internalType": "uint24"
                        },
                        {
                            "name": "tickSpacing",
                            "type": "int24",
                            "internalType": "int24"
                        },
                        {
                            "name": "hooks",
                            "type": "address",
                            "internalType": "contract IHooks"
                        }
                    ]
                },
                {
                    "name": "",
                    "type": "tuple",
                    "internalType": "struct IPoolManager.ModifyLiquidityParams",
                    "components": [
                        {
                            "name": "tickLower",
                            "type": "int24",
                            "internalType": "int24"
                        },
                        {
                            "name": "tickUpper",
                            "type": "int24",
                            "internalType": "int24"
                        },
                        {
                            "name": "liquidityDelta",
                            "type": "int256",
                            "internalType": "int256"
                        },
                        {
                            "name": "salt",
                            "type": "bytes32",
                            "internalType": "bytes32"
                        }
                    ]
                },
                {
                    "name": "",
                    "type": "int256",
                    "internalType": "BalanceDelta"
                },
                {
                    "name": "",
                    "type": "int256",
                    "internalType": "BalanceDelta"
                },
                {
                    "name": "",
                    "type": "bytes",
                    "internalType": "bytes"
                }
            ],
            "outputs": [
                {
                    "name": "",
                    "type": "bytes4",
                    "internalType": "bytes4"
                },
                {
                    "name": "",
                    "type": "int256",
                    "internalType": "BalanceDelta"
                }
            ],
            "stateMutability": "nonpayable"
        },
        {
            "type": "function",
            "name": "afterDonate",
            "inputs": [
                {
                    "name": "",
                    "type": "address",
                    "internalType": "address"
                },
                {
                    "name": "",
                    "type": "tuple",
                    "internalType": "struct PoolKey",
                    "components": [
                        {
                            "name": "currency0",
                            "type": "address",
                            "internalType": "Currency"
                        },
                        {
                            "name": "currency1",
                            "type": "address",
                            "internalType": "Currency"
                        },
                        {
                            "name": "fee",
                            "type": "uint24",
                            "internalType": "uint24"
                        },
                        {
                            "name": "tickSpacing",
                            "type": "int24",
                            "internalType": "int24"
                        },
                        {
                            "name": "hooks",
                            "type": "address",
                            "internalType": "contract IHooks"
                        }
                    ]
                },
                {
                    "name": "",
                    "type": "uint256",
                    "internalType": "uint256"
                },
                {
                    "name": "",
                    "type": "uint256",
                    "internalType": "uint256"
                },
                {
                    "name": "",
                    "type": "bytes",
                    "internalType": "bytes"
                }
            ],
            "outputs": [
                {
                    "name": "",
                    "type": "bytes4",
                    "internalType": "bytes4"
                }
            ],
            "stateMutability": "nonpayable"
        },
        {
            "type": "function",
            "name": "afterInitialize",
            "inputs": [
                {
                    "name": "",
                    "type": "address",
                    "internalType": "address"
                },
                {
                    "name": "key",
                    "type": "tuple",
                    "internalType": "struct PoolKey",
                    "components": [
                        {
                            "name": "currency0",
                            "type": "address",
                            "internalType": "Currency"
                        },
                        {
                            "name": "currency1",
                            "type": "address",
                            "internalType": "Currency"
                        },
                        {
                            "name": "fee",
                            "type": "uint24",
                            "internalType": "uint24"
                        },
                        {
                            "name": "tickSpacing",
                            "type": "int24",
                            "internalType": "int24"
                        },
                        {
                            "name": "hooks",
                            "type": "address",
                            "internalType": "contract IHooks"
                        }
                    ]
                },
                {
                    "name": "",
                    "type": "uint160",
                    "internalType": "uint160"
                },
                {
                    "name": "tick",
                    "type": "int24",
                    "internalType": "int24"
                }
            ],
            "outputs": [
                {
                    "name": "",
                    "type": "bytes4",
                    "internalType": "bytes4"
                }
            ],
            "stateMutability": "nonpayable"
        },
        {
            "type": "function",
            "name": "afterRemoveLiquidity",
            "inputs": [
                {
                    "name": "",
                    "type": "address",
                    "internalType": "address"
                },
                {
                    "name": "",
                    "type": "tuple",
                    "internalType": "struct PoolKey",
                    "components": [
                        {
                            "name": "currency0",
                            "type": "address",
                            "internalType": "Currency"
                        },
                        {
                            "name": "currency1",
                            "type": "address",
                            "internalType": "Currency"
                        },
                        {
                            "name": "fee",
                            "type": "uint24",
                            "internalType": "uint24"
                        },
                        {
                            "name": "tickSpacing",
                            "type": "int24",
                            "internalType": "int24"
                        },
                        {
                            "name": "hooks",
                            "type": "address",
                            "internalType": "contract IHooks"
                        }
                    ]
                },
                {
                    "name": "",
                    "type": "tuple",
                    "internalType": "struct IPoolManager.ModifyLiquidityParams",
                    "components": [
                        {
                            "name": "tickLower",
                            "type": "int24",
                            "internalType": "int24"
                        },
                        {
                            "name": "tickUpper",
                            "type": "int24",
                            "internalType": "int24"
                        },
                        {
                            "name": "liquidityDelta",
                            "type": "int256",
                            "internalType": "int256"
                        },
                        {
                            "name": "salt",
                            "type": "bytes32",
                            "internalType": "bytes32"
                        }
                    ]
                },
                {
                    "name": "",
                    "type": "int256",
                    "internalType": "BalanceDelta"
                },
                {
                    "name": "",
                    "type": "int256",
                    "internalType": "BalanceDelta"
                },
                {
                    "name": "",
                    "type": "bytes",
                    "internalType": "bytes"
                }
            ],
            "outputs": [
                {
                    "name": "",
                    "type": "bytes4",
                    "internalType": "bytes4"
                },
                {
                    "name": "",
                    "type": "int256",
                    "internalType": "BalanceDelta"
                }
            ],
            "stateMutability": "nonpayable"
        },
        {
            "type": "function",
            "name": "afterSwap",
            "inputs": [
                {
                    "name": "sender",
                    "type": "address",
                    "internalType": "address"
                },
                {
                    "name": "key",
                    "type": "tuple",
                    "internalType": "struct PoolKey",
                    "components": [
                        {
                            "name": "currency0",
                            "type": "address",
                            "internalType": "Currency"
                        },
                        {
                            "name": "currency1",
                            "type": "address",
                            "internalType": "Currency"
                        },
                        {
                            "name": "fee",
                            "type": "uint24",
                            "internalType": "uint24"
                        },
                        {
                            "name": "tickSpacing",
                            "type": "int24",
                            "internalType": "int24"
                        },
                        {
                            "name": "hooks",
                            "type": "address",
                            "internalType": "contract IHooks"
                        }
                    ]
                },
                {
                    "name": "params",
                    "type": "tuple",
                    "internalType": "struct IPoolManager.SwapParams",
                    "components": [
                        {
                            "name": "zeroForOne",
                            "type": "bool",
                            "internalType": "bool"
                        },
                        {
                            "name": "amountSpecified",
                            "type": "int256",
                            "internalType": "int256"
                        },
                        {
                            "name": "sqrtPriceLimitX96",
                            "type": "uint160",
                            "internalType": "uint160"
                        }
                    ]
                },
                {
                    "name": "",
                    "type": "int256",
                    "internalType": "BalanceDelta"
                },
                {
                    "name": "",
                    "type": "bytes",
                    "internalType": "bytes"
                }
            ],
            "outputs": [
                {
                    "name": "",
                    "type": "bytes4",
                    "internalType": "bytes4"
                },
                {
                    "name": "",
                    "type": "int128",
                    "internalType": "int128"
                }
            ],
            "stateMutability": "nonpayable"
        },
        {
            "type": "function",
            "name": "balanceOf",
            "inputs": [
                {
                    "name": "account",
                    "type": "address",
                    "internalType": "address"
                },
                {
                    "name": "id",
                    "type": "uint256",
                    "internalType": "uint256"
                }
            ],
            "outputs": [
                {
                    "name": "",
                    "type": "uint256",
                    "internalType": "uint256"
                }
            ],
            "stateMutability": "view"
        },
        {
            "type": "function",
            "name": "balanceOfBatch",
            "inputs": [
                {
                    "name": "accounts",
                    "type": "address[]",
                    "internalType": "address[]"
                },
                {
                    "name": "ids",
                    "type": "uint256[]",
                    "internalType": "uint256[]"
                }
            ],
            "outputs": [
                {
                    "name": "",
                    "type": "uint256[]",
                    "internalType": "uint256[]"
                }
            ],
            "stateMutability": "view"
        },
        {
            "type": "function",
            "name": "beforeAddLiquidity",
            "inputs": [
                {
                    "name": "",
                    "type": "address",
                    "internalType": "address"
                },
                {
                    "name": "",
                    "type": "tuple",
                    "internalType": "struct PoolKey",
                    "components": [
                        {
                            "name": "currency0",
                            "type": "address",
                            "internalType": "Currency"
                        },
                        {
                            "name": "currency1",
                            "type": "address",
                            "internalType": "Currency"
                        },
                        {
                            "name": "fee",
                            "type": "uint24",
                            "internalType": "uint24"
                        },
                        {
                            "name": "tickSpacing",
                            "type": "int24",
                            "internalType": "int24"
                        },
                        {
                            "name": "hooks",
                            "type": "address",
                            "internalType": "contract IHooks"
                        }
                    ]
                },
                {
                    "name": "",
                    "type": "tuple",
                    "internalType": "struct IPoolManager.ModifyLiquidityParams",
                    "components": [
                        {
                            "name": "tickLower",
                            "type": "int24",
                            "internalType": "int24"
                        },
                        {
                            "name": "tickUpper",
                            "type": "int24",
                            "internalType": "int24"
                        },
                        {
                            "name": "liquidityDelta",
                            "type": "int256",
                            "internalType": "int256"
                        },
                        {
                            "name": "salt",
                            "type": "bytes32",
                            "internalType": "bytes32"
                        }
                    ]
                },
                {
                    "name": "",
                    "type": "bytes",
                    "internalType": "bytes"
                }
            ],
            "outputs": [
                {
                    "name": "",
                    "type": "bytes4",
                    "internalType": "bytes4"
                }
            ],
            "stateMutability": "nonpayable"
        },
        {
            "type": "function",
            "name": "beforeDonate",
            "inputs": [
                {
                    "name": "",
                    "type": "address",
                    "internalType": "address"
                },
                {
                    "name": "",
                    "type": "tuple",
                    "internalType": "struct PoolKey",
                    "components": [
                        {
                            "name": "currency0",
                            "type": "address",
                            "internalType": "Currency"
                        },
                        {
                            "name": "currency1",
                            "type": "address",
                            "internalType": "Currency"
                        },
                        {
                            "name": "fee",
                            "type": "uint24",
                            "internalType": "uint24"
                        },
                        {
                            "name": "tickSpacing",
                            "type": "int24",
                            "internalType": "int24"
                        },
                        {
                            "name": "hooks",
                            "type": "address",
                            "internalType": "contract IHooks"
                        }
                    ]
                },
                {
                    "name": "",
                    "type": "uint256",
                    "internalType": "uint256"
                },
                {
                    "name": "",
                    "type": "uint256",
                    "internalType": "uint256"
                },
                {
                    "name": "",
                    "type": "bytes",
                    "internalType": "bytes"
                }
            ],
            "outputs": [
                {
                    "name": "",
                    "type": "bytes4",
                    "internalType": "bytes4"
                }
            ],
            "stateMutability": "nonpayable"
        },
        {
            "type": "function",
            "name": "beforeInitialize",
            "inputs": [
                {
                    "name": "",
                    "type": "address",
                    "internalType": "address"
                },
                {
                    "name": "",
                    "type": "tuple",
                    "internalType": "struct PoolKey",
                    "components": [
                        {
                            "name": "currency0",
                            "type": "address",
                            "internalType": "Currency"
                        },
                        {
                            "name": "currency1",
                            "type": "address",
                            "internalType": "Currency"
                        },
                        {
                            "name": "fee",
                            "type": "uint24",
                            "internalType": "uint24"
                        },
                        {
                            "name": "tickSpacing",
                            "type": "int24",
                            "internalType": "int24"
                        },
                        {
                            "name": "hooks",
                            "type": "address",
                            "internalType": "contract IHooks"
                        }
                    ]
                },
                {
                    "name": "",
                    "type": "uint160",
                    "internalType": "uint160"
                }
            ],
            "outputs": [
                {
                    "name": "",
                    "type": "bytes4",
                    "internalType": "bytes4"
                }
            ],
            "stateMutability": "nonpayable"
        },
        {
            "type": "function",
            "name": "beforeRemoveLiquidity",
            "inputs": [
                {
                    "name": "",
                    "type": "address",
                    "internalType": "address"
                },
                {
                    "name": "",
                    "type": "tuple",
                    "internalType": "struct PoolKey",
                    "components": [
                        {
                            "name": "currency0",
                            "type": "address",
                            "internalType": "Currency"
                        },
                        {
                            "name": "currency1",
                            "type": "address",
                            "internalType": "Currency"
                        },
                        {
                            "name": "fee",
                            "type": "uint24",
                            "internalType": "uint24"
                        },
                        {
                            "name": "tickSpacing",
                            "type": "int24",
                            "internalType": "int24"
                        },
                        {
                            "name": "hooks",
                            "type": "address",
                            "internalType": "contract IHooks"
                        }
                    ]
                },
                {
                    "name": "",
                    "type": "tuple",
                    "internalType": "struct IPoolManager.ModifyLiquidityParams",
                    "components": [
                        {
                            "name": "tickLower",
                            "type": "int24",
                            "internalType": "int24"
                        },
                        {
                            "name": "tickUpper",
                            "type": "int24",
                            "internalType": "int24"
                        },
                        {
                            "name": "liquidityDelta",
                            "type": "int256",
                            "internalType": "int256"
                        },
                        {
                            "name": "salt",
                            "type": "bytes32",
                            "internalType": "bytes32"
                        }
                    ]
                },
                {
                    "name": "",
                    "type": "bytes",
                    "internalType": "bytes"
                }
            ],
            "outputs": [
                {
                    "name": "",
                    "type": "bytes4",
                    "internalType": "bytes4"
                }
            ],
            "stateMutability": "nonpayable"
        },
        {
            "type": "function",
            "name": "beforeSwap",
            "inputs": [
                {
                    "name": "",
                    "type": "address",
                    "internalType": "address"
                },
                {
                    "name": "",
                    "type": "tuple",
                    "internalType": "struct PoolKey",
                    "components": [
                        {
                            "name": "currency0",
                            "type": "address",
                            "internalType": "Currency"
                        },
                        {
                            "name": "currency1",
                            "type": "address",
                            "internalType": "Currency"
                        },
                        {
                            "name": "fee",
                            "type": "uint24",
                            "internalType": "uint24"
                        },
                        {
                            "name": "tickSpacing",
                            "type": "int24",
                            "internalType": "int24"
                        },
                        {
                            "name": "hooks",
                            "type": "address",
                            "internalType": "contract IHooks"
                        }
                    ]
                },
                {
                    "name": "",
                    "type": "tuple",
                    "internalType": "struct IPoolManager.SwapParams",
                    "components": [
                        {
                            "name": "zeroForOne",
                            "type": "bool",
                            "internalType": "bool"
                        },
                        {
                            "name": "amountSpecified",
                            "type": "int256",
                            "internalType": "int256"
                        },
                        {
                            "name": "sqrtPriceLimitX96",
                            "type": "uint160",
                            "internalType": "uint160"
                        }
                    ]
                },
                {
                    "name": "",
                    "type": "bytes",
                    "internalType": "bytes"
                }
            ],
            "outputs": [
                {
                    "name": "",
                    "type": "bytes4",
                    "internalType": "bytes4"
                },
                {
                    "name": "",
                    "type": "int256",
                    "internalType": "BeforeSwapDelta"
                },
                {
                    "name": "",
                    "type": "uint24",
                    "internalType": "uint24"
                }
            ],
            "stateMutability": "nonpayable"
        },
        {
            "type": "function",
            "name": "cancelOrder",
            "inputs": [
                {
                    "name": "key",
                    "type": "tuple",
                    "internalType": "struct PoolKey",
                    "components": [
                        {
                            "name": "currency0",
                            "type": "address",
                            "internalType": "Currency"
                        },
                        {
                            "name": "currency1",
                            "type": "address",
                            "internalType": "Currency"
                        },
                        {
                            "name": "fee",
                            "type": "uint24",
                            "internalType": "uint24"
                        },
                        {
                            "name": "tickSpacing",
                            "type": "int24",
                            "internalType": "int24"
                        },
                        {
                            "name": "hooks",
                            "type": "address",
                            "internalType": "contract IHooks"
                        }
                    ]
                },
                {
                    "name": "tickToSellAt",
                    "type": "int24",
                    "internalType": "int24"
                },
                {
                    "name": "zeroForOne",
                    "type": "bool",
                    "internalType": "bool"
                }
            ],
            "outputs": [],
            "stateMutability": "nonpayable"
        },
        {
            "type": "function",
            "name": "claimTokensSupply",
            "inputs": [
                {
                    "name": "positionId",
                    "type": "uint256",
                    "internalType": "uint256"
                }
            ],
            "outputs": [
                {
                    "name": "claimsSupply",
                    "type": "uint256",
                    "internalType": "uint256"
                }
            ],
            "stateMutability": "view"
        },
        {
            "type": "function",
            "name": "claimableOutputTokens",
            "inputs": [
                {
                    "name": "positionId",
                    "type": "uint256",
                    "internalType": "uint256"
                }
            ],
            "outputs": [
                {
                    "name": "outputClaimable",
                    "type": "uint256",
                    "internalType": "uint256"
                }
            ],
            "stateMutability": "view"
        },
        {
            "type": "function",
            "name": "getHookPermissions",
            "inputs": [],
            "outputs": [
                {
                    "name": "",
                    "type": "tuple",
                    "internalType": "struct Hooks.Permissions",
                    "components": [
                        {
                            "name": "beforeInitialize",
                            "type": "bool",
                            "internalType": "bool"
                        },
                        {
                            "name": "afterInitialize",
                            "type": "bool",
                            "internalType": "bool"
                        },
                        {
                            "name": "beforeAddLiquidity",
                            "type": "bool",
                            "internalType": "bool"
                        },
                        {
                            "name": "afterAddLiquidity",
                            "type": "bool",
                            "internalType": "bool"
                        },
                        {
                            "name": "beforeRemoveLiquidity",
                            "type": "bool",
                            "internalType": "bool"
                        },
                        {
                            "name": "afterRemoveLiquidity",
                            "type": "bool",
                            "internalType": "bool"
                        },
                        {
                            "name": "beforeSwap",
                            "type": "bool",
                            "internalType": "bool"
                        },
                        {
                            "name": "afterSwap",
                            "type": "bool",
                            "internalType": "bool"
                        },
                        {
                            "name": "beforeDonate",
                            "type": "bool",
                            "internalType": "bool"
                        },
                        {
                            "name": "afterDonate",
                            "type": "bool",
                            "internalType": "bool"
                        },
                        {
                            "name": "beforeSwapReturnDelta",
                            "type": "bool",
                            "internalType": "bool"
                        },
                        {
                            "name": "afterSwapReturnDelta",
                            "type": "bool",
                            "internalType": "bool"
                        },
                        {
                            "name": "afterAddLiquidityReturnDelta",
                            "type": "bool",
                            "internalType": "bool"
                        },
                        {
                            "name": "afterRemoveLiquidityReturnDelta",
                            "type": "bool",
                            "internalType": "bool"
                        }
                    ]
                }
            ],
            "stateMutability": "pure"
        },
        {
            "type": "function",
            "name": "getPositionId",
            "inputs": [
                {
                    "name": "key",
                    "type": "tuple",
                    "internalType": "struct PoolKey",
                    "components": [
                        {
                            "name": "currency0",
                            "type": "address",
                            "internalType": "Currency"
                        },
                        {
                            "name": "currency1",
                            "type": "address",
                            "internalType": "Currency"
                        },
                        {
                            "name": "fee",
                            "type": "uint24",
                            "internalType": "uint24"
                        },
                        {
                            "name": "tickSpacing",
                            "type": "int24",
                            "internalType": "int24"
                        },
                        {
                            "name": "hooks",
                            "type": "address",
                            "internalType": "contract IHooks"
                        }
                    ]
                },
                {
                    "name": "tick",
                    "type": "int24",
                    "internalType": "int24"
                },
                {
                    "name": "zeroForOne",
                    "type": "bool",
                    "internalType": "bool"
                }
            ],
            "outputs": [
                {
                    "name": "",
                    "type": "uint256",
                    "internalType": "uint256"
                }
            ],
            "stateMutability": "pure"
        },
        {
            "type": "function",
            "name": "isApprovedForAll",
            "inputs": [
                {
                    "name": "account",
                    "type": "address",
                    "internalType": "address"
                },
                {
                    "name": "operator",
                    "type": "address",
                    "internalType": "address"
                }
            ],
            "outputs": [
                {
                    "name": "",
                    "type": "bool",
                    "internalType": "bool"
                }
            ],
            "stateMutability": "view"
        },
        {
            "type": "function",
            "name": "lastTicks",
            "inputs": [
                {
                    "name": "poolId",
                    "type": "bytes32",
                    "internalType": "PoolId"
                }
            ],
            "outputs": [
                {
                    "name": "lastTick",
                    "type": "int24",
                    "internalType": "int24"
                }
            ],
            "stateMutability": "view"
        },
        {
            "type": "function",
            "name": "pendingOrders",
            "inputs": [
                {
                    "name": "poolId",
                    "type": "bytes32",
                    "internalType": "PoolId"
                },
                {
                    "name": "tickToSellAt",
                    "type": "int24",
                    "internalType": "int24"
                },
                {
                    "name": "zeroForOne",
                    "type": "bool",
                    "internalType": "bool"
                }
            ],
            "outputs": [
                {
                    "name": "inputAmount",
                    "type": "uint256",
                    "internalType": "uint256"
                }
            ],
            "stateMutability": "view"
        },
        {
            "type": "function",
            "name": "placeOrder",
            "inputs": [
                {
                    "name": "key",
                    "type": "tuple",
                    "internalType": "struct PoolKey",
                    "components": [
                        {
                            "name": "currency0",
                            "type": "address",
                            "internalType": "Currency"
                        },
                        {
                            "name": "currency1",
                            "type": "address",
                            "internalType": "Currency"
                        },
                        {
                            "name": "fee",
                            "type": "uint24",
                            "internalType": "uint24"
                        },
                        {
                            "name": "tickSpacing",
                            "type": "int24",
                            "internalType": "int24"
                        },
                        {
                            "name": "hooks",
                            "type": "address",
                            "internalType": "contract IHooks"
                        }
                    ]
                },
                {
                    "name": "tickToSellAt",
                    "type": "int24",
                    "internalType": "int24"
                },
                {
                    "name": "zeroForOne",
                    "type": "bool",
                    "internalType": "bool"
                },
                {
                    "name": "inputAmount",
                    "type": "uint256",
                    "internalType": "uint256"
                }
            ],
            "outputs": [
                {
                    "name": "",
                    "type": "int24",
                    "internalType": "int24"
                }
            ],
            "stateMutability": "nonpayable"
        },
        {
            "type": "function",
            "name": "poolManager",
            "inputs": [],
            "outputs": [
                {
                    "name": "",
                    "type": "address",
                    "internalType": "contract IPoolManager"
                }
            ],
            "stateMutability": "view"
        },
        {
            "type": "function",
            "name": "redeem",
            "inputs": [
                {
                    "name": "key",
                    "type": "tuple",
                    "internalType": "struct PoolKey",
                    "components": [
                        {
                            "name": "currency0",
                            "type": "address",
                            "internalType": "Currency"
                        },
                        {
                            "name": "currency1",
                            "type": "address",
                            "internalType": "Currency"
                        },
                        {
                            "name": "fee",
                            "type": "uint24",
                            "internalType": "uint24"
                        },
                        {
                            "name": "tickSpacing",
                            "type": "int24",
                            "internalType": "int24"
                        },
                        {
                            "name": "hooks",
                            "type": "address",
                            "internalType": "contract IHooks"
                        }
                    ]
                },
                {
                    "name": "tickToSellAt",
                    "type": "int24",
                    "internalType": "int24"
                },
                {
                    "name": "zeroForOne",
                    "type": "bool",
                    "internalType": "bool"
                },
                {
                    "name": "inputAmountToClaimFor",
                    "type": "uint256",
                    "internalType": "uint256"
                }
            ],
            "outputs": [],
            "stateMutability": "nonpayable"
        },
        {
            "type": "function",
            "name": "safeBatchTransferFrom",
            "inputs": [
                {
                    "name": "from",
                    "type": "address",
                    "internalType": "address"
                },
                {
                    "name": "to",
                    "type": "address",
                    "internalType": "address"
                },
                {
                    "name": "ids",
                    "type": "uint256[]",
                    "internalType": "uint256[]"
                },
                {
                    "name": "values",
                    "type": "uint256[]",
                    "internalType": "uint256[]"
                },
                {
                    "name": "data",
                    "type": "bytes",
                    "internalType": "bytes"
                }
            ],
            "outputs": [],
            "stateMutability": "nonpayable"
        },
        {
            "type": "function",
            "name": "safeTransferFrom",
            "inputs": [
                {
                    "name": "from",
                    "type": "address",
                    "internalType": "address"
                },
                {
                    "name": "to",
                    "type": "address",
                    "internalType": "address"
                },
                {
                    "name": "id",
                    "type": "uint256",
                    "internalType": "uint256"
                },
                {
                    "name": "value",
                    "type": "uint256",
                    "internalType": "uint256"
                },
                {
                    "name": "data",
                    "type": "bytes",
                    "internalType": "bytes"
                }
            ],
            "outputs": [],
            "stateMutability": "nonpayable"
        },
        {
            "type": "function",
            "name": "setApprovalForAll",
            "inputs": [
                {
                    "name": "operator",
                    "type": "address",
                    "internalType": "address"
                },
                {
                    "name": "approved",
                    "type": "bool",
                    "internalType": "bool"
                }
            ],
            "outputs": [],
            "stateMutability": "nonpayable"
        },
        {
            "type": "function",
            "name": "supportsInterface",
            "inputs": [
                {
                    "name": "interfaceId",
                    "type": "bytes4",
                    "internalType": "bytes4"
                }
            ],
            "outputs": [
                {
                    "name": "",
                    "type": "bool",
                    "internalType": "bool"
                }
            ],
            "stateMutability": "view"
        },
        {
            "type": "function",
            "name": "unlockCallback",
            "inputs": [
                {
                    "name": "data",
                    "type": "bytes",
                    "internalType": "bytes"
                }
            ],
            "outputs": [
                {
                    "name": "",
                    "type": "bytes",
                    "internalType": "bytes"
                }
            ],
            "stateMutability": "nonpayable"
        },
        {
            "type": "function",
            "name": "uri",
            "inputs": [
                {
                    "name": "",
                    "type": "uint256",
                    "internalType": "uint256"
                }
            ],
            "outputs": [
                {
                    "name": "",
                    "type": "string",
                    "internalType": "string"
                }
            ],
            "stateMutability": "view"
        },
        {
            "type": "event",
            "name": "ApprovalForAll",
            "inputs": [
                {
                    "name": "account",
                    "type": "address",
                    "indexed": true,
                    "internalType": "address"
                },
                {
                    "name": "operator",
                    "type": "address",
                    "indexed": true,
                    "internalType": "address"
                },
                {
                    "name": "approved",
                    "type": "bool",
                    "indexed": false,
                    "internalType": "bool"
                }
            ],
            "anonymous": false
        },
        {
            "type": "event",
            "name": "TransferBatch",
            "inputs": [
                {
                    "name": "operator",
                    "type": "address",
                    "indexed": true,
                    "internalType": "address"
                },
                {
                    "name": "from",
                    "type": "address",
                    "indexed": true,
                    "internalType": "address"
                },
                {
                    "name": "to",
                    "type": "address",
                    "indexed": true,
                    "internalType": "address"
                },
                {
                    "name": "ids",
                    "type": "uint256[]",
                    "indexed": false,
                    "internalType": "uint256[]"
                },
                {
                    "name": "values",
                    "type": "uint256[]",
                    "indexed": false,
                    "internalType": "uint256[]"
                }
            ],
            "anonymous": false
        },
        {
            "type": "event",
            "name": "TransferSingle",
            "inputs": [
                {
                    "name": "operator",
                    "type": "address",
                    "indexed": true,
                    "internalType": "address"
                },
                {
                    "name": "from",
                    "type": "address",
                    "indexed": true,
                    "internalType": "address"
                },
                {
                    "name": "to",
                    "type": "address",
                    "indexed": true,
                    "internalType": "address"
                },
                {
                    "name": "id",
                    "type": "uint256",
                    "indexed": false,
                    "internalType": "uint256"
                },
                {
                    "name": "value",
                    "type": "uint256",
                    "indexed": false,
                    "internalType": "uint256"
                }
            ],
            "anonymous": false
        },
        {
            "type": "event",
            "name": "URI",
            "inputs": [
                {
                    "name": "value",
                    "type": "string",
                    "indexed": false,
                    "internalType": "string"
                },
                {
                    "name": "id",
                    "type": "uint256",
                    "indexed": true,
                    "internalType": "uint256"
                }
            ],
            "anonymous": false
        },
        {
            "type": "error",
            "name": "ERC1155InsufficientBalance",
            "inputs": [
                {
                    "name": "sender",
                    "type": "address",
                    "internalType": "address"
                },
                {
                    "name": "balance",
                    "type": "uint256",
                    "internalType": "uint256"
                },
                {
                    "name": "needed",
                    "type": "uint256",
                    "internalType": "uint256"
                },
                {
                    "name": "tokenId",
                    "type": "uint256",
                    "internalType": "uint256"
                }
            ]
        },
        {
            "type": "error",
            "name": "ERC1155InvalidApprover",
            "inputs": [
                {
                    "name": "approver",
                    "type": "address",
                    "internalType": "address"
                }
            ]
        },
        {
            "type": "error",
            "name": "ERC1155InvalidArrayLength",
            "inputs": [
                {
                    "name": "idsLength",
                    "type": "uint256",
                    "internalType": "uint256"
                },
                {
                    "name": "valuesLength",
                    "type": "uint256",
                    "internalType": "uint256"
                }
            ]
        },
        {
            "type": "error",
            "name": "ERC1155InvalidOperator",
            "inputs": [
                {
                    "name": "operator",
                    "type": "address",
                    "internalType": "address"
                }
            ]
        },
        {
            "type": "error",
            "name": "ERC1155InvalidReceiver",
            "inputs": [
                {
                    "name": "receiver",
                    "type": "address",
                    "internalType": "address"
                }
            ]
        },
        {
            "type": "error",
            "name": "ERC1155InvalidSender",
            "inputs": [
                {
                    "name": "sender",
                    "type": "address",
                    "internalType": "address"
                }
            ]
        },
        {
            "type": "error",
            "name": "ERC1155MissingApprovalForAll",
            "inputs": [
                {
                    "name": "operator",
                    "type": "address",
                    "internalType": "address"
                },
                {
                    "name": "owner",
                    "type": "address",
                    "internalType": "address"
                }
            ]
        },
        {
            "type": "error",
            "name": "HookNotImplemented",
            "inputs": []
        },
        {
            "type": "error",
            "name": "InvalidOrder",
            "inputs": []
        },
        {
            "type": "error",
            "name": "InvalidPool",
            "inputs": []
        },
        {
            "type": "error",
            "name": "LockFailure",
            "inputs": []
        },
        {
            "type": "error",
            "name": "NotEnoughToClaim",
            "inputs": []
        },
        {
            "type": "error",
            "name": "NotPoolManager",
            "inputs": []
        },
        {
            "type": "error",
            "name": "NotSelf",
            "inputs": []
        },
        {
            "type": "error",
            "name": "NothingToClaim",
            "inputs": []
        }
    ],
    "bytecode": {
        "object": "0x60a060405234801561000f575f80fd5b5060405161327938038061327983398101604081905261002e916102ce565b6001600160a01b038216608052808261004630610058565b506100508161014e565b5050506104db565b61014b81610146604080516101c0810182525f80825260208201819052918101829052606081018290526080810182905260a0810182905260c0810182905260e08101829052610100810182905261012081018290526101408101829052610160810182905261018081018290526101a081019190915250604080516101c0810182525f808252600160208301819052928201819052606082018190526080820181905260a0820181905260c0820181905260e0820192909252610100810182905261012081018290526101408101829052610160810182905261018081018290526101a081019190915290565b61015e565b50565b600261015a8282610421565b5050565b80511515612000831615151415806101825750602081015115156110008316151514155b806101995750604081015115156108008316151514155b806101b05750606081015115156104008316151514155b806101c75750608081015115156102008316151514155b806101de575060a081015115156101008316151514155b806101f4575060c0810151151560808316151514155b8061020a575060e0810151151560408316151514155b806102215750610100810151151560208316151514155b806102385750610120810151151560108316151514155b8061024f5750610140810151151560088316151514155b806102665750610160810151151560048316151514155b8061027d5750610180810151151560028316151514155b8061029457506101a0810151151560018316151514155b1561015a5761015a630732d7b560e51b83815f526001600160a01b03811660045260245ffd5b634e487b7160e01b5f52604160045260245ffd5b5f80604083850312156102df575f80fd5b82516001600160a01b03811681146102f5575f80fd5b60208401519092506001600160401b03811115610310575f80fd5b8301601f81018513610320575f80fd5b80516001600160401b03811115610339576103396102ba565b604051601f8201601f19908116603f011681016001600160401b0381118282101715610367576103676102ba565b60405281815282820160200187101561037e575f80fd5b8160208401602083015e5f602083830101528093505050509250929050565b600181811c908216806103b157607f821691505b6020821081036103cf57634e487b7160e01b5f52602260045260245ffd5b50919050565b601f82111561041c57805f5260205f20601f840160051c810160208510156103fa5750805b601f840160051c820191505b81811015610419575f8155600101610406565b50505b505050565b81516001600160401b0381111561043a5761043a6102ba565b61044e81610448845461039d565b846103d5565b6020601f821160018114610480575f83156104695750848201515b5f19600385901b1c1916600184901b178455610419565b5f84815260208120601f198516915b828110156104af578785015182556020948501946001909201910161048f565b50848210156104cc57868401515f19600387901b60f8161c191681555b50505050600190811b01905550565b608051612d556105245f395f818161052401528181610a7f0152818161121601528181611b0101528181611c8c01528181611cf301528181611d2c0152611ded0152612d555ff3fe608060405234801561000f575f80fd5b50600436106101c5575f3560e01c8063a0dc3f99116100fe578063dc4c90d31161009e578063e4cbfea51161006e578063e4cbfea51461057f578063e985e9c5146105a1578063f242432a146105dc578063fa59cb0c146105ef575f80fd5b8063dc4c90d31461051f578063dc98354e1461055e578063dd02c9641461056c578063e1b4af691461041a575f80fd5b8063b47b2fb1116100d9578063b47b2fb1146103c5578063b5a33914146103fb578063b6a8b0fa1461041a578063c4e833ce14610428575f80fd5b8063a0dc3f991461036f578063a22cb46514610382578063a2dc31b214610395575f80fd5b80634e1273f4116101695780636fe7e6eb116101445780636fe7e6eb146103235780637e8941af1461033657806391dd73461461035c5780639f063efc146102f0575f80fd5b80634e1273f414610292578063575e24b4146102b25780636c2bbe7e146102f0575f80fd5b806321d0ee70116101a457806321d0ee7014610232578063259982e5146102325780632eb2c2d61461025e5780633bb76cc114610273575f80fd5b8062fdd58e146101c957806301ffc9a7146101ef5780630e89341c14610212575b5f80fd5b6101dc6101d7366004611e57565b610602565b6040519081526020015b60405180910390f35b6102026101fd366004611e96565b610629565b60405190151581526020016101e6565b610225610220366004611eb1565b610678565b6040516101e69190611ef6565b610245610240366004611f6c565b61070a565b6040516001600160e01b031990911681526020016101e6565b61027161026c366004612121565b610724565b005b6101dc610281366004611eb1565b60066020525f908152604090205481565b6102a56102a03660046121d4565b6107ae565b6040516101e691906122d3565b6102c56102c03660046122f5565b610879565b604080516001600160e01b03199094168452602084019290925262ffffff16908201526060016101e6565b6103036102fe36600461234f565b610895565b604080516001600160e01b031990931683526020830191909152016101e6565b6102456103313660046123f0565b6108b0565b610349610344366004612454565b610904565b60405160029190910b81526020016101e6565b61022561036a3660046124a0565b610a72565b61027161037d3660046124df565b610ace565b610271610390366004612524565b610bea565b6101dc6103a336600461255b565b600460209081525f938452604080852082529284528284209052825290205481565b6103d86103d336600461258d565b610bf9565b604080516001600160e01b03199093168352600f9190910b6020830152016101e6565b6101dc610409366004611eb1565b60056020525f908152604090205481565b61024561024036600461260e565b610512604080516101c0810182525f80825260208201819052918101829052606081018290526080810182905260a0810182905260c0810182905260e08101829052610100810182905261012081018290526101408101829052610160810182905261018081018290526101a081019190915250604080516101c0810182525f808252600160208301819052928201819052606082018190526080820181905260a0820181905260c0820181905260e0820192909252610100810182905261012081018290526101408101829052610160810182905261018081018290526101a081019190915290565b6040516101e69190612668565b6105467f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b0390911681526020016101e6565b610245610240366004612789565b61027161057a366004612454565b610c9f565b61034961058d366004611eb1565b60036020525f908152604090205460020b81565b6102026105af3660046127c5565b6001600160a01b039182165f90815260016020908152604080832093909416825291909152205460ff1690565b6102716105ea3660046127f1565b610de5565b6101dc6105fd3660046124df565b610e62565b5f818152602081815260408083206001600160a01b03861684529091529020545b92915050565b5f6001600160e01b03198216636cdb3d1360e11b148061065957506001600160e01b031982166303a24d0760e21b145b8061062357506301ffc9a760e01b6001600160e01b0319831614610623565b60606002805461068790612849565b80601f01602080910402602001604051908101604052809291908181526020018280546106b390612849565b80156106fe5780601f106106d5576101008083540402835291602001916106fe565b820191905f5260205f20905b8154815290600101906020018083116106e157829003601f168201915b50505050509050919050565b5f604051630a85dc2960e01b815260040160405180910390fd5b336001600160a01b038616811480159061076357506001600160a01b038087165f9081526001602090815260408083209385168352929052205460ff16155b156107995760405163711bec9160e11b81526001600160a01b038083166004830152871660248201526044015b60405180910390fd5b6107a68686868686610eb5565b505050505050565b606081518351146107df5781518351604051635b05999160e01b815260048101929092526024820152604401610790565b5f835167ffffffffffffffff8111156107fa576107fa611fe3565b604051908082528060200260200182016040528015610823578160200160208202803683370190505b5090505f5b84518110156108715760208082028601015161084c90602080840287010151610602565b82828151811061085e5761085e61287b565b6020908102919091010152600101610828565b509392505050565b5f805f604051630a85dc2960e01b815260040160405180910390fd5b5f80604051630a85dc2960e01b815260040160405180910390fd5b5f816003826108ce6108c7368990038901896128a1565b60a0902090565b815260208101919091526040015f20805462ffffff191662ffffff9290921691909117905550636fe7e6eb60e01b949350505050565b5f8061091f8561091a6080890160608a01612935565b610f1a565b90508260045f6109376108c7368b90038b018b6128a1565b815260208082019290925260409081015f908120600286900b82528352818120881515825290925281208054909190610971908490612962565b909155505f9050610983878387610e62565b90508360055f8381526020019081526020015f205f8282546109a59190612962565b925050819055506109c633828660405180602001604052805f815250610f6a565b5f856109e1576109dc6040890160208a01612975565b6109ee565b6109ee6020890189612975565b6040516323b872dd60e01b8152336004820152306024820152604481018790529091506001600160a01b038216906323b872dd906064016020604051808303815f875af1158015610a41573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610a659190612990565b5091979650505050505050565b6060336001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614610abd5760405163570c108560e11b815260040160405180910390fd5b610ac78383610fc5565b9392505050565b5f610ae38361091a6080870160608801612935565b90505f610af1858385610e62565b90505f610afe3383610602565b9050805f03610b205760405163af61069360e01b815260040160405180910390fd5b8060045f610b366108c7368b90038b018b6128a1565b815260208082019290925260409081015f908120600288900b82528352818120881515825290925281208054909190610b709084906129ab565b90915550505f8281526005602052604081208054839290610b929084906129ab565b90915550610ba3905033838361105e565b5f84610bbe57610bb96040880160208901612975565b610bcb565b610bcb6020880188612975565b9050610be16001600160a01b03821633846110c4565b50505050505050565b610bf5338383611160565b5050565b5f80306001600160a01b03891603610c1c575063b47b2fb160e01b90505f610c94565b60015f5b8115610c4757610c3d89610c3760208b018b6129be565b156111f4565b9092509050610c20565b8060035f610c5d6108c7368e90038e018e6128a1565b815260208101919091526040015f908120805462ffffff191662ffffff939093169290921790915563b47b2fb160e01b9450925050505b965096945050505050565b5f610cb48461091a6080880160608901612935565b90505f610cc2868386610e62565b5f8181526006602052604081205491925003610cf1576040516312d37ee560e31b815260040160405180910390fd5b5f610cfc3383610602565b905083811015610d1f57604051639378648960e01b815260040160405180910390fd5b5f8281526006602090815260408083205460059092528220549091610d458784846113ac565b90508060065f8781526020019081526020015f205f828254610d6791906129ab565b90915550505f8581526005602052604081208054899290610d899084906129ab565b90915550610d9a905033868961105e565b5f88610db257610dad60208c018c612975565b610dc2565b610dc260408c0160208d01612975565b9050610dd86001600160a01b03821633846110c4565b5050505050505050505050565b336001600160a01b0386168114801590610e2457506001600160a01b038087165f9081526001602090815260408083209385168352929052205460ff16155b15610e555760405163711bec9160e11b81526001600160a01b03808316600483015287166024820152604401610790565b6107a686868686866113c7565b5f610e756108c7368690038601866128a1565b604080516020810192909252600285900b90820152821515606082015260800160408051601f198184030181529190528051602090910120949350505050565b6001600160a01b038416610ede57604051632bfa23e760e11b81525f6004820152602401610790565b6001600160a01b038516610f0657604051626a0d4560e21b81525f6004820152602401610790565b610f138585858585611446565b5050505050565b5f80610f2683856129ed565b90505f8460020b128015610f455750610f3f8385612a25565b60020b15155b15610f585780610f5481612a46565b9150505b610f628382612a67565b949350505050565b6001600160a01b038416610f9357604051632bfa23e760e11b81525f6004820152602401610790565b604080516001808252602082018690528183019081526060820185905260808201909252906107a65f87848487611446565b60605f80306001600160a01b03168585604051610fe3929190612a86565b5f604051808303815f865af19150503d805f811461101c576040519150601f19603f3d011682016040523d82523d5f602084013e611021565b606091505b509150915081156110355791506106239050565b80515f03611056576040516314815f4760e31b815260040160405180910390fd5b805160208201fd5b6001600160a01b03831661108657604051626a0d4560e21b81525f6004820152602401610790565b604080516001808252602082018590528183019081526060820184905260a082019092525f60808201818152919291610f1391879185908590611446565b5f6001600160a01b0384166110f8575f805f8085875af19050806110f3576110f3638549db5960e01b84611499565b61115a565b60405163a9059cbb60e01b81526001600160a01b038416600482015282602482015260205f6044835f895af13d15601f3d1160015f511416171691505f81525f60208201525f6040820152508061115a5761115a632c4b17e760e21b85611499565b50505050565b6001600160a01b0382166111885760405162ced3e160e81b81525f6004820152602401610790565b6001600160a01b038381165f81815260016020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b5f808061123c61120c6108c7368890038801886128a1565b6001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016906114cc565b50509150505f60035f611259888036038101906108c791906128a1565b815260208101919091526040015f2054600290810b915082900b81121561131657805b8260020b8160020b13611310575f60048161129f6108c7368c90038c018c6128a1565b815260208082019290925260409081015f908120600286900b825283528181208a15158252909252902054905080156112ee576112de8883898461157e565b60018495509550505050506113a5565b506112ff6080880160608901612935565b6113099082612a95565b905061127c565b5061139e565b805b8260020b8160020b1261139c575f60048161133b6108c7368c90038c018c6128a1565b815260208082019290925260409081015f908120600286900b825283528181208a151582529092529020549050801561137a576112de8883898461157e565b5061138b6080880160608901612935565b6113959082612aba565b9050611318565b505b505f925090505b9250929050565b5f825f1904841183021582026113c0575f80fd5b5091020490565b6001600160a01b0384166113f057604051632bfa23e760e11b81525f6004820152602401610790565b6001600160a01b03851661141857604051626a0d4560e21b81525f6004820152602401610790565b60408051600180825260208201869052818301908152606082018590526080820190925290610be187878484875b611452858585856116aa565b6001600160a01b03841615610f13578251339060010361148b57602084810151908401516114848389898585896118b9565b50506107a6565b6107a68187878787876119da565b3d60405183815282600482015260406024820152816044820152815f606483013e602080601f8401040260640191508181fd5b5f805f805f6114da86611ac1565b604051631e2eaeaf60e01b8152600481018290529091505f906001600160a01b03891690631e2eaeaf90602401602060405180830381865afa158015611522573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906115469190612adf565b90506001600160a01b03811695508060a01c60020b945062ffffff8160b81c16935062ffffff8160d01c169250505092959194509250565b5f6115ee8560405180606001604052808615158152602001856115a090612af6565b8152602001866115ce576115c9600173fffd8963efd1fc6a506488495d951d5263988d26612b10565b6115de565b6115de6401000276a36001612b2f565b6001600160a01b03169052611afd565b90508160045f6116066108c7368a90038a018a6128a1565b815260208082019290925260409081015f908120600289900b825283528181208715158252909252812080549091906116409084906129ab565b909155505f9050611652868686610e62565b90505f8461166c576116648360801d90565b600f0b61167a565b61167683600f0b90565b600f0b5b90508060065f8481526020019081526020015f205f82825461169c9190612962565b909155505050505050505050565b80518251146116d95781518151604051635b05999160e01b815260048101929092526024820152604401610790565b335f5b83518110156117db576020818102858101820151908501909101516001600160a01b0388161561178d575f828152602081815260408083206001600160a01b038c16845290915290205481811015611767576040516303dee4c560e01b81526001600160a01b038a166004820152602481018290526044810183905260648101849052608401610790565b5f838152602081815260408083206001600160a01b038d16845290915290209082900390555b6001600160a01b038716156117d1575f828152602081815260408083206001600160a01b038b168452909152812080548392906117cb908490612962565b90915550505b50506001016116dc565b50825160010361185b5760208301515f906020840151909150856001600160a01b0316876001600160a01b0316846001600160a01b03167fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62858560405161184c929190918252602082015260400190565b60405180910390a45050610f13565b836001600160a01b0316856001600160a01b0316826001600160a01b03167f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb86866040516118aa929190612b4e565b60405180910390a45050505050565b6001600160a01b0384163b156107a65760405163f23a6e6160e01b81526001600160a01b0385169063f23a6e61906118fd9089908990889088908890600401612b7b565b6020604051808303815f875af1925050508015611937575060408051601f3d908101601f1916820190925261193491810190612bc2565b60015b61199e573d808015611964576040519150601f19603f3d011682016040523d82523d5f602084013e611969565b606091505b5080515f0361199657604051632bfa23e760e11b81526001600160a01b0386166004820152602401610790565b805181602001fd5b6001600160e01b0319811663f23a6e6160e01b14610be157604051632bfa23e760e11b81526001600160a01b0386166004820152602401610790565b6001600160a01b0384163b156107a65760405163bc197c8160e01b81526001600160a01b0385169063bc197c8190611a1e9089908990889088908890600401612bdd565b6020604051808303815f875af1925050508015611a58575060408051601f3d908101601f19168201909252611a5591810190612bc2565b60015b611a85573d808015611964576040519150601f19603f3d011682016040523d82523d5f602084013e611969565b6001600160e01b0319811663bc197c8160e01b14610be157604051632bfa23e760e11b81526001600160a01b0386166004820152602401610790565b6040515f90611ae0908390600690602001918252602082015260400190565b604051602081830303815290604052805190602001209050919050565b5f807f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663f3cd914c85856040518363ffffffff1660e01b8152600401611b4d929190612c3f565b6020604051808303815f875af1158015611b69573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190611b8d9190612adf565b835190915015611c0e575f611ba28260801d90565b600f0b1215611bd357611bd3611bbb6020860186612975565b611bc58360801d90565b611bce90612cf2565b611c6d565b5f611bde82600f0b90565b600f0b1315611c0957611c09611bfa6040860160208701612975565b611c0483600f0b90565b611db0565b610ac7565b5f611c1982600f0b90565b600f0b1215611c3f57611c3f611c356040860160208701612975565b611bc583600f0b90565b5f611c4a8260801d90565b600f0b1315610ac757610ac7611c636020860186612975565b611c048360801d90565b604051632961046560e21b81526001600160a01b0383811660048301527f0000000000000000000000000000000000000000000000000000000000000000169063a5841194906024015f604051808303815f87803b158015611ccd575f80fd5b505af1158015611cdf573d5f803e3d5ffd5b50611d2a925050506001600160a01b0383167f00000000000000000000000000000000000000000000000000000000000000006fffffffffffffffffffffffffffffffff84166110c4565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166311da60b46040518163ffffffff1660e01b81526004016020604051808303815f875af1158015611d87573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190611dab9190612adf565b505050565b604051630b0d9c0960e01b81526001600160a01b0383811660048301523060248301526fffffffffffffffffffffffffffffffff831660448301527f00000000000000000000000000000000000000000000000000000000000000001690630b0d9c09906064015f604051808303815f87803b158015611e2e575f80fd5b505af11580156107a6573d5f803e3d5ffd5b6001600160a01b0381168114611e54575f80fd5b50565b5f8060408385031215611e68575f80fd5b8235611e7381611e40565b946020939093013593505050565b6001600160e01b031981168114611e54575f80fd5b5f60208284031215611ea6575f80fd5b8135610ac781611e81565b5f60208284031215611ec1575f80fd5b5035919050565b5f81518084528060208401602086015e5f602082860101526020601f19601f83011685010191505092915050565b602081525f610ac76020830184611ec8565b5f60a08284031215611f18575f80fd5b50919050565b5f60808284031215611f18575f80fd5b5f8083601f840112611f3e575f80fd5b50813567ffffffffffffffff811115611f55575f80fd5b6020830191508360208285010111156113a5575f80fd5b5f805f805f6101608688031215611f81575f80fd5b8535611f8c81611e40565b9450611f9b8760208801611f08565b9350611faa8760c08801611f1e565b925061014086013567ffffffffffffffff811115611fc6575f80fd5b611fd288828901611f2e565b969995985093965092949392505050565b634e487b7160e01b5f52604160045260245ffd5b604051601f8201601f1916810167ffffffffffffffff8111828210171561202057612020611fe3565b604052919050565b5f67ffffffffffffffff82111561204157612041611fe3565b5060051b60200190565b5f82601f83011261205a575f80fd5b813561206d61206882612028565b611ff7565b8082825260208201915060208360051b86010192508583111561208e575f80fd5b602085015b838110156120ab578035835260209283019201612093565b5095945050505050565b5f82601f8301126120c4575f80fd5b813567ffffffffffffffff8111156120de576120de611fe3565b6120f1601f8201601f1916602001611ff7565b818152846020838601011115612105575f80fd5b816020850160208301375f918101602001919091529392505050565b5f805f805f60a08688031215612135575f80fd5b853561214081611e40565b9450602086013561215081611e40565b9350604086013567ffffffffffffffff81111561216b575f80fd5b6121778882890161204b565b935050606086013567ffffffffffffffff811115612193575f80fd5b61219f8882890161204b565b925050608086013567ffffffffffffffff8111156121bb575f80fd5b6121c7888289016120b5565b9150509295509295909350565b5f80604083850312156121e5575f80fd5b823567ffffffffffffffff8111156121fb575f80fd5b8301601f8101851361220b575f80fd5b803561221961206882612028565b8082825260208201915060208360051b85010192508783111561223a575f80fd5b6020840193505b8284101561226557833561225481611e40565b825260209384019390910190612241565b9450505050602083013567ffffffffffffffff811115612283575f80fd5b61228f8582860161204b565b9150509250929050565b5f8151808452602084019350602083015f5b828110156122c95781518652602095860195909101906001016122ab565b5093949350505050565b602081525f610ac76020830184612299565b5f60608284031215611f18575f80fd5b5f805f805f610140868803121561230a575f80fd5b853561231581611e40565b94506123248760208801611f08565b93506123338760c088016122e5565b925061012086013567ffffffffffffffff811115611fc6575f80fd5b5f805f805f805f6101a0888a031215612366575f80fd5b873561237181611e40565b96506123808960208a01611f08565b955061238f8960c08a01611f1e565b94506101408801359350610160880135925061018088013567ffffffffffffffff8111156123bb575f80fd5b6123c78a828b01611f2e565b989b979a50959850939692959293505050565b8035600281900b81146123eb575f80fd5b919050565b5f805f806101008587031215612404575f80fd5b843561240f81611e40565b935061241e8660208701611f08565b925060c085013561242e81611e40565b915061243c60e086016123da565b905092959194509250565b8015158114611e54575f80fd5b5f805f806101008587031215612468575f80fd5b6124728686611f08565b935061248060a086016123da565b925060c085013561249081612447565b9396929550929360e00135925050565b5f80602083850312156124b1575f80fd5b823567ffffffffffffffff8111156124c7575f80fd5b6124d385828601611f2e565b90969095509350505050565b5f805f60e084860312156124f1575f80fd5b6124fb8585611f08565b925061250960a085016123da565b915060c084013561251981612447565b809150509250925092565b5f8060408385031215612535575f80fd5b823561254081611e40565b9150602083013561255081612447565b809150509250929050565b5f805f6060848603121561256d575f80fd5b8335925061257d602085016123da565b9150604084013561251981612447565b5f805f805f8061016087890312156125a3575f80fd5b86356125ae81611e40565b95506125bd8860208901611f08565b94506125cc8860c089016122e5565b9350610120870135925061014087013567ffffffffffffffff8111156125f0575f80fd5b6125fc89828a01611f2e565b979a9699509497509295939492505050565b5f805f805f806101208789031215612624575f80fd5b863561262f81611e40565b955061263e8860208901611f08565b945060c0870135935060e0870135925061010087013567ffffffffffffffff8111156125f0575f80fd5b8151151581526101c081016020830151612686602084018215159052565b50604083015161269a604084018215159052565b5060608301516126ae606084018215159052565b5060808301516126c2608084018215159052565b5060a08301516126d660a084018215159052565b5060c08301516126ea60c084018215159052565b5060e08301516126fe60e084018215159052565b5061010083015161271461010084018215159052565b5061012083015161272a61012084018215159052565b5061014083015161274061014084018215159052565b5061016083015161275661016084018215159052565b5061018083015161276c61018084018215159052565b506101a08301516127826101a084018215159052565b5092915050565b5f805f60e0848603121561279b575f80fd5b83356127a681611e40565b92506127b58560208601611f08565b915060c084013561251981611e40565b5f80604083850312156127d6575f80fd5b82356127e181611e40565b9150602083013561255081611e40565b5f805f805f60a08688031215612805575f80fd5b853561281081611e40565b9450602086013561282081611e40565b93506040860135925060608601359150608086013567ffffffffffffffff8111156121bb575f80fd5b600181811c9082168061285d57607f821691505b602082108103611f1857634e487b7160e01b5f52602260045260245ffd5b634e487b7160e01b5f52603260045260245ffd5b803562ffffff811681146123eb575f80fd5b5f60a08284031280156128b2575f80fd5b5060405160a0810167ffffffffffffffff811182821017156128d6576128d6611fe3565b60405282356128e481611e40565b815260208301356128f481611e40565b60208201526129056040840161288f565b6040820152612916606084016123da565b6060820152608083013561292981611e40565b60808201529392505050565b5f60208284031215612945575f80fd5b610ac7826123da565b634e487b7160e01b5f52601160045260245ffd5b808201808211156106235761062361294e565b5f60208284031215612985575f80fd5b8135610ac781611e40565b5f602082840312156129a0575f80fd5b8151610ac781612447565b818103818111156106235761062361294e565b5f602082840312156129ce575f80fd5b8135610ac781612447565b634e487b7160e01b5f52601260045260245ffd5b5f8160020b8360020b80612a0357612a036129d9565b627fffff1982145f1982141615612a1c57612a1c61294e565b90059392505050565b5f8260020b80612a3757612a376129d9565b808360020b0791505092915050565b5f8160020b627fffff198103612a5e57612a5e61294e565b5f190192915050565b5f8260020b8260020b028060020b91508082146127825761278261294e565b818382375f9101908152919050565b600281810b9083900b01627fffff8113627fffff19821217156106235761062361294e565b600282810b9082900b03627fffff198112627fffff821317156106235761062361294e565b5f60208284031215612aef575f80fd5b5051919050565b5f600160ff1b8201612b0a57612b0a61294e565b505f0390565b6001600160a01b0382811682821603908111156106235761062361294e565b6001600160a01b0381811683821601908111156106235761062361294e565b604081525f612b606040830185612299565b8281036020840152612b728185612299565b95945050505050565b6001600160a01b03861681526001600160a01b038516602082015283604082015282606082015260a060808201525f612bb760a0830184611ec8565b979650505050505050565b5f60208284031215612bd2575f80fd5b8151610ac781611e81565b6001600160a01b03861681526001600160a01b038516602082015260a060408201525f612c0d60a0830186612299565b8281036060840152612c1f8186612299565b90508281036080840152612c338185611ec8565b98975050505050505050565b5f8335612c4b81611e40565b6001600160a01b031682526020840135612c6481611e40565b6001600160a01b0316602083015262ffffff612c826040860161288f565b166040830152612c94606085016123da565b60020b60608301526080840135612caa81611e40565b6001600160a01b0390811660808401528351151560a0840152602084015160c084015260408401511660e0830152610120610100830152610f6261012083015f815260200190565b5f81600f0b6f7fffffffffffffffffffffffffffffff198103612d1757612d1761294e565b5f039291505056fea26469706673582212208f0cfd1f6d1cb082fe0febb0d2edef78f2d7058538522ee0606c72040e25b85364736f6c634300081a0033",
        "sourceMap": "843:15216:109:-:0;;;1611:112;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;451:26:104;;;;1715:4:109;1697:8;854:25:106::1;874:4;854:19;:25::i;:::-;-1:-1:-1::0;1293:13:27;1301:4;1293:7;:13::i;:::-;1251:62;1611:112:109;;843:15216;;1842:142:106;1919:58;1949:5;1956:20;843:15216:109;;;;;;;;-1:-1:-1;843:15216:109;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1959:630:109;;;;;;;;-1:-1:-1;1959:630:109;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1808:788;1956:20:106;1919:29;:58::i;:::-;1842:142;:::o;10282:86:27:-;10348:4;:13;10355:6;10348:4;:13;:::i;:::-;;10282:86;:::o;3584:1599:65:-;3703:28;;:74;;1319:7;16358:29;;:34;;3703:74;;;:166;;-1:-1:-1;3797:27:65;;;;:72;;1382:7;16358:29;;:34;;3797:72;;3703:166;:265;;;-1:-1:-1;3889:30:65;;;;:79;;1450:7;16358:29;;:34;;3889:79;;3703:265;:362;;;-1:-1:-1;3988:29:65;;;;:77;;1516:7;16358:29;;:34;;3988:77;;3703:362;:467;;;-1:-1:-1;4085:33:65;;;;:85;;1587:6;16358:29;;:34;;4085:85;;3703:467;:570;;;-1:-1:-1;4190:32:65;;;;:83;;1655:6;16358:29;;:34;;4190:83;;3703:570;:652;;;-1:-1:-1;4293:22:65;;;;:62;;1713:6;16358:29;;:34;;4293:62;;3703:652;:732;;;-1:-1:-1;4375:21:65;;;;:60;;1769:6;16358:29;;:34;;4375:60;;3703:732;:818;;;-1:-1:-1;4455:24:65;;;;:66;;1829:6;16358:29;;:34;;4455:66;;3703:818;:902;;;-1:-1:-1;4541:23:65;;;;:64;;1887:6;16358:29;;:34;;4541:64;;3703:902;:1009;;;-1:-1:-1;4625:33:65;;;;:87;;1959:6;16358:29;;:34;;4625:87;;3703:1009;:1114;;;-1:-1:-1;4732:32:65;;;;:85;;2029:6;16358:29;;:34;;4732:85;;3703:1114;:1236;;;-1:-1:-1;4837:40:65;;;;:102;;2108:6;16358:29;;:34;;4837:102;;3703:1236;:1384;;;-1:-1:-1;4959:43:65;;;;:128;;2190:6;16358:29;;:34;;4959:128;;3703:1384;3686:1491;;;5112:54;-1:-1:-1;;;5160:4:65;986:8:61;983:1;976:19;-1:-1:-1;;;;;1025:4:61;1021:53;1015:4;1008:67;1098:4;1095:1;1088:15;14:127:113;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:1124;257:6;265;318:2;306:9;297:7;293:23;289:32;286:52;;;334:1;331;324:12;286:52;360:16;;-1:-1:-1;;;;;405:31:113;;395:42;;385:70;;451:1;448;441:12;385:70;523:2;508:18;;502:25;474:5;;-1:-1:-1;;;;;;539:30:113;;536:50;;;582:1;579;572:12;536:50;605:22;;658:4;650:13;;646:27;-1:-1:-1;636:55:113;;687:1;684;677:12;636:55;714:9;;-1:-1:-1;;;;;735:30:113;;732:56;;;768:18;;:::i;:::-;817:2;811:9;909:2;871:17;;-1:-1:-1;;867:31:113;;;900:2;863:40;859:54;847:67;;-1:-1:-1;;;;;929:34:113;;965:22;;;926:62;923:88;;;991:18;;:::i;:::-;1027:2;1020:22;1051;;;1092:15;;;1109:2;1088:24;1085:37;-1:-1:-1;1082:57:113;;;1135:1;1132;1125:12;1082:57;1184:6;1179:2;1175;1171:11;1166:2;1158:6;1154:15;1148:43;1237:1;1232:2;1223:6;1215;1211:19;1207:28;1200:39;1258:6;1248:16;;;;;146:1124;;;;;:::o;1275:380::-;1354:1;1350:12;;;;1397;;;1418:61;;1472:4;1464:6;1460:17;1450:27;;1418:61;1525:2;1517:6;1514:14;1494:18;1491:38;1488:161;;1571:10;1566:3;1562:20;1559:1;1552:31;1606:4;1603:1;1596:15;1634:4;1631:1;1624:15;1488:161;;1275:380;;;:::o;1786:518::-;1888:2;1883:3;1880:11;1877:421;;;1924:5;1921:1;1914:16;1968:4;1965:1;1955:18;2038:2;2026:10;2022:19;2019:1;2015:27;2009:4;2005:38;2074:4;2062:10;2059:20;2056:47;;;-1:-1:-1;2097:4:113;2056:47;2152:2;2147:3;2143:12;2140:1;2136:20;2130:4;2126:31;2116:41;;2207:81;2225:2;2218:5;2215:13;2207:81;;;2284:1;2270:16;;2251:1;2240:13;2207:81;;;2211:3;;1877:421;1786:518;;;:::o;2480:1299::-;2600:10;;-1:-1:-1;;;;;2622:30:113;;2619:56;;;2655:18;;:::i;:::-;2684:97;2774:6;2734:38;2766:4;2760:11;2734:38;:::i;:::-;2728:4;2684:97;:::i;:::-;2830:4;2861:2;2850:14;;2878:1;2873:649;;;;3566:1;3583:6;3580:89;;;-1:-1:-1;3635:19:113;;;3629:26;3580:89;-1:-1:-1;;2437:1:113;2433:11;;;2429:24;2425:29;2415:40;2461:1;2457:11;;;2412:57;3682:81;;2843:930;;2873:649;1733:1;1726:14;;;1770:4;1757:18;;-1:-1:-1;;2909:20:113;;;3027:222;3041:7;3038:1;3035:14;3027:222;;;3123:19;;;3117:26;3102:42;;3230:4;3215:20;;;;3183:1;3171:14;;;;3057:12;3027:222;;;3031:3;3277:6;3268:7;3265:19;3262:201;;;3338:19;;;3332:26;-1:-1:-1;;3421:1:113;3417:14;;;3433:3;3413:24;3409:37;3405:42;3390:58;3375:74;;3262:201;-1:-1:-1;;;;3509:1:113;3493:14;;;3489:22;3476:36;;-1:-1:-1;2480:1299:113:o;:::-;843:15216:109;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;",
        "linkReferences": {}
    },
    "deployedBytecode": {
        "object": "0x608060405234801561000f575f80fd5b50600436106101c5575f3560e01c8063a0dc3f99116100fe578063dc4c90d31161009e578063e4cbfea51161006e578063e4cbfea51461057f578063e985e9c5146105a1578063f242432a146105dc578063fa59cb0c146105ef575f80fd5b8063dc4c90d31461051f578063dc98354e1461055e578063dd02c9641461056c578063e1b4af691461041a575f80fd5b8063b47b2fb1116100d9578063b47b2fb1146103c5578063b5a33914146103fb578063b6a8b0fa1461041a578063c4e833ce14610428575f80fd5b8063a0dc3f991461036f578063a22cb46514610382578063a2dc31b214610395575f80fd5b80634e1273f4116101695780636fe7e6eb116101445780636fe7e6eb146103235780637e8941af1461033657806391dd73461461035c5780639f063efc146102f0575f80fd5b80634e1273f414610292578063575e24b4146102b25780636c2bbe7e146102f0575f80fd5b806321d0ee70116101a457806321d0ee7014610232578063259982e5146102325780632eb2c2d61461025e5780633bb76cc114610273575f80fd5b8062fdd58e146101c957806301ffc9a7146101ef5780630e89341c14610212575b5f80fd5b6101dc6101d7366004611e57565b610602565b6040519081526020015b60405180910390f35b6102026101fd366004611e96565b610629565b60405190151581526020016101e6565b610225610220366004611eb1565b610678565b6040516101e69190611ef6565b610245610240366004611f6c565b61070a565b6040516001600160e01b031990911681526020016101e6565b61027161026c366004612121565b610724565b005b6101dc610281366004611eb1565b60066020525f908152604090205481565b6102a56102a03660046121d4565b6107ae565b6040516101e691906122d3565b6102c56102c03660046122f5565b610879565b604080516001600160e01b03199094168452602084019290925262ffffff16908201526060016101e6565b6103036102fe36600461234f565b610895565b604080516001600160e01b031990931683526020830191909152016101e6565b6102456103313660046123f0565b6108b0565b610349610344366004612454565b610904565b60405160029190910b81526020016101e6565b61022561036a3660046124a0565b610a72565b61027161037d3660046124df565b610ace565b610271610390366004612524565b610bea565b6101dc6103a336600461255b565b600460209081525f938452604080852082529284528284209052825290205481565b6103d86103d336600461258d565b610bf9565b604080516001600160e01b03199093168352600f9190910b6020830152016101e6565b6101dc610409366004611eb1565b60056020525f908152604090205481565b61024561024036600461260e565b610512604080516101c0810182525f80825260208201819052918101829052606081018290526080810182905260a0810182905260c0810182905260e08101829052610100810182905261012081018290526101408101829052610160810182905261018081018290526101a081019190915250604080516101c0810182525f808252600160208301819052928201819052606082018190526080820181905260a0820181905260c0820181905260e0820192909252610100810182905261012081018290526101408101829052610160810182905261018081018290526101a081019190915290565b6040516101e69190612668565b6105467f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b0390911681526020016101e6565b610245610240366004612789565b61027161057a366004612454565b610c9f565b61034961058d366004611eb1565b60036020525f908152604090205460020b81565b6102026105af3660046127c5565b6001600160a01b039182165f90815260016020908152604080832093909416825291909152205460ff1690565b6102716105ea3660046127f1565b610de5565b6101dc6105fd3660046124df565b610e62565b5f818152602081815260408083206001600160a01b03861684529091529020545b92915050565b5f6001600160e01b03198216636cdb3d1360e11b148061065957506001600160e01b031982166303a24d0760e21b145b8061062357506301ffc9a760e01b6001600160e01b0319831614610623565b60606002805461068790612849565b80601f01602080910402602001604051908101604052809291908181526020018280546106b390612849565b80156106fe5780601f106106d5576101008083540402835291602001916106fe565b820191905f5260205f20905b8154815290600101906020018083116106e157829003601f168201915b50505050509050919050565b5f604051630a85dc2960e01b815260040160405180910390fd5b336001600160a01b038616811480159061076357506001600160a01b038087165f9081526001602090815260408083209385168352929052205460ff16155b156107995760405163711bec9160e11b81526001600160a01b038083166004830152871660248201526044015b60405180910390fd5b6107a68686868686610eb5565b505050505050565b606081518351146107df5781518351604051635b05999160e01b815260048101929092526024820152604401610790565b5f835167ffffffffffffffff8111156107fa576107fa611fe3565b604051908082528060200260200182016040528015610823578160200160208202803683370190505b5090505f5b84518110156108715760208082028601015161084c90602080840287010151610602565b82828151811061085e5761085e61287b565b6020908102919091010152600101610828565b509392505050565b5f805f604051630a85dc2960e01b815260040160405180910390fd5b5f80604051630a85dc2960e01b815260040160405180910390fd5b5f816003826108ce6108c7368990038901896128a1565b60a0902090565b815260208101919091526040015f20805462ffffff191662ffffff9290921691909117905550636fe7e6eb60e01b949350505050565b5f8061091f8561091a6080890160608a01612935565b610f1a565b90508260045f6109376108c7368b90038b018b6128a1565b815260208082019290925260409081015f908120600286900b82528352818120881515825290925281208054909190610971908490612962565b909155505f9050610983878387610e62565b90508360055f8381526020019081526020015f205f8282546109a59190612962565b925050819055506109c633828660405180602001604052805f815250610f6a565b5f856109e1576109dc6040890160208a01612975565b6109ee565b6109ee6020890189612975565b6040516323b872dd60e01b8152336004820152306024820152604481018790529091506001600160a01b038216906323b872dd906064016020604051808303815f875af1158015610a41573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610a659190612990565b5091979650505050505050565b6060336001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614610abd5760405163570c108560e11b815260040160405180910390fd5b610ac78383610fc5565b9392505050565b5f610ae38361091a6080870160608801612935565b90505f610af1858385610e62565b90505f610afe3383610602565b9050805f03610b205760405163af61069360e01b815260040160405180910390fd5b8060045f610b366108c7368b90038b018b6128a1565b815260208082019290925260409081015f908120600288900b82528352818120881515825290925281208054909190610b709084906129ab565b90915550505f8281526005602052604081208054839290610b929084906129ab565b90915550610ba3905033838361105e565b5f84610bbe57610bb96040880160208901612975565b610bcb565b610bcb6020880188612975565b9050610be16001600160a01b03821633846110c4565b50505050505050565b610bf5338383611160565b5050565b5f80306001600160a01b03891603610c1c575063b47b2fb160e01b90505f610c94565b60015f5b8115610c4757610c3d89610c3760208b018b6129be565b156111f4565b9092509050610c20565b8060035f610c5d6108c7368e90038e018e6128a1565b815260208101919091526040015f908120805462ffffff191662ffffff939093169290921790915563b47b2fb160e01b9450925050505b965096945050505050565b5f610cb48461091a6080880160608901612935565b90505f610cc2868386610e62565b5f8181526006602052604081205491925003610cf1576040516312d37ee560e31b815260040160405180910390fd5b5f610cfc3383610602565b905083811015610d1f57604051639378648960e01b815260040160405180910390fd5b5f8281526006602090815260408083205460059092528220549091610d458784846113ac565b90508060065f8781526020019081526020015f205f828254610d6791906129ab565b90915550505f8581526005602052604081208054899290610d899084906129ab565b90915550610d9a905033868961105e565b5f88610db257610dad60208c018c612975565b610dc2565b610dc260408c0160208d01612975565b9050610dd86001600160a01b03821633846110c4565b5050505050505050505050565b336001600160a01b0386168114801590610e2457506001600160a01b038087165f9081526001602090815260408083209385168352929052205460ff16155b15610e555760405163711bec9160e11b81526001600160a01b03808316600483015287166024820152604401610790565b6107a686868686866113c7565b5f610e756108c7368690038601866128a1565b604080516020810192909252600285900b90820152821515606082015260800160408051601f198184030181529190528051602090910120949350505050565b6001600160a01b038416610ede57604051632bfa23e760e11b81525f6004820152602401610790565b6001600160a01b038516610f0657604051626a0d4560e21b81525f6004820152602401610790565b610f138585858585611446565b5050505050565b5f80610f2683856129ed565b90505f8460020b128015610f455750610f3f8385612a25565b60020b15155b15610f585780610f5481612a46565b9150505b610f628382612a67565b949350505050565b6001600160a01b038416610f9357604051632bfa23e760e11b81525f6004820152602401610790565b604080516001808252602082018690528183019081526060820185905260808201909252906107a65f87848487611446565b60605f80306001600160a01b03168585604051610fe3929190612a86565b5f604051808303815f865af19150503d805f811461101c576040519150601f19603f3d011682016040523d82523d5f602084013e611021565b606091505b509150915081156110355791506106239050565b80515f03611056576040516314815f4760e31b815260040160405180910390fd5b805160208201fd5b6001600160a01b03831661108657604051626a0d4560e21b81525f6004820152602401610790565b604080516001808252602082018590528183019081526060820184905260a082019092525f60808201818152919291610f1391879185908590611446565b5f6001600160a01b0384166110f8575f805f8085875af19050806110f3576110f3638549db5960e01b84611499565b61115a565b60405163a9059cbb60e01b81526001600160a01b038416600482015282602482015260205f6044835f895af13d15601f3d1160015f511416171691505f81525f60208201525f6040820152508061115a5761115a632c4b17e760e21b85611499565b50505050565b6001600160a01b0382166111885760405162ced3e160e81b81525f6004820152602401610790565b6001600160a01b038381165f81815260016020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b5f808061123c61120c6108c7368890038801886128a1565b6001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016906114cc565b50509150505f60035f611259888036038101906108c791906128a1565b815260208101919091526040015f2054600290810b915082900b81121561131657805b8260020b8160020b13611310575f60048161129f6108c7368c90038c018c6128a1565b815260208082019290925260409081015f908120600286900b825283528181208a15158252909252902054905080156112ee576112de8883898461157e565b60018495509550505050506113a5565b506112ff6080880160608901612935565b6113099082612a95565b905061127c565b5061139e565b805b8260020b8160020b1261139c575f60048161133b6108c7368c90038c018c6128a1565b815260208082019290925260409081015f908120600286900b825283528181208a151582529092529020549050801561137a576112de8883898461157e565b5061138b6080880160608901612935565b6113959082612aba565b9050611318565b505b505f925090505b9250929050565b5f825f1904841183021582026113c0575f80fd5b5091020490565b6001600160a01b0384166113f057604051632bfa23e760e11b81525f6004820152602401610790565b6001600160a01b03851661141857604051626a0d4560e21b81525f6004820152602401610790565b60408051600180825260208201869052818301908152606082018590526080820190925290610be187878484875b611452858585856116aa565b6001600160a01b03841615610f13578251339060010361148b57602084810151908401516114848389898585896118b9565b50506107a6565b6107a68187878787876119da565b3d60405183815282600482015260406024820152816044820152815f606483013e602080601f8401040260640191508181fd5b5f805f805f6114da86611ac1565b604051631e2eaeaf60e01b8152600481018290529091505f906001600160a01b03891690631e2eaeaf90602401602060405180830381865afa158015611522573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906115469190612adf565b90506001600160a01b03811695508060a01c60020b945062ffffff8160b81c16935062ffffff8160d01c169250505092959194509250565b5f6115ee8560405180606001604052808615158152602001856115a090612af6565b8152602001866115ce576115c9600173fffd8963efd1fc6a506488495d951d5263988d26612b10565b6115de565b6115de6401000276a36001612b2f565b6001600160a01b03169052611afd565b90508160045f6116066108c7368a90038a018a6128a1565b815260208082019290925260409081015f908120600289900b825283528181208715158252909252812080549091906116409084906129ab565b909155505f9050611652868686610e62565b90505f8461166c576116648360801d90565b600f0b61167a565b61167683600f0b90565b600f0b5b90508060065f8481526020019081526020015f205f82825461169c9190612962565b909155505050505050505050565b80518251146116d95781518151604051635b05999160e01b815260048101929092526024820152604401610790565b335f5b83518110156117db576020818102858101820151908501909101516001600160a01b0388161561178d575f828152602081815260408083206001600160a01b038c16845290915290205481811015611767576040516303dee4c560e01b81526001600160a01b038a166004820152602481018290526044810183905260648101849052608401610790565b5f838152602081815260408083206001600160a01b038d16845290915290209082900390555b6001600160a01b038716156117d1575f828152602081815260408083206001600160a01b038b168452909152812080548392906117cb908490612962565b90915550505b50506001016116dc565b50825160010361185b5760208301515f906020840151909150856001600160a01b0316876001600160a01b0316846001600160a01b03167fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62858560405161184c929190918252602082015260400190565b60405180910390a45050610f13565b836001600160a01b0316856001600160a01b0316826001600160a01b03167f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb86866040516118aa929190612b4e565b60405180910390a45050505050565b6001600160a01b0384163b156107a65760405163f23a6e6160e01b81526001600160a01b0385169063f23a6e61906118fd9089908990889088908890600401612b7b565b6020604051808303815f875af1925050508015611937575060408051601f3d908101601f1916820190925261193491810190612bc2565b60015b61199e573d808015611964576040519150601f19603f3d011682016040523d82523d5f602084013e611969565b606091505b5080515f0361199657604051632bfa23e760e11b81526001600160a01b0386166004820152602401610790565b805181602001fd5b6001600160e01b0319811663f23a6e6160e01b14610be157604051632bfa23e760e11b81526001600160a01b0386166004820152602401610790565b6001600160a01b0384163b156107a65760405163bc197c8160e01b81526001600160a01b0385169063bc197c8190611a1e9089908990889088908890600401612bdd565b6020604051808303815f875af1925050508015611a58575060408051601f3d908101601f19168201909252611a5591810190612bc2565b60015b611a85573d808015611964576040519150601f19603f3d011682016040523d82523d5f602084013e611969565b6001600160e01b0319811663bc197c8160e01b14610be157604051632bfa23e760e11b81526001600160a01b0386166004820152602401610790565b6040515f90611ae0908390600690602001918252602082015260400190565b604051602081830303815290604052805190602001209050919050565b5f807f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663f3cd914c85856040518363ffffffff1660e01b8152600401611b4d929190612c3f565b6020604051808303815f875af1158015611b69573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190611b8d9190612adf565b835190915015611c0e575f611ba28260801d90565b600f0b1215611bd357611bd3611bbb6020860186612975565b611bc58360801d90565b611bce90612cf2565b611c6d565b5f611bde82600f0b90565b600f0b1315611c0957611c09611bfa6040860160208701612975565b611c0483600f0b90565b611db0565b610ac7565b5f611c1982600f0b90565b600f0b1215611c3f57611c3f611c356040860160208701612975565b611bc583600f0b90565b5f611c4a8260801d90565b600f0b1315610ac757610ac7611c636020860186612975565b611c048360801d90565b604051632961046560e21b81526001600160a01b0383811660048301527f0000000000000000000000000000000000000000000000000000000000000000169063a5841194906024015f604051808303815f87803b158015611ccd575f80fd5b505af1158015611cdf573d5f803e3d5ffd5b50611d2a925050506001600160a01b0383167f00000000000000000000000000000000000000000000000000000000000000006fffffffffffffffffffffffffffffffff84166110c4565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166311da60b46040518163ffffffff1660e01b81526004016020604051808303815f875af1158015611d87573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190611dab9190612adf565b505050565b604051630b0d9c0960e01b81526001600160a01b0383811660048301523060248301526fffffffffffffffffffffffffffffffff831660448301527f00000000000000000000000000000000000000000000000000000000000000001690630b0d9c09906064015f604051808303815f87803b158015611e2e575f80fd5b505af11580156107a6573d5f803e3d5ffd5b6001600160a01b0381168114611e54575f80fd5b50565b5f8060408385031215611e68575f80fd5b8235611e7381611e40565b946020939093013593505050565b6001600160e01b031981168114611e54575f80fd5b5f60208284031215611ea6575f80fd5b8135610ac781611e81565b5f60208284031215611ec1575f80fd5b5035919050565b5f81518084528060208401602086015e5f602082860101526020601f19601f83011685010191505092915050565b602081525f610ac76020830184611ec8565b5f60a08284031215611f18575f80fd5b50919050565b5f60808284031215611f18575f80fd5b5f8083601f840112611f3e575f80fd5b50813567ffffffffffffffff811115611f55575f80fd5b6020830191508360208285010111156113a5575f80fd5b5f805f805f6101608688031215611f81575f80fd5b8535611f8c81611e40565b9450611f9b8760208801611f08565b9350611faa8760c08801611f1e565b925061014086013567ffffffffffffffff811115611fc6575f80fd5b611fd288828901611f2e565b969995985093965092949392505050565b634e487b7160e01b5f52604160045260245ffd5b604051601f8201601f1916810167ffffffffffffffff8111828210171561202057612020611fe3565b604052919050565b5f67ffffffffffffffff82111561204157612041611fe3565b5060051b60200190565b5f82601f83011261205a575f80fd5b813561206d61206882612028565b611ff7565b8082825260208201915060208360051b86010192508583111561208e575f80fd5b602085015b838110156120ab578035835260209283019201612093565b5095945050505050565b5f82601f8301126120c4575f80fd5b813567ffffffffffffffff8111156120de576120de611fe3565b6120f1601f8201601f1916602001611ff7565b818152846020838601011115612105575f80fd5b816020850160208301375f918101602001919091529392505050565b5f805f805f60a08688031215612135575f80fd5b853561214081611e40565b9450602086013561215081611e40565b9350604086013567ffffffffffffffff81111561216b575f80fd5b6121778882890161204b565b935050606086013567ffffffffffffffff811115612193575f80fd5b61219f8882890161204b565b925050608086013567ffffffffffffffff8111156121bb575f80fd5b6121c7888289016120b5565b9150509295509295909350565b5f80604083850312156121e5575f80fd5b823567ffffffffffffffff8111156121fb575f80fd5b8301601f8101851361220b575f80fd5b803561221961206882612028565b8082825260208201915060208360051b85010192508783111561223a575f80fd5b6020840193505b8284101561226557833561225481611e40565b825260209384019390910190612241565b9450505050602083013567ffffffffffffffff811115612283575f80fd5b61228f8582860161204b565b9150509250929050565b5f8151808452602084019350602083015f5b828110156122c95781518652602095860195909101906001016122ab565b5093949350505050565b602081525f610ac76020830184612299565b5f60608284031215611f18575f80fd5b5f805f805f610140868803121561230a575f80fd5b853561231581611e40565b94506123248760208801611f08565b93506123338760c088016122e5565b925061012086013567ffffffffffffffff811115611fc6575f80fd5b5f805f805f805f6101a0888a031215612366575f80fd5b873561237181611e40565b96506123808960208a01611f08565b955061238f8960c08a01611f1e565b94506101408801359350610160880135925061018088013567ffffffffffffffff8111156123bb575f80fd5b6123c78a828b01611f2e565b989b979a50959850939692959293505050565b8035600281900b81146123eb575f80fd5b919050565b5f805f806101008587031215612404575f80fd5b843561240f81611e40565b935061241e8660208701611f08565b925060c085013561242e81611e40565b915061243c60e086016123da565b905092959194509250565b8015158114611e54575f80fd5b5f805f806101008587031215612468575f80fd5b6124728686611f08565b935061248060a086016123da565b925060c085013561249081612447565b9396929550929360e00135925050565b5f80602083850312156124b1575f80fd5b823567ffffffffffffffff8111156124c7575f80fd5b6124d385828601611f2e565b90969095509350505050565b5f805f60e084860312156124f1575f80fd5b6124fb8585611f08565b925061250960a085016123da565b915060c084013561251981612447565b809150509250925092565b5f8060408385031215612535575f80fd5b823561254081611e40565b9150602083013561255081612447565b809150509250929050565b5f805f6060848603121561256d575f80fd5b8335925061257d602085016123da565b9150604084013561251981612447565b5f805f805f8061016087890312156125a3575f80fd5b86356125ae81611e40565b95506125bd8860208901611f08565b94506125cc8860c089016122e5565b9350610120870135925061014087013567ffffffffffffffff8111156125f0575f80fd5b6125fc89828a01611f2e565b979a9699509497509295939492505050565b5f805f805f806101208789031215612624575f80fd5b863561262f81611e40565b955061263e8860208901611f08565b945060c0870135935060e0870135925061010087013567ffffffffffffffff8111156125f0575f80fd5b8151151581526101c081016020830151612686602084018215159052565b50604083015161269a604084018215159052565b5060608301516126ae606084018215159052565b5060808301516126c2608084018215159052565b5060a08301516126d660a084018215159052565b5060c08301516126ea60c084018215159052565b5060e08301516126fe60e084018215159052565b5061010083015161271461010084018215159052565b5061012083015161272a61012084018215159052565b5061014083015161274061014084018215159052565b5061016083015161275661016084018215159052565b5061018083015161276c61018084018215159052565b506101a08301516127826101a084018215159052565b5092915050565b5f805f60e0848603121561279b575f80fd5b83356127a681611e40565b92506127b58560208601611f08565b915060c084013561251981611e40565b5f80604083850312156127d6575f80fd5b82356127e181611e40565b9150602083013561255081611e40565b5f805f805f60a08688031215612805575f80fd5b853561281081611e40565b9450602086013561282081611e40565b93506040860135925060608601359150608086013567ffffffffffffffff8111156121bb575f80fd5b600181811c9082168061285d57607f821691505b602082108103611f1857634e487b7160e01b5f52602260045260245ffd5b634e487b7160e01b5f52603260045260245ffd5b803562ffffff811681146123eb575f80fd5b5f60a08284031280156128b2575f80fd5b5060405160a0810167ffffffffffffffff811182821017156128d6576128d6611fe3565b60405282356128e481611e40565b815260208301356128f481611e40565b60208201526129056040840161288f565b6040820152612916606084016123da565b6060820152608083013561292981611e40565b60808201529392505050565b5f60208284031215612945575f80fd5b610ac7826123da565b634e487b7160e01b5f52601160045260245ffd5b808201808211156106235761062361294e565b5f60208284031215612985575f80fd5b8135610ac781611e40565b5f602082840312156129a0575f80fd5b8151610ac781612447565b818103818111156106235761062361294e565b5f602082840312156129ce575f80fd5b8135610ac781612447565b634e487b7160e01b5f52601260045260245ffd5b5f8160020b8360020b80612a0357612a036129d9565b627fffff1982145f1982141615612a1c57612a1c61294e565b90059392505050565b5f8260020b80612a3757612a376129d9565b808360020b0791505092915050565b5f8160020b627fffff198103612a5e57612a5e61294e565b5f190192915050565b5f8260020b8260020b028060020b91508082146127825761278261294e565b818382375f9101908152919050565b600281810b9083900b01627fffff8113627fffff19821217156106235761062361294e565b600282810b9082900b03627fffff198112627fffff821317156106235761062361294e565b5f60208284031215612aef575f80fd5b5051919050565b5f600160ff1b8201612b0a57612b0a61294e565b505f0390565b6001600160a01b0382811682821603908111156106235761062361294e565b6001600160a01b0381811683821601908111156106235761062361294e565b604081525f612b606040830185612299565b8281036020840152612b728185612299565b95945050505050565b6001600160a01b03861681526001600160a01b038516602082015283604082015282606082015260a060808201525f612bb760a0830184611ec8565b979650505050505050565b5f60208284031215612bd2575f80fd5b8151610ac781611e81565b6001600160a01b03861681526001600160a01b038516602082015260a060408201525f612c0d60a0830186612299565b8281036060840152612c1f8186612299565b90508281036080840152612c338185611ec8565b98975050505050505050565b5f8335612c4b81611e40565b6001600160a01b031682526020840135612c6481611e40565b6001600160a01b0316602083015262ffffff612c826040860161288f565b166040830152612c94606085016123da565b60020b60608301526080840135612caa81611e40565b6001600160a01b0390811660808401528351151560a0840152602084015160c084015260408401511660e0830152610120610100830152610f6261012083015f815260200190565b5f81600f0b6f7fffffffffffffffffffffffffffffff198103612d1757612d1761294e565b5f039291505056fea26469706673582212208f0cfd1f6d1cb082fe0febb0d2edef78f2d7058538522ee0606c72040e25b85364736f6c634300081a0033",
        "sourceMap": "843:15216:109:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2247:132:27;;;;;;:::i;:::-;;:::i;:::-;;;691:25:113;;;679:2;664:18;2247:132:27;;;;;;;;1380:305;;;;;;:::i;:::-;;:::i;:::-;;;1374:14:113;;1367:22;1349:41;;1337:2;1322:18;1380:305:27;1209:187:113;2084:103:27;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;3062:235:106:-;;;;;;:::i;:::-;;:::i;:::-;;;-1:-1:-1;;;;;;3977:33:113;;;3959:52;;3947:2;3932:18;3062:235:106;3815:202:113;4014:429:27;;;;;;:::i;:::-;;:::i;:::-;;11511:91:109;;;;;;:::i;:::-;;;;;;;;;;;;;;2536:552:27;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;3977:228:106:-;;;;;;:::i;:::-;;:::i;:::-;;;;-1:-1:-1;;;;;;10138:33:113;;;10120:52;;10203:2;10188:18;;10181:34;;;;10263:8;10251:21;10231:18;;;10224:49;10108:2;10093:18;3977:228:106;9886:393:113;3652:292:106;;;;;;:::i;:::-;;:::i;:::-;;;;-1:-1:-1;;;;;;11651:33:113;;;11633:52;;11716:2;11701:18;;11694:34;;;;11606:18;3652:292:106;11428:306:113;2692:259:109;;;;;;:::i;:::-;;:::i;9066:1097::-;;;;;;:::i;:::-;;:::i;:::-;;;13358:1:113;13347:21;;;;13329:40;;13317:2;13302:18;9066:1097:109;13187:188:113;1018:138:105;;;;;;:::i;:::-;;:::i;10398:1107:109:-;;;;;;:::i;:::-;;:::i;3156:144:27:-;;;;;;:::i;:::-;;:::i;10169:133:109:-;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2957:1530;;;;;;:::i;:::-;;:::i;:::-;;;;-1:-1:-1;;;;;;16469:33:113;;;16451:52;;16550:2;16539:22;;;;16534:2;16519:18;;16512:50;16424:18;2957:1530:109;16281:287:113;10308:84:109;;;;;;:::i;:::-;;;;;;;;;;;;;;4495:189:106;;;;;;:::i;1808:788:109:-;;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1959:630:109;;;;;;;;-1:-1:-1;1959:630:109;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1808:788;;;;;;;;:::i;354:41:104:-;;;;;;;;-1:-1:-1;;;;;19485:55:113;;;19467:74;;19455:2;19440:18;354:41:104;19299:248:113;2455:140:106;;;;;;:::i;11608:1647:109:-;;;;;;:::i;:::-;;:::i;2629:57::-;;;;;;:::i;:::-;;;;;;;;;;;;;;;;3367:157:27;;;;;;:::i;:::-;-1:-1:-1;;;;;3480:27:27;;;3457:4;3480:27;;;:18;:27;;;;;;;;:37;;;;;;;;;;;;;;;3367:157;3591:351;;;;;;:::i;:::-;;:::i;8842:218:109:-;;;;;;:::i;:::-;;:::i;2247:132:27:-;2324:7;2350:13;;;;;;;;;;;-1:-1:-1;;;;;2350:22:27;;;;;;;;;;2247:132;;;;;:::o;1380:305::-;1482:4;-1:-1:-1;;;;;;1517:41:27;;-1:-1:-1;;;1517:41:27;;:109;;-1:-1:-1;;;;;;;1574:52:27;;-1:-1:-1;;;1574:52:27;1517:109;:161;;;-1:-1:-1;;;;;;;;;;861:40:35;;;1642:36:27;762:146:35;2084:103:27;2144:13;2176:4;2169:11;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2084:103;;;:::o;3062:235:106:-;3245:6;3270:20;;-1:-1:-1;;;3270:20:106;;;;;;;;;;;4014:429:27;735:10:33;-1:-1:-1;;;;;4251:14:27;;;;;;;:49;;-1:-1:-1;;;;;;3480:27:27;;;3457:4;3480:27;;;:18;:27;;;;;;;;:37;;;;;;;;;;;;4269:31;4251:49;4247:129;;;4323:42;;-1:-1:-1;;;4323:42:27;;-1:-1:-1;;;;;22146:55:113;;;4323:42:27;;;22128:74:113;22238:55;;22218:18;;;22211:83;22101:18;;4323:42:27;;;;;;;;4247:129;4385:51;4408:4;4414:2;4418:3;4423:6;4431:4;4385:22;:51::i;:::-;4198:245;4014:429;;;;;:::o;2536:552::-;2660:16;2711:3;:10;2692:8;:15;:29;2688:121;;2770:10;;2782:15;;2744:54;;-1:-1:-1;;;2744:54:27;;;;;22479:25:113;;;;22520:18;;;22513:34;22452:18;;2744:54:27;22305:248:113;2688:121:27;2819:30;2866:8;:15;2852:30;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2852:30:27;;2819:63;;2898:9;2893:158;2917:8;:15;2913:1;:19;2893:158;;;4777:4:32;4768:14;;;4748:35;;;4742:42;2972:68:27;;4777:4:32;4768:14;;;4748:35;;;4742:42;2247:132:27;:::i;2972:68::-;2953:13;2967:1;2953:16;;;;;;;;:::i;:::-;;;;;;;;;;:87;2934:3;;2893:158;;;-1:-1:-1;3068:13:27;2536:552;-1:-1:-1;;;2536:552:27:o;3977:228:106:-;4124:6;4132:15;4149:6;4178:20;;-1:-1:-1;;;4178:20:106;;;;;;;;;;;3652:292;3878:6;3886:12;3917:20;;-1:-1:-1;;;3917:20:106;;;;;;;;;;;2692:259:109;2852:6;2894:4;2870:9:::1;2852:6:::0;2880:10:::1;:8;;::::0;;::::1;::::0;::::1;:3:::0;:8:::1;:::i;:::-;515:4:96::0;496:24;;;271:265;2880:10:109::1;2870:21:::0;;::::1;::::0;::::1;::::0;;;;;;-1:-1:-1;2870:21:109;:28;;-1:-1:-1;;2870:28:109::1;;::::0;;;;;;;::::1;::::0;;-1:-1:-1;;;;2915:29:109;2692:259;-1:-1:-1;;;;2692:259:109:o;9066:1097::-;9222:5;;9315:49;9334:12;9348:15;;;;;;;;:::i;:::-;9315:18;:49::i;:::-;9302:62;-1:-1:-1;9455:11:109;9408:13;:25;9422:10;:8;;;;;;;:3;:8;:::i;:10::-;9408:25;;;;;;;;;;;;;;-1:-1:-1;9408:25:109;;;:31;;;;;;;;;;;:43;;;;;;;;;;:58;;:43;;-1:-1:-1;9408:58:109;;;;;:::i;:::-;;;;-1:-1:-1;9543:18:109;;-1:-1:-1;9564:36:109;9578:3;9583:4;9589:10;9564:13;:36::i;:::-;9543:57;;9643:11;9610:17;:29;9628:10;9610:29;;;;;;;;;;;;:44;;;;;;;:::i;:::-;;;;;;;;9664:46;9670:10;9682;9694:11;9664:46;;;;;;;;;;;;:5;:46::i;:::-;9868:17;9888:10;:100;;9974:13;;;;;;;;:::i;:::-;9888:100;;;9929:13;;;;:3;:13;:::i;:::-;9998:70;;-1:-1:-1;;;9998:70:109;;10029:10;9998:70;;;24780:74:113;10049:4:109;24870:18:113;;;24863:83;24962:18;;;24955:34;;;9868:120:109;;-1:-1:-1;;;;;;9998:30:109;;;;;24753:18:113;;9998:70:109;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;10152:4:109;;9066:1097;-1:-1:-1;;;;;;;9066:1097:109:o;1018:138:105:-;1097:12;784:10;-1:-1:-1;;;;;806:11:105;784:34;;780:63;;827:16;;-1:-1:-1;;;827:16:105;;;;;;;;;;;780:63;1128:21:::1;1144:4;;1128:15;:21::i;:::-;1121:28:::0;1018:138;-1:-1:-1;;;1018:138:105:o;10398:1107:109:-;10585:10;10598:49;10617:12;10631:15;;;;;;;;:::i;10598:49::-;10585:62;;10657:18;10678:36;10692:3;10697:4;10703:10;10678:13;:36::i;:::-;10657:57;;10792:22;10817:33;10827:10;10839;10817:9;:33::i;:::-;10792:58;;10864:14;10882:1;10864:19;10860:46;;10892:14;;-1:-1:-1;;;10892:14:109;;;;;;;;;;;10860:46;11147:14;11100:13;:25;11114:10;:8;;;;;;;:3;:8;:::i;:10::-;11100:25;;;;;;;;;;;;;;-1:-1:-1;11100:25:109;;;:31;;;;;;;;;;;:43;;;;;;;;;;:61;;:43;;-1:-1:-1;11100:61:109;;;;;:::i;:::-;;;;-1:-1:-1;;11235:29:109;;;;:17;:29;;;;;:47;;11268:14;;11235:29;:47;;11268:14;;11235:47;:::i;:::-;;;;-1:-1:-1;11292:45:109;;-1:-1:-1;11298:10:109;11310;11322:14;11292:5;:45::i;:::-;11387:14;11404:10;:42;;11433:13;;;;;;;;:::i;:::-;11404:42;;;11417:13;;;;:3;:13;:::i;:::-;11387:59;-1:-1:-1;11456:42:109;-1:-1:-1;;;;;11456:14:109;;11471:10;11483:14;11456;:42::i;:::-;10517:988;;;;10398:1107;;;:::o;3156:144:27:-;3241:52;735:10:33;3274:8:27;3284;3241:18;:52::i;:::-;3156:144;;:::o;2957:1530:109:-;3176:6;;3390:4:::1;-1:-1:-1::0;;;;;3372:23:109;::::1;::::0;3368:64:::1;;-1:-1:-1::0;;;;3405:23:109;-1:-1:-1;3430:1:109::1;3397:35;;3368:64;3526:4;3511:12;3568:718;3575:7;3568:718;;;4186:89;4222:3:::0;4244:17:::1;;::::0;::::1;:6:::0;:17:::1;:::i;:::-;4243:18;4186;:89::i;:::-;4161:114:::0;;-1:-1:-1;4161:114:109;-1:-1:-1;3568:718:109::1;;;4424:11:::0;4400:9:::1;:21;4410:10;:8;;::::0;;::::1;::::0;::::1;:3:::0;:8:::1;:::i;:10::-;4400:21:::0;;::::1;::::0;::::1;::::0;;;;;;-1:-1:-1;4400:21:109;;;:35;;-1:-1:-1;;4400:35:109::1;;::::0;;;;;;;::::1;::::0;;;-1:-1:-1;;;4453:23:109;-1:-1:-1;;;;;1768:1:109::1;2957:1530:::0;;;;;;;;;:::o;11608:1647::-;11829:10;11842:49;11861:12;11875:15;;;;;;;;:::i;11842:49::-;11829:62;;11901:18;11922:36;11936:3;11941:4;11947:10;11922:13;:36::i;:::-;12076:33;;;;:21;:33;;;;;;11901:57;;-1:-1:-1;12076:38:109;12072:67;;12123:16;;-1:-1:-1;;;12123:16:109;;;;;;;;;;;12072:67;12214:22;12239:33;12249:10;12261;12239:9;:33::i;:::-;12214:58;;12303:21;12286:14;:38;12282:69;;;12333:18;;-1:-1:-1;;;12333:18:109;;;;;;;;;;;12282:69;12362:33;12398;;;:21;:33;;;;;;;;;12479:17;:29;;;;;;12398:33;;12652:122;:21;12398:33;12479:29;12652:32;:122::i;:::-;12629:145;;12956:12;12919:21;:33;12941:10;12919:33;;;;;;;;;;;;:49;;;;;;;:::i;:::-;;;;-1:-1:-1;;12978:29:109;;;;:17;:29;;;;;:54;;13011:21;;12978:29;:54;;13011:21;;12978:54;:::i;:::-;;;;-1:-1:-1;13042:52:109;;-1:-1:-1;13048:10:109;13060;13072:21;13042:5;:52::i;:::-;13139:14;13156:10;:42;;13185:13;;;;:3;:13;:::i;:::-;13156:42;;;13169:13;;;;;;;;:::i;:::-;13139:59;-1:-1:-1;13208:40:109;-1:-1:-1;;;;;13208:14:109;;13223:10;13235:12;13208:14;:40::i;:::-;11761:1494;;;;;;;11608:1647;;;;:::o;3591:351:27:-;735:10:33;-1:-1:-1;;;;;3757:14:27;;;;;;;:49;;-1:-1:-1;;;;;;3480:27:27;;;3457:4;3480:27;;;:18;:27;;;;;;;;:37;;;;;;;;;;;;3775:31;3757:49;3753:129;;;3829:42;;-1:-1:-1;;;3829:42:27;;-1:-1:-1;;;;;22146:55:113;;;3829:42:27;;;22128:74:113;22238:55;;22218:18;;;22211:83;22101:18;;3829:42:27;21954:346:113;3753:129:27;3891:44;3909:4;3915:2;3919;3923:5;3930:4;3891:17;:44::i;8842:218:109:-;8967:7;9022:10;:8;;;;;;;:3;:8;:::i;:10::-;9011:40;;;;;;25849:25:113;;;;25921:1;25910:21;;;25890:18;;;25883:49;25975:14;;25968:22;25948:18;;;25941:50;25822:18;;9011:40:109;;;-1:-1:-1;;9011:40:109;;;;;;;;;9001:51;;9011:40;9001:51;;;;;8842:218;-1:-1:-1;;;;8842:218:109:o;9015:445:27:-;-1:-1:-1;;;;;9208:16:27;;9204:88;;9247:34;;-1:-1:-1;;;9247:34:27;;9278:1;9247:34;;;19467:74:113;19440:18;;9247:34:27;19299:248:113;9204:88:27;-1:-1:-1;;;;;9305:18:27;;9301:88;;9346:32;;-1:-1:-1;;;9346:32:27;;9375:1;9346:32;;;19467:74:113;19440:18;;9346:32:27;19299:248:113;9301:88:27;9398:55;9425:4;9431:2;9435:3;9440:6;9448:4;9398:26;:55::i;:::-;9015:445;;;;;:::o;8168:668:109:-;8271:5;;8465:18;8472:11;8465:4;:18;:::i;:::-;8447:36;;8617:1;8610:4;:8;;;:35;;;;-1:-1:-1;8622:18:109;8629:11;8622:4;:18;:::i;:::-;:23;;;;8610:35;8606:52;;;8647:11;;;;:::i;:::-;;;;8606:52;8806:23;8818:11;8806:9;:23;:::i;:::-;8799:30;8168:668;-1:-1:-1;;;;8168:668:109:o;10746:346:27:-;-1:-1:-1;;;;;10842:16:27;;10838:88;;10881:34;;-1:-1:-1;;;10881:34:27;;10912:1;10881:34;;;19467:74:113;19440:18;;10881:34:27;19299:248:113;10838:88:27;16374:4;16368:11;;16444:1;16429:17;;;16575:4;16563:17;;16556:35;;;16692:17;;;16722;;;16188:23;16759:17;;16752:35;;;16895:17;;;16882:31;;;16368:11;11024:61;-1:-1:-1;11063:2:27;16368:11;16692:17;11080:4;11024:26;:61::i;1990:432:106:-;2071:12;2096;2110:23;2145:4;-1:-1:-1;;;;;2137:18:106;2156:4;;2137:24;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2095:66;;;;2175:7;2171:30;;;2191:10;-1:-1:-1;2184:17:106;;-1:-1:-1;2184:17:106;2171:30;2215:10;:17;2236:1;2215:22;2211:48;;2246:13;;-1:-1:-1;;;2246:13:106;;;;;;;;;;;2211:48;2394:10;2388:17;2383:2;2371:10;2367:19;2360:46;12099:329:27;-1:-1:-1;;;;;12178:18:27;;12174:88;;12219:32;;-1:-1:-1;;;12219:32:27;;12248:1;12219:32;;;19467:74:113;19440:18;;12219:32:27;19299:248:113;12174:88:27;16374:4;16368:11;;16444:1;16429:17;;;16575:4;16563:17;;16556:35;;;16692:17;;;16722;;;16188:23;16759:17;;16752:35;;;12360:61;;;;;;-1:-1:-1;16895:17:27;;;12360:61;;;16368:11;;16692:17;12360:61;;12387:4;;16368:11;;16692:17;;12360:26;:61::i;1594:2711:95:-;1865:12;-1:-1:-1;;;;;1891:22:95;;1887:2412;;2078:1;2075;2072;2069;2061:6;2057:2;2050:5;2045:35;2034:46;;2208:7;2203:75;;2217:61;-1:-1:-1;;;2275:2:95;2217:57;:61::i;:::-;1887:2412;;;2423:4;2417:11;-1:-1:-1;;;2554:3:95;2547:79;-1:-1:-1;;;;;2667:2:95;2663:51;2659:1;2654:3;2650:11;2643:72;2791:6;2786:2;2781:3;2777:12;2770:28;3720:2;3717:1;3713:2;3708:3;3705:1;3695:8;3688:5;3683:40;3212:16;3205:24;3199:2;3181:16;3178:24;3174:1;3170;3164:8;3161:15;3157:46;3154:76;2930:815;2899:846;;3823:1;3818:3;3811:14;3924:1;3917:4;3912:3;3908:14;3901:25;4027:1;4020:4;4015:3;4011:14;4004:25;;4196:7;4191:97;;4205:83;-1:-1:-1;;;4278:8:95;4205:56;:83::i;:::-;1668:2637;1594:2711;;;:::o;13268:315:27:-;-1:-1:-1;;;;;13375:22:27;;13371:94;;13420:34;;-1:-1:-1;;;13420:34:27;;13451:1;13420:34;;;19467:74:113;19440:18;;13420:34:27;19299:248:113;13371:94:27;-1:-1:-1;;;;;13474:25:27;;;;;;;:18;:25;;;;;;;;:35;;;;;;;;;;;;;:46;;-1:-1:-1;;13474:46:27;;;;;;;;;;13535:41;;1349::113;;;13535::27;;1322:18:113;13535:41:27;;;;;;;13268:315;;;:::o;4493:3669:109:-;4607:12;;;4674:32;4695:10;:8;;;;;;;:3;:8;:::i;:10::-;-1:-1:-1;;;;;4674:11:109;:20;;;:32::i;:::-;4646:60;;;;;4716:14;4733:9;:21;4743:10;:3;:8;;;;;;;;;;:::i;:10::-;4733:21;;;;;;;;;;;-1:-1:-1;4733:21:109;;;;;;;-1:-1:-1;5622:22:109;;;;-1:-1:-1;5618:2363:109;;;5830:8;5795:942;5864:11;5856:19;;:4;:19;;;5795:942;;5949:19;5971:13;5949:19;5985:10;:8;;;;;;;:3;:8;:::i;:10::-;5971:25;;;;;;;;;;;;;;-1:-1:-1;5971:25:109;;;:31;;;;;;;;;;;:88;;;;;;;;;;;;-1:-1:-1;6081:15:109;;6077:646;;6356:55;6369:3;6374:4;6380:17;6399:11;6356:12;:55::i;:::-;6686:4;6692:11;6678:26;;;;;;;;;;6077:646;-1:-1:-1;5901:15:109;;;;;;;;:::i;:::-;5893:23;;;;:::i;:::-;;;5795:942;;;;5618:2363;;;7545:8;7510:461;7579:11;7571:19;;:4;:19;;;7510:461;;7664:19;7686:13;7664:19;7700:10;:8;;;;;;;:3;:8;:::i;:10::-;7686:25;;;;;;;;;;;;;;-1:-1:-1;7686:25:109;;;:31;;;;;;;;;;;:88;;;;;;;;;;;;-1:-1:-1;7796:15:109;;7792:165;;7835:55;7848:3;7853:4;7859:17;7878:11;7835:12;:55::i;7792:165::-;-1:-1:-1;7616:15:109;;;;;;;;:::i;:::-;7608:23;;;;:::i;:::-;;;7510:461;;;;5618:2363;-1:-1:-1;8136:5:109;;-1:-1:-1;8143:11:109;-1:-1:-1;4493:3669:109;;;;;;:::o;1564:526:41:-;1680:9;1928:1;-1:-1:-1;;1911:19:41;1908:1;1905:26;1902:1;1898:34;1891:42;1878:11;1874:60;1864:116;;1964:1;1961;1954:12;1864:116;-1:-1:-1;2051:9:41;;2047:27;;1564:526::o;8151:463:27:-;-1:-1:-1;;;;;8273:16:27;;8269:88;;8312:34;;-1:-1:-1;;;8312:34:27;;8343:1;8312:34;;;19467:74:113;19440:18;;8312:34:27;19299:248:113;8269:88:27;-1:-1:-1;;;;;8370:18:27;;8366:88;;8411:32;;-1:-1:-1;;;8411:32:27;;8440:1;8411:32;;;19467:74:113;19440:18;;8411:32:27;19299:248:113;8366:88:27;16374:4;16368:11;;16444:1;16429:17;;;16575:4;16563:17;;16556:35;;;16692:17;;;16722;;;16188:23;16759:17;;16752:35;;;16895:17;;;16882:31;;;16368:11;8552:55;8579:4;8585:2;16368:11;16692:17;8602:4;7004:690;7205:30;7213:4;7219:2;7223:3;7228:6;7205:7;:30::i;:::-;-1:-1:-1;;;;;7249:16:27;;;7245:443;;7330:10;;735::33;;7344:1:27;7330:15;7326:352;;4777:4:32;4748:35;;;4742:42;4748:35;;;4742:42;7483:67:27;7514:8;7524:4;7530:2;4742:42:32;;7545:4:27;7483:30;:67::i;:::-;7347:218;;7326:352;;;7589:74;7625:8;7635:4;7641:2;7645:3;7650:6;7658:4;7589:35;:74::i;3422:643:61:-;3559:16;3605:4;3599:11;3696:8;3691:3;3684:21;3741:4;3734;3729:3;3725:14;3718:28;3782:4;3775;3770:3;3766:14;3759:28;3823:4;3816;3811:3;3807:14;3800:28;3875:4;3872:1;3865:4;3860:3;3856:14;3841:39;4008:2;4003;3998;3992:4;3988:13;3984:22;3980:31;3974:4;3970:42;3951:61;;4037:11;4032:3;4025:24;1580:996:76;1682:20;1704:10;1716:18;1736:12;1821:17;1841:25;1859:6;1841:17;:25::i;:::-;1892:27;;-1:-1:-1;;;1892:27:76;;;;;691:25:113;;;1821:45:76;;-1:-1:-1;1877:12:76;;-1:-1:-1;;;;;1892:16:76;;;;;664:18:113;;1892:27:76;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1877:42;;-1:-1:-1;;;;;2245:4:76;2241:53;2225:69;;2374:4;2369:3;2365:14;2362:1;2351:29;2343:37;;2464:8;2457:4;2452:3;2448:14;2444:29;2429:44;;2551:8;2544:4;2539:3;2535:14;2531:29;2522:38;;2172:398;;1580:996;;;;;;;:::o;14834:1223:109:-;15039:18;15060:505;15095:3;15112:443;;;;;;;;15166:10;15112:443;;;;;;15315:11;15307:20;;;:::i;:::-;15112:443;;;;15430:10;:110;;15513:27;15539:1;2055:49:79;15513:27:109;:::i;:::-;15430:110;;;15463:27;1875:10:79;15489:1:109;15463:27;:::i;:::-;-1:-1:-1;;;;;15112:443:109;;;15060:21;:505::i;:::-;15039:526;-1:-1:-1;15685:11:109;15638:13;:25;15652:10;:8;;;;;;;:3;:8;:::i;:10::-;15638:25;;;;;;;;;;;;;;-1:-1:-1;15638:25:109;;;:31;;;;;;;;;;;:43;;;;;;;;;;:58;;:43;;-1:-1:-1;15638:58:109;;;;;:::i;:::-;;;;-1:-1:-1;15706:18:109;;-1:-1:-1;15727:36:109;15741:3;15746:4;15752:10;15727:13;:36::i;:::-;15706:57;;15773:20;15796:10;:104;;15883:15;:5;2107:3:93;2103:22;;1958:183;15883:15:109;15876:23;;15796:104;;;15836:15;:5;2303:2:93;2292:28;;2147:189;15836:15:109;15829:23;;15796:104;15773:127;;16038:12;16001:21;:33;16023:10;16001:33;;;;;;;;;;;;:49;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;;;;;14834:1223:109:o;5144:1281:27:-;5279:6;:13;5265:3;:10;:27;5261:117;;5341:10;;5353:13;;5315:52;;-1:-1:-1;;;5315:52:27;;;;;22479:25:113;;;;22520:18;;;22513:34;22452:18;;5315:52:27;22305:248:113;5261:117:27;735:10:33;5388:16:27;5430:691;5454:3;:10;5450:1;:14;5430:691;;;4777:4:32;4768:14;;;4748:35;;;;;4742:42;4748:35;;;;;;4742:42;-1:-1:-1;;;;;5600:18:27;;;5596:420;;5638:19;5660:13;;;;;;;;;;;-1:-1:-1;;;;;5660:19:27;;;;;;;;;;5701;;;5697:129;;;5751:56;;-1:-1:-1;;;5751:56:27;;-1:-1:-1;;;;;29225:55:113;;5751:56:27;;;29207:74:113;29297:18;;;29290:34;;;29340:18;;;29333:34;;;29383:18;;;29376:34;;;29179:19;;5751:56:27;28976:440:113;5697:129:27;5942:9;:13;;;;;;;;;;;-1:-1:-1;;;;;5942:19:27;;;;;;;;;5964;;;;5942:41;;5596:420;-1:-1:-1;;;;;6034:16:27;;;6030:81;;6070:9;:13;;;;;;;;;;;-1:-1:-1;;;;;6070:17:27;;;;;;;;;:26;;6091:5;;6070:9;:26;;6091:5;;6070:26;:::i;:::-;;;;-1:-1:-1;;6030:81:27;-1:-1:-1;;5466:3:27;;5430:691;;;;6135:3;:10;6149:1;6135:15;6131:288;;4777:4:32;4748:35;;4742:42;6166:10:27;;4777:4:32;4748:35;;4742:42;6166:38:27;;-1:-1:-1;6312:2:27;-1:-1:-1;;;;;6281:45:27;6306:4;-1:-1:-1;;;;;6281:45:27;6296:8;-1:-1:-1;;;;;6281:45:27;;6316:2;6320:5;6281:45;;;;;;22479:25:113;;;22535:2;22520:18;;22513:34;22467:2;22452:18;;22305:248;6281:45:27;;;;;;;;6152:185;;6131:288;;;6392:2;-1:-1:-1;;;;;6362:46:27;6386:4;-1:-1:-1;;;;;6362:46:27;6376:8;-1:-1:-1;;;;;6362:46:27;;6396:3;6401:6;6362:46;;;;;;;:::i;:::-;;;;;;;;5251:1174;5144:1281;;;;:::o;13761:974::-;-1:-1:-1;;;;;13967:14:27;;;:18;13963:766;;14005:71;;-1:-1:-1;;;14005:71:27;;-1:-1:-1;;;;;14005:38:27;;;;;:71;;14044:8;;14054:4;;14060:2;;14064:5;;14071:4;;14005:71;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;-1:-1:-1;14005:71:27;;;;;;;;-1:-1:-1;;14005:71:27;;;;;;;;;;;;:::i;:::-;;;14001:718;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;14360:6;:13;14377:1;14360:18;14356:349;;14464:26;;-1:-1:-1;;;14464:26:27;;-1:-1:-1;;;;;19485:55:113;;14464:26:27;;;19467:74:113;19440:18;;14464:26:27;19299:248:113;14356:349:27;14657:6;14651:13;14642:6;14638:2;14634:15;14627:38;14001:718;-1:-1:-1;;;;;;14125:55:27;;-1:-1:-1;;;14125:55:27;14121:174;;14250:26;;-1:-1:-1;;;14250:26:27;;-1:-1:-1;;;;;19485:55:113;;14250:26:27;;;19467:74:113;19440:18;;14250:26:27;19299:248:113;14923:1041:27;-1:-1:-1;;;;;15154:14:27;;;:18;15150:808;;15192:78;;-1:-1:-1;;;15192:78:27;;-1:-1:-1;;;;;15192:43:27;;;;;:78;;15236:8;;15246:4;;15252:3;;15257:6;;15265:4;;15192:78;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;-1:-1:-1;15192:78:27;;;;;;;;-1:-1:-1;;15192:78:27;;;;;;;;;;;;:::i;:::-;;;15188:760;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;15349:60:27;;-1:-1:-1;;;15349:60:27;15345:179;;15479:26;;-1:-1:-1;;;15479:26:27;;-1:-1:-1;;;;;19485:55:113;;15479:26:27;;;19467:74:113;19440:18;;15479:26:27;19299:248:113;14553:160:76;14654:51;;14618:7;;14654:51;;14685:6;;414:1;;14654:51;;31784:19:113;;;31828:2;31819:12;;31812:28;31865:2;31856:12;;31627:247;14654:51:76;;;;;;;;;;;;;14644:62;;;;;;14637:69;;14553:160;;;:::o;13261:1136:109:-;13393:12;13469:18;13490:11;-1:-1:-1;;;;;13490:16:109;;13507:3;13512:6;13490:33;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;13652:17;;13469:54;;-1:-1:-1;13648:720:109;;;13807:1;13789:15;:5;2107:3:93;2103:22;;1958:183;13789:15:109;:19;;;13785:107;;;13828:49;13836:13;;;;:3;:13;:::i;:::-;13860:15;:5;2107:3:93;2103:22;;1958:183;13860:15:109;13859:16;;;:::i;:::-;13828:7;:49::i;:::-;14021:1;14003:15;:5;2303:2:93;2292:28;;2147:189;14003:15:109;:19;;;13999:104;;;14042:46;14048:13;;;;;;;;:::i;:::-;14071:15;:5;2303:2:93;2292:28;;2147:189;14071:15:109;14042:5;:46::i;:::-;13648:720;;;14155:1;14137:15;:5;2303:2:93;2292:28;;2147:189;14137:15:109;:19;;;14133:107;;;14176:49;14184:13;;;;;;;;:::i;:::-;14208:15;:5;2303:2:93;2292:28;;2147:189;14176:49:109;14276:1;14258:15;:5;2107:3:93;2103:22;;1958:183;14258:15:109;:19;;;14254:104;;;14297:46;14303:13;;;;:3;:13;:::i;:::-;14326:15;:5;2107:3:93;2103:22;;1958:183;14403:240:109;14523:26;;-1:-1:-1;;;14523:26:109;;-1:-1:-1;;;;;19485:55:113;;;14523:26:109;;;19467:74:113;14523:11:109;:16;;;;19440:18:113;;14523:26:109;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;14559:47:109;;-1:-1:-1;;;;;;;;14559:17:109;;14585:11;14559:47;;;:17;:47::i;:::-;14616:11;-1:-1:-1;;;;;14616:18:109;;:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;14403:240;;:::o;14649:179::-;14772:49;;-1:-1:-1;;;14772:49:109;;-1:-1:-1;;;;;34557:55:113;;;14772:49:109;;;34539:74:113;14807:4:109;34629:18:113;;;34622:83;34753:34;34741:47;;34721:18;;;34714:75;14772:11:109;:16;;;;34512:18:113;;14772:49:109;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;14:154:113;-1:-1:-1;;;;;93:5:113;89:54;82:5;79:65;69:93;;158:1;155;148:12;69:93;14:154;:::o;173:367::-;241:6;249;302:2;290:9;281:7;277:23;273:32;270:52;;;318:1;315;308:12;270:52;357:9;344:23;376:31;401:5;376:31;:::i;:::-;426:5;504:2;489:18;;;;476:32;;-1:-1:-1;;;173:367:113:o;727:131::-;-1:-1:-1;;;;;;801:32:113;;791:43;;781:71;;848:1;845;838:12;863:245;921:6;974:2;962:9;953:7;949:23;945:32;942:52;;;990:1;987;980:12;942:52;1029:9;1016:23;1048:30;1072:5;1048:30;:::i;1401:226::-;1460:6;1513:2;1501:9;1492:7;1488:23;1484:32;1481:52;;;1529:1;1526;1519:12;1481:52;-1:-1:-1;1574:23:113;;1401:226;-1:-1:-1;1401:226:113:o;1774:289::-;1816:3;1854:5;1848:12;1881:6;1876:3;1869:19;1937:6;1930:4;1923:5;1919:16;1912:4;1907:3;1903:14;1897:47;1989:1;1982:4;1973:6;1968:3;1964:16;1960:27;1953:38;2052:4;2045:2;2041:7;2036:2;2028:6;2024:15;2020:29;2015:3;2011:39;2007:50;2000:57;;;1774:289;;;;:::o;2068:220::-;2217:2;2206:9;2199:21;2180:4;2237:45;2278:2;2267:9;2263:18;2255:6;2237:45;:::i;2293:156::-;2353:5;2398:3;2389:6;2384:3;2380:16;2376:26;2373:46;;;2415:1;2412;2405:12;2373:46;-1:-1:-1;2437:6:113;2293:156;-1:-1:-1;2293:156:113:o;2454:170::-;2528:5;2573:3;2564:6;2559:3;2555:16;2551:26;2548:46;;;2590:1;2587;2580:12;2629:347;2680:8;2690:6;2744:3;2737:4;2729:6;2725:17;2721:27;2711:55;;2762:1;2759;2752:12;2711:55;-1:-1:-1;2785:20:113;;2828:18;2817:30;;2814:50;;;2860:1;2857;2850:12;2814:50;2897:4;2889:6;2885:17;2873:29;;2949:3;2942:4;2933:6;2925;2921:19;2917:30;2914:39;2911:59;;;2966:1;2963;2956:12;2981:829;3148:6;3156;3164;3172;3180;3233:3;3221:9;3212:7;3208:23;3204:33;3201:53;;;3250:1;3247;3240:12;3201:53;3289:9;3276:23;3308:31;3333:5;3308:31;:::i;:::-;3358:5;-1:-1:-1;3382:63:113;3437:7;3432:2;3417:18;;3382:63;:::i;:::-;3372:73;;3464:78;3534:7;3528:3;3517:9;3513:19;3464:78;:::i;:::-;3454:88;;3593:3;3582:9;3578:19;3565:33;3621:18;3613:6;3610:30;3607:50;;;3653:1;3650;3643:12;3607:50;3692:58;3742:7;3733:6;3722:9;3718:22;3692:58;:::i;:::-;2981:829;;;;-1:-1:-1;2981:829:113;;-1:-1:-1;3769:8:113;;3666:84;2981:829;-1:-1:-1;;;2981:829:113:o;4022:127::-;4083:10;4078:3;4074:20;4071:1;4064:31;4114:4;4111:1;4104:15;4138:4;4135:1;4128:15;4154:275;4225:2;4219:9;4290:2;4271:13;;-1:-1:-1;;4267:27:113;4255:40;;4325:18;4310:34;;4346:22;;;4307:62;4304:88;;;4372:18;;:::i;:::-;4408:2;4401:22;4154:275;;-1:-1:-1;4154:275:113:o;4434:183::-;4494:4;4527:18;4519:6;4516:30;4513:56;;;4549:18;;:::i;:::-;-1:-1:-1;4594:1:113;4590:14;4606:4;4586:25;;4434:183::o;4622:723::-;4676:5;4729:3;4722:4;4714:6;4710:17;4706:27;4696:55;;4747:1;4744;4737:12;4696:55;4787:6;4774:20;4814:64;4830:47;4870:6;4830:47;:::i;:::-;4814:64;:::i;:::-;4902:3;4926:6;4921:3;4914:19;4958:4;4953:3;4949:14;4942:21;;5019:4;5009:6;5006:1;5002:14;4994:6;4990:27;4986:38;4972:52;;5047:3;5039:6;5036:15;5033:35;;;5064:1;5061;5054:12;5033:35;5100:4;5092:6;5088:17;5114:200;5130:6;5125:3;5122:15;5114:200;;;5222:17;;5252:18;;5299:4;5290:14;;;;5147;5114:200;;;-1:-1:-1;5332:7:113;4622:723;-1:-1:-1;;;;;4622:723:113:o;5350:558::-;5392:5;5445:3;5438:4;5430:6;5426:17;5422:27;5412:55;;5463:1;5460;5453:12;5412:55;5503:6;5490:20;5533:18;5525:6;5522:30;5519:56;;;5555:18;;:::i;:::-;5599:59;5646:2;5623:17;;-1:-1:-1;;5619:31:113;5652:4;5615:42;5599:59;:::i;:::-;5683:6;5674:7;5667:23;5737:3;5730:4;5721:6;5713;5709:19;5705:30;5702:39;5699:59;;;5754:1;5751;5744:12;5699:59;5819:6;5812:4;5804:6;5800:17;5793:4;5784:7;5780:18;5767:59;5875:1;5846:20;;;5868:4;5842:31;5835:42;;;;5850:7;5350:558;-1:-1:-1;;;5350:558:113:o;5913:1082::-;6067:6;6075;6083;6091;6099;6152:3;6140:9;6131:7;6127:23;6123:33;6120:53;;;6169:1;6166;6159:12;6120:53;6208:9;6195:23;6227:31;6252:5;6227:31;:::i;:::-;6277:5;-1:-1:-1;6334:2:113;6319:18;;6306:32;6347:33;6306:32;6347:33;:::i;:::-;6399:7;-1:-1:-1;6457:2:113;6442:18;;6429:32;6484:18;6473:30;;6470:50;;;6516:1;6513;6506:12;6470:50;6539:61;6592:7;6583:6;6572:9;6568:22;6539:61;:::i;:::-;6529:71;;;6653:2;6642:9;6638:18;6625:32;6682:18;6672:8;6669:32;6666:52;;;6714:1;6711;6704:12;6666:52;6737:63;6792:7;6781:8;6770:9;6766:24;6737:63;:::i;:::-;6727:73;;;6853:3;6842:9;6838:19;6825:33;6883:18;6873:8;6870:32;6867:52;;;6915:1;6912;6905:12;6867:52;6938:51;6981:7;6970:8;6959:9;6955:24;6938:51;:::i;:::-;6928:61;;;5913:1082;;;;;;;;:::o;7000:1215::-;7118:6;7126;7179:2;7167:9;7158:7;7154:23;7150:32;7147:52;;;7195:1;7192;7185:12;7147:52;7235:9;7222:23;7268:18;7260:6;7257:30;7254:50;;;7300:1;7297;7290:12;7254:50;7323:22;;7376:4;7368:13;;7364:27;-1:-1:-1;7354:55:113;;7405:1;7402;7395:12;7354:55;7445:2;7432:16;7468:64;7484:47;7524:6;7484:47;:::i;7468:64::-;7554:3;7578:6;7573:3;7566:19;7610:4;7605:3;7601:14;7594:21;;7667:4;7657:6;7654:1;7650:14;7646:2;7642:23;7638:34;7624:48;;7695:7;7687:6;7684:19;7681:39;;;7716:1;7713;7706:12;7681:39;7748:4;7744:2;7740:13;7729:24;;7762:221;7778:6;7773:3;7770:15;7762:221;;;7860:3;7847:17;7877:31;7902:5;7877:31;:::i;:::-;7921:18;;7968:4;7795:14;;;;7959;;;;7762:221;;;8002:5;-1:-1:-1;;;;8060:4:113;8045:20;;8032:34;8091:18;8078:32;;8075:52;;;8123:1;8120;8113:12;8075:52;8146:63;8201:7;8190:8;8179:9;8175:24;8146:63;:::i;:::-;8136:73;;;7000:1215;;;;;:::o;8220:420::-;8273:3;8311:5;8305:12;8338:6;8333:3;8326:19;8370:4;8365:3;8361:14;8354:21;;8409:4;8402:5;8398:16;8432:1;8442:173;8456:6;8453:1;8450:13;8442:173;;;8517:13;;8505:26;;8560:4;8551:14;;;;8588:17;;;;8478:1;8471:9;8442:173;;;-1:-1:-1;8631:3:113;;8220:420;-1:-1:-1;;;;8220:420:113:o;8645:261::-;8824:2;8813:9;8806:21;8787:4;8844:56;8896:2;8885:9;8881:18;8873:6;8844:56;:::i;8911:158::-;8974:5;9019:2;9010:6;9005:3;9001:16;8997:25;8994:45;;;9035:1;9032;9025:12;9074:807;9230:6;9238;9246;9254;9262;9315:3;9303:9;9294:7;9290:23;9286:33;9283:53;;;9332:1;9329;9322:12;9283:53;9371:9;9358:23;9390:31;9415:5;9390:31;:::i;:::-;9440:5;-1:-1:-1;9464:63:113;9519:7;9514:2;9499:18;;9464:63;:::i;:::-;9454:73;;9546:67;9605:7;9599:3;9588:9;9584:19;9546:67;:::i;:::-;9536:77;;9664:3;9653:9;9649:19;9636:33;9692:18;9684:6;9681:30;9678:50;;;9724:1;9721;9714:12;10284:1139;10537:6;10545;10553;10561;10569;10577;10585;10638:3;10626:9;10617:7;10613:23;10609:33;10606:53;;;10655:1;10652;10645:12;10606:53;10694:9;10681:23;10713:31;10738:5;10713:31;:::i;:::-;10763:5;-1:-1:-1;10787:63:113;10842:7;10837:2;10822:18;;10787:63;:::i;:::-;10777:73;;10869:78;10939:7;10933:3;10922:9;10918:19;10869:78;:::i;:::-;10859:88;-1:-1:-1;11020:3:113;11005:19;;10992:33;;-1:-1:-1;11124:3:113;11109:19;;11096:33;;-1:-1:-1;11206:3:113;11191:19;;11178:33;11234:18;11223:30;;11220:50;;;11266:1;11263;11256:12;11220:50;11305:58;11355:7;11346:6;11335:9;11331:22;11305:58;:::i;:::-;10284:1139;;;;-1:-1:-1;10284:1139:113;;-1:-1:-1;10284:1139:113;;;;11279:84;;-1:-1:-1;;;10284:1139:113:o;11739:160::-;11805:20;;11865:1;11854:20;;;11844:31;;11834:59;;11889:1;11886;11879:12;11834:59;11739:160;;;:::o;11904:588::-;12016:6;12024;12032;12040;12093:3;12081:9;12072:7;12068:23;12064:33;12061:53;;;12110:1;12107;12100:12;12061:53;12149:9;12136:23;12168:31;12193:5;12168:31;:::i;:::-;12218:5;-1:-1:-1;12242:63:113;12297:7;12292:2;12277:18;;12242:63;:::i;:::-;12232:73;;12357:3;12346:9;12342:19;12329:33;12371;12396:7;12371:33;:::i;:::-;12423:7;-1:-1:-1;12449:37:113;12481:3;12466:19;;12449:37;:::i;:::-;12439:47;;11904:588;;;;;;;:::o;12497:118::-;12583:5;12576:13;12569:21;12562:5;12559:32;12549:60;;12605:1;12602;12595:12;12620:562;12729:6;12737;12745;12753;12806:3;12794:9;12785:7;12781:23;12777:33;12774:53;;;12823:1;12820;12813:12;12774:53;12846:54;12892:7;12881:9;12846:54;:::i;:::-;12836:64;;12919:37;12951:3;12940:9;12936:19;12919:37;:::i;:::-;12909:47;;13006:3;12995:9;12991:19;12978:33;13020:28;13042:5;13020:28;:::i;:::-;12620:562;;;;-1:-1:-1;13067:5:113;;13145:3;13130:19;13117:33;;-1:-1:-1;;12620:562:113:o;13380:409::-;13450:6;13458;13511:2;13499:9;13490:7;13486:23;13482:32;13479:52;;;13527:1;13524;13517:12;13479:52;13567:9;13554:23;13600:18;13592:6;13589:30;13586:50;;;13632:1;13629;13622:12;13586:50;13671:58;13721:7;13712:6;13701:9;13697:22;13671:58;:::i;:::-;13748:8;;13645:84;;-1:-1:-1;13380:409:113;-1:-1:-1;;;;13380:409:113:o;14017:441::-;14117:6;14125;14133;14186:3;14174:9;14165:7;14161:23;14157:33;14154:53;;;14203:1;14200;14193:12;14154:53;14226:54;14272:7;14261:9;14226:54;:::i;:::-;14216:64;;14299:37;14331:3;14320:9;14316:19;14299:37;:::i;:::-;14289:47;;14386:3;14375:9;14371:19;14358:33;14400:28;14422:5;14400:28;:::i;:::-;14447:5;14437:15;;;14017:441;;;;;:::o;14463:382::-;14528:6;14536;14589:2;14577:9;14568:7;14564:23;14560:32;14557:52;;;14605:1;14602;14595:12;14557:52;14644:9;14631:23;14663:31;14688:5;14663:31;:::i;:::-;14713:5;-1:-1:-1;14770:2:113;14755:18;;14742:32;14783:30;14742:32;14783:30;:::i;:::-;14832:7;14822:17;;;14463:382;;;;;:::o;14850:459::-;14950:6;14958;14966;15019:2;15007:9;14998:7;14994:23;14990:32;14987:52;;;15035:1;15032;15025:12;14987:52;15080:23;;;-1:-1:-1;15146:36:113;15178:2;15163:18;;15146:36;:::i;:::-;15136:46;;15234:2;15223:9;15219:18;15206:32;15247:30;15269:7;15247:30;:::i;15314:962::-;15513:6;15521;15529;15537;15545;15553;15606:3;15594:9;15585:7;15581:23;15577:33;15574:53;;;15623:1;15620;15613:12;15574:53;15662:9;15649:23;15681:31;15706:5;15681:31;:::i;:::-;15731:5;-1:-1:-1;15755:63:113;15810:7;15805:2;15790:18;;15755:63;:::i;:::-;15745:73;;15837:67;15896:7;15890:3;15879:9;15875:19;15837:67;:::i;:::-;15827:77;-1:-1:-1;15977:3:113;15962:19;;15949:33;;-1:-1:-1;16059:3:113;16044:19;;16031:33;16087:18;16076:30;;16073:50;;;16119:1;16116;16109:12;16073:50;16158:58;16208:7;16199:6;16188:9;16184:22;16158:58;:::i;:::-;15314:962;;;;-1:-1:-1;15314:962:113;;-1:-1:-1;15314:962:113;;16235:8;;15314:962;-1:-1:-1;;;15314:962:113:o;16573:915::-;16707:6;16715;16723;16731;16739;16747;16800:3;16788:9;16779:7;16775:23;16771:33;16768:53;;;16817:1;16814;16807:12;16768:53;16856:9;16843:23;16875:31;16900:5;16875:31;:::i;:::-;16925:5;-1:-1:-1;16949:63:113;17004:7;16999:2;16984:18;;16949:63;:::i;:::-;16939:73;-1:-1:-1;17085:3:113;17070:19;;17057:33;;-1:-1:-1;17189:3:113;17174:19;;17161:33;;-1:-1:-1;17271:3:113;17256:19;;17243:33;17299:18;17288:30;;17285:50;;;17331:1;17328;17321:12;17493:1801;17716:13;;1183;1176:21;1164:34;;17687:3;17672:19;;17788:4;17780:6;17776:17;17770:24;17803:51;17848:4;17837:9;17833:20;17819:12;1183:13;1176:21;1164:34;;1113:91;17803:51;;17903:4;17895:6;17891:17;17885:24;17918:53;17965:4;17954:9;17950:20;17934:14;1183:13;1176:21;1164:34;;1113:91;17918:53;;18020:4;18012:6;18008:17;18002:24;18035:53;18082:4;18071:9;18067:20;18051:14;1183:13;1176:21;1164:34;;1113:91;18035:53;;18137:4;18129:6;18125:17;18119:24;18152:53;18199:4;18188:9;18184:20;18168:14;1183:13;1176:21;1164:34;;1113:91;18152:53;;18254:4;18246:6;18242:17;18236:24;18269:53;18316:4;18305:9;18301:20;18285:14;1183:13;1176:21;1164:34;;1113:91;18269:53;;18371:4;18363:6;18359:17;18353:24;18386:53;18433:4;18422:9;18418:20;18402:14;1183:13;1176:21;1164:34;;1113:91;18386:53;;18488:4;18480:6;18476:17;18470:24;18503:53;18550:4;18539:9;18535:20;18519:14;1183:13;1176:21;1164:34;;1113:91;18503:53;;18605:6;18597;18593:19;18587:26;18622:55;18669:6;18658:9;18654:22;18638:14;1183:13;1176:21;1164:34;;1113:91;18622:55;;18726:6;18718;18714:19;18708:26;18743:55;18790:6;18779:9;18775:22;18759:14;1183:13;1176:21;1164:34;;1113:91;18743:55;;18847:6;18839;18835:19;18829:26;18864:55;18911:6;18900:9;18896:22;18880:14;1183:13;1176:21;1164:34;;1113:91;18864:55;;18969:6;18961;18957:19;18951:26;18986:56;19034:6;19023:9;19019:22;19002:15;1183:13;1176:21;1164:34;;1113:91;18986:56;;19092:6;19084;19080:19;19074:26;19109:56;19157:6;19146:9;19142:22;19125:15;1183:13;1176:21;1164:34;;1113:91;19109:56;;19215:6;19207;19203:19;19197:26;19232:56;19280:6;19269:9;19265:22;19248:15;1183:13;1176:21;1164:34;;1113:91;19232:56;;17493:1801;;;;:::o;19552:517::-;19657:6;19665;19673;19726:3;19714:9;19705:7;19701:23;19697:33;19694:53;;;19743:1;19740;19733:12;19694:53;19782:9;19769:23;19801:31;19826:5;19801:31;:::i;:::-;19851:5;-1:-1:-1;19875:63:113;19930:7;19925:2;19910:18;;19875:63;:::i;:::-;19865:73;;19990:3;19979:9;19975:19;19962:33;20004;20029:7;20004:33;:::i;20333:388::-;20401:6;20409;20462:2;20450:9;20441:7;20437:23;20433:32;20430:52;;;20478:1;20475;20468:12;20430:52;20517:9;20504:23;20536:31;20561:5;20536:31;:::i;:::-;20586:5;-1:-1:-1;20643:2:113;20628:18;;20615:32;20656:33;20615:32;20656:33;:::i;20726:838::-;20830:6;20838;20846;20854;20862;20915:3;20903:9;20894:7;20890:23;20886:33;20883:53;;;20932:1;20929;20922:12;20883:53;20971:9;20958:23;20990:31;21015:5;20990:31;:::i;:::-;21040:5;-1:-1:-1;21097:2:113;21082:18;;21069:32;21110:33;21069:32;21110:33;:::i;:::-;21162:7;-1:-1:-1;21242:2:113;21227:18;;21214:32;;-1:-1:-1;21345:2:113;21330:18;;21317:32;;-1:-1:-1;21426:3:113;21411:19;;21398:33;21454:18;21443:30;;21440:50;;;21486:1;21483;21476:12;21569:380;21648:1;21644:12;;;;21691;;;21712:61;;21766:4;21758:6;21754:17;21744:27;;21712:61;21819:2;21811:6;21808:14;21788:18;21785:38;21782:161;;21865:10;21860:3;21856:20;21853:1;21846:31;21900:4;21897:1;21890:15;21928:4;21925:1;21918:15;22558:127;22619:10;22614:3;22610:20;22607:1;22600:31;22650:4;22647:1;22640:15;22674:4;22671:1;22664:15;22690:161;22757:20;;22817:8;22806:20;;22796:31;;22786:59;;22841:1;22838;22831:12;22856:986;22941:6;23001:3;22989:9;22980:7;22976:23;22972:33;23017:2;23014:22;;;23032:1;23029;23022:12;23014:22;-1:-1:-1;23101:2:113;23095:9;23143:3;23131:16;;23177:18;23162:34;;23198:22;;;23159:62;23156:88;;;23224:18;;:::i;:::-;23260:2;23253:22;23297:23;;23329:31;23297:23;23329:31;:::i;:::-;23369:21;;23442:2;23427:18;;23414:32;23455:33;23414:32;23455:33;:::i;:::-;23516:2;23504:15;;23497:32;23562:37;23595:2;23580:18;;23562:37;:::i;:::-;23557:2;23549:6;23545:15;23538:62;23633:36;23665:2;23654:9;23650:18;23633:36;:::i;:::-;23628:2;23620:6;23616:15;23609:61;23722:3;23711:9;23707:19;23694:33;23736;23761:7;23736:33;:::i;:::-;23797:3;23785:16;;23778:33;23789:6;22856:986;-1:-1:-1;;;22856:986:113:o;23847:182::-;23904:6;23957:2;23945:9;23936:7;23932:23;23928:32;23925:52;;;23973:1;23970;23963:12;23925:52;23996:27;24013:9;23996:27;:::i;24034:127::-;24095:10;24090:3;24086:20;24083:1;24076:31;24126:4;24123:1;24116:15;24150:4;24147:1;24140:15;24166:125;24231:9;;;24252:10;;;24249:36;;;24265:18;;:::i;24296:277::-;24385:6;24438:2;24426:9;24417:7;24413:23;24409:32;24406:52;;;24454:1;24451;24444:12;24406:52;24493:9;24480:23;24512:31;24537:5;24512:31;:::i;25000:245::-;25067:6;25120:2;25108:9;25099:7;25095:23;25091:32;25088:52;;;25136:1;25133;25126:12;25088:52;25168:9;25162:16;25187:28;25209:5;25187:28;:::i;25250:128::-;25317:9;;;25338:11;;;25335:37;;;25352:18;;:::i;25383:241::-;25439:6;25492:2;25480:9;25471:7;25467:23;25463:32;25460:52;;;25508:1;25505;25498:12;25460:52;25547:9;25534:23;25566:28;25588:5;25566:28;:::i;26233:127::-;26294:10;26289:3;26285:20;26282:1;26275:31;26325:4;26322:1;26315:15;26349:4;26346:1;26339:15;26365:275;26403:1;26444;26441;26430:16;26480:1;26477;26466:16;26501:3;26491:37;;26508:18;;:::i;:::-;-1:-1:-1;;26544:21:113;;-1:-1:-1;;26567:15:113;;26540:43;26537:69;;;26586:18;;:::i;:::-;26620:14;;;26365:275;-1:-1:-1;;;26365:275:113:o;26645:166::-;26675:1;26716;26713;26702:16;26737:3;26727:37;;26744:18;;:::i;:::-;26801:3;26797:1;26794;26783:16;26778:27;26773:32;;;26645:166;;;;:::o;26816:192::-;26853:3;26900:5;26897:1;26886:20;26934:7;26930:12;26921:7;26918:25;26915:51;;26946:18;;:::i;:::-;-1:-1:-1;;26982:20:113;;26816:192;-1:-1:-1;;26816:192:113:o;27013:237::-;27051:7;27128:1;27125;27114:16;27110:1;27107;27096:16;27092:39;27165:11;27162:1;27151:26;27140:37;;27208:11;27199:7;27196:24;27186:58;;27224:18;;:::i;27255:271::-;27438:6;27430;27425:3;27412:33;27394:3;27464:16;;27489:13;;;27464:16;27255:271;-1:-1:-1;27255:271:113:o;27531:189::-;27627:1;27598:16;;;27616;;;;27594:39;27681:7;27648:18;;-1:-1:-1;;27668:22:113;;27645:46;27642:72;;;27694:18;;:::i;27725:193::-;27823:1;27812:16;;;27794;;;;27790:39;-1:-1:-1;;27844:23:113;;27879:8;27869:19;;27841:48;27838:74;;;27892:18;;:::i;28105:184::-;28175:6;28228:2;28216:9;28207:7;28203:23;28199:32;28196:52;;;28244:1;28241;28234:12;28196:52;-1:-1:-1;28267:16:113;;28105:184;-1:-1:-1;28105:184:113:o;28294:136::-;28329:3;-1:-1:-1;;;28350:22:113;;28347:48;;28375:18;;:::i;:::-;-1:-1:-1;28415:1:113;28411:13;;28294:136::o;28435:267::-;-1:-1:-1;;;;;28558:50:113;;;28506;;;28502:107;;28621:52;;28618:78;;;28676:18;;:::i;28707:264::-;-1:-1:-1;;;;;28776:50:113;;;28828;;;28772:107;;28891:51;;28888:77;;;28945:18;;:::i;29421:465::-;29678:2;29667:9;29660:21;29641:4;29704:56;29756:2;29745:9;29741:18;29733:6;29704:56;:::i;:::-;29808:9;29800:6;29796:22;29791:2;29780:9;29776:18;29769:50;29836:44;29873:6;29865;29836:44;:::i;:::-;29828:52;29421:465;-1:-1:-1;;;;;29421:465:113:o;29891:603::-;-1:-1:-1;;;;;30154:6:113;30150:55;30139:9;30132:74;-1:-1:-1;;;;;30246:6:113;30242:55;30237:2;30226:9;30222:18;30215:83;30334:6;30329:2;30318:9;30314:18;30307:34;30377:6;30372:2;30361:9;30357:18;30350:34;30421:3;30415;30404:9;30400:19;30393:32;30113:4;30442:46;30483:3;30472:9;30468:19;30460:6;30442:46;:::i;:::-;30434:54;29891:603;-1:-1:-1;;;;;;;29891:603:113:o;30499:249::-;30568:6;30621:2;30609:9;30600:7;30596:23;30592:32;30589:52;;;30637:1;30634;30627:12;30589:52;30669:9;30663:16;30688:30;30712:5;30688:30;:::i;30753:869::-;-1:-1:-1;;;;;31116:6:113;31112:55;31101:9;31094:74;-1:-1:-1;;;;;31208:6:113;31204:55;31199:2;31188:9;31184:18;31177:83;31296:3;31291:2;31280:9;31276:18;31269:31;31075:4;31323:57;31375:3;31364:9;31360:19;31352:6;31323:57;:::i;:::-;31428:9;31420:6;31416:22;31411:2;31400:9;31396:18;31389:50;31462:44;31499:6;31491;31462:44;:::i;:::-;31448:58;;31555:9;31547:6;31543:22;31537:3;31526:9;31522:19;31515:51;31583:33;31609:6;31601;31583:33;:::i;:::-;31575:41;30753:869;-1:-1:-1;;;;;;;;30753:869:113:o;32156:1255::-;32488:4;32533:6;32520:20;32549:31;32574:5;32549:31;:::i;:::-;-1:-1:-1;;;;;32607:54:113;32589:73;;32711:4;32699:17;;32686:31;32726:33;32686:31;32726:33;:::i;:::-;-1:-1:-1;;;;;32797:56:113;32790:4;32775:20;;32768:86;32934:8;32896:36;32926:4;32914:17;;32896:36;:::i;:::-;32892:51;32885:4;32874:9;32870:20;32863:81;32996:35;33025:4;33017:6;33013:17;32996:35;:::i;:::-;32993:1;32982:50;32975:4;32964:9;32960:20;32953:80;33082:4;33074:6;33070:17;33057:31;33097:33;33122:7;33097:33;:::i;:::-;-1:-1:-1;;;;;33168:56:113;;;33161:4;33146:20;;33139:86;31969:12;;31962:20;31955:28;33286:3;33271:19;;31943:41;32033:4;32022:16;;32016:23;32000:14;;;31993:47;32093:4;32082:16;;32076:23;32072:72;32056:14;;;32049:96;33328:3;33322;33311:9;33307:19;33300:32;33349:56;33400:3;33389:9;33385:19;1723:1;1711:14;;1758:4;1749:14;;1632:137;33639:213;33674:3;33722:5;33718:2;33707:21;33756:34;33752:39;33743:7;33740:52;33737:78;;33795:18;;:::i;:::-;33835:1;33831:15;;33639:213;-1:-1:-1;;33639:213:113:o",
        "linkReferences": {},
        "immutableReferences": {
            "59714": [
                {
                    "start": 1316,
                    "length": 32
                },
                {
                    "start": 2687,
                    "length": 32
                },
                {
                    "start": 4630,
                    "length": 32
                },
                {
                    "start": 6913,
                    "length": 32
                },
                {
                    "start": 7308,
                    "length": 32
                },
                {
                    "start": 7411,
                    "length": 32
                },
                {
                    "start": 7468,
                    "length": 32
                },
                {
                    "start": 7661,
                    "length": 32
                }
            ]
        }
    },
    "methodIdentifiers": {
        "afterAddLiquidity(address,(address,address,uint24,int24,address),(int24,int24,int256,bytes32),int256,int256,bytes)": "9f063efc",
        "afterDonate(address,(address,address,uint24,int24,address),uint256,uint256,bytes)": "e1b4af69",
        "afterInitialize(address,(address,address,uint24,int24,address),uint160,int24)": "6fe7e6eb",
        "afterRemoveLiquidity(address,(address,address,uint24,int24,address),(int24,int24,int256,bytes32),int256,int256,bytes)": "6c2bbe7e",
        "afterSwap(address,(address,address,uint24,int24,address),(bool,int256,uint160),int256,bytes)": "b47b2fb1",
        "balanceOf(address,uint256)": "00fdd58e",
        "balanceOfBatch(address[],uint256[])": "4e1273f4",
        "beforeAddLiquidity(address,(address,address,uint24,int24,address),(int24,int24,int256,bytes32),bytes)": "259982e5",
        "beforeDonate(address,(address,address,uint24,int24,address),uint256,uint256,bytes)": "b6a8b0fa",
        "beforeInitialize(address,(address,address,uint24,int24,address),uint160)": "dc98354e",
        "beforeRemoveLiquidity(address,(address,address,uint24,int24,address),(int24,int24,int256,bytes32),bytes)": "21d0ee70",
        "beforeSwap(address,(address,address,uint24,int24,address),(bool,int256,uint160),bytes)": "575e24b4",
        "cancelOrder((address,address,uint24,int24,address),int24,bool)": "a0dc3f99",
        "claimTokensSupply(uint256)": "b5a33914",
        "claimableOutputTokens(uint256)": "3bb76cc1",
        "getHookPermissions()": "c4e833ce",
        "getPositionId((address,address,uint24,int24,address),int24,bool)": "fa59cb0c",
        "isApprovedForAll(address,address)": "e985e9c5",
        "lastTicks(bytes32)": "e4cbfea5",
        "pendingOrders(bytes32,int24,bool)": "a2dc31b2",
        "placeOrder((address,address,uint24,int24,address),int24,bool,uint256)": "7e8941af",
        "poolManager()": "dc4c90d3",
        "redeem((address,address,uint24,int24,address),int24,bool,uint256)": "dd02c964",
        "safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": "2eb2c2d6",
        "safeTransferFrom(address,address,uint256,uint256,bytes)": "f242432a",
        "setApprovalForAll(address,bool)": "a22cb465",
        "supportsInterface(bytes4)": "01ffc9a7",
        "unlockCallback(bytes)": "91dd7346",
        "uri(uint256)": "0e89341c"
    },
    "rawMetadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract IPoolManager\",\"name\":\"_manager\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"_uri\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"HookNotImplemented\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidOrder\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidPool\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"LockFailure\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotEnoughToClaim\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotPoolManager\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotSelf\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NothingToClaim\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"}],\"name\":\"TransferBatch\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"TransferSingle\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"value\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"URI\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"Currency\",\"name\":\"currency0\",\"type\":\"address\"},{\"internalType\":\"Currency\",\"name\":\"currency1\",\"type\":\"address\"},{\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"},{\"internalType\":\"int24\",\"name\":\"tickSpacing\",\"type\":\"int24\"},{\"internalType\":\"contract IHooks\",\"name\":\"hooks\",\"type\":\"address\"}],\"internalType\":\"struct PoolKey\",\"name\":\"\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"},{\"internalType\":\"int256\",\"name\":\"liquidityDelta\",\"type\":\"int256\"},{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"}],\"internalType\":\"struct IPoolManager.ModifyLiquidityParams\",\"name\":\"\",\"type\":\"tuple\"},{\"internalType\":\"BalanceDelta\",\"name\":\"\",\"type\":\"int256\"},{\"internalType\":\"BalanceDelta\",\"name\":\"\",\"type\":\"int256\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"afterAddLiquidity\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"},{\"internalType\":\"BalanceDelta\",\"name\":\"\",\"type\":\"int256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"Currency\",\"name\":\"currency0\",\"type\":\"address\"},{\"internalType\":\"Currency\",\"name\":\"currency1\",\"type\":\"address\"},{\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"},{\"internalType\":\"int24\",\"name\":\"tickSpacing\",\"type\":\"int24\"},{\"internalType\":\"contract IHooks\",\"name\":\"hooks\",\"type\":\"address\"}],\"internalType\":\"struct PoolKey\",\"name\":\"\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"afterDonate\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"Currency\",\"name\":\"currency0\",\"type\":\"address\"},{\"internalType\":\"Currency\",\"name\":\"currency1\",\"type\":\"address\"},{\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"},{\"internalType\":\"int24\",\"name\":\"tickSpacing\",\"type\":\"int24\"},{\"internalType\":\"contract IHooks\",\"name\":\"hooks\",\"type\":\"address\"}],\"internalType\":\"struct PoolKey\",\"name\":\"key\",\"type\":\"tuple\"},{\"internalType\":\"uint160\",\"name\":\"\",\"type\":\"uint160\"},{\"internalType\":\"int24\",\"name\":\"tick\",\"type\":\"int24\"}],\"name\":\"afterInitialize\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"Currency\",\"name\":\"currency0\",\"type\":\"address\"},{\"internalType\":\"Currency\",\"name\":\"currency1\",\"type\":\"address\"},{\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"},{\"internalType\":\"int24\",\"name\":\"tickSpacing\",\"type\":\"int24\"},{\"internalType\":\"contract IHooks\",\"name\":\"hooks\",\"type\":\"address\"}],\"internalType\":\"struct PoolKey\",\"name\":\"\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"},{\"internalType\":\"int256\",\"name\":\"liquidityDelta\",\"type\":\"int256\"},{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"}],\"internalType\":\"struct IPoolManager.ModifyLiquidityParams\",\"name\":\"\",\"type\":\"tuple\"},{\"internalType\":\"BalanceDelta\",\"name\":\"\",\"type\":\"int256\"},{\"internalType\":\"BalanceDelta\",\"name\":\"\",\"type\":\"int256\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"afterRemoveLiquidity\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"},{\"internalType\":\"BalanceDelta\",\"name\":\"\",\"type\":\"int256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"Currency\",\"name\":\"currency0\",\"type\":\"address\"},{\"internalType\":\"Currency\",\"name\":\"currency1\",\"type\":\"address\"},{\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"},{\"internalType\":\"int24\",\"name\":\"tickSpacing\",\"type\":\"int24\"},{\"internalType\":\"contract IHooks\",\"name\":\"hooks\",\"type\":\"address\"}],\"internalType\":\"struct PoolKey\",\"name\":\"key\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"bool\",\"name\":\"zeroForOne\",\"type\":\"bool\"},{\"internalType\":\"int256\",\"name\":\"amountSpecified\",\"type\":\"int256\"},{\"internalType\":\"uint160\",\"name\":\"sqrtPriceLimitX96\",\"type\":\"uint160\"}],\"internalType\":\"struct IPoolManager.SwapParams\",\"name\":\"params\",\"type\":\"tuple\"},{\"internalType\":\"BalanceDelta\",\"name\":\"\",\"type\":\"int256\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"afterSwap\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"},{\"internalType\":\"int128\",\"name\":\"\",\"type\":\"int128\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"accounts\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"}],\"name\":\"balanceOfBatch\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"Currency\",\"name\":\"currency0\",\"type\":\"address\"},{\"internalType\":\"Currency\",\"name\":\"currency1\",\"type\":\"address\"},{\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"},{\"internalType\":\"int24\",\"name\":\"tickSpacing\",\"type\":\"int24\"},{\"internalType\":\"contract IHooks\",\"name\":\"hooks\",\"type\":\"address\"}],\"internalType\":\"struct PoolKey\",\"name\":\"\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"},{\"internalType\":\"int256\",\"name\":\"liquidityDelta\",\"type\":\"int256\"},{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"}],\"internalType\":\"struct IPoolManager.ModifyLiquidityParams\",\"name\":\"\",\"type\":\"tuple\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"beforeAddLiquidity\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"Currency\",\"name\":\"currency0\",\"type\":\"address\"},{\"internalType\":\"Currency\",\"name\":\"currency1\",\"type\":\"address\"},{\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"},{\"internalType\":\"int24\",\"name\":\"tickSpacing\",\"type\":\"int24\"},{\"internalType\":\"contract IHooks\",\"name\":\"hooks\",\"type\":\"address\"}],\"internalType\":\"struct PoolKey\",\"name\":\"\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"beforeDonate\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"Currency\",\"name\":\"currency0\",\"type\":\"address\"},{\"internalType\":\"Currency\",\"name\":\"currency1\",\"type\":\"address\"},{\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"},{\"internalType\":\"int24\",\"name\":\"tickSpacing\",\"type\":\"int24\"},{\"internalType\":\"contract IHooks\",\"name\":\"hooks\",\"type\":\"address\"}],\"internalType\":\"struct PoolKey\",\"name\":\"\",\"type\":\"tuple\"},{\"internalType\":\"uint160\",\"name\":\"\",\"type\":\"uint160\"}],\"name\":\"beforeInitialize\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"Currency\",\"name\":\"currency0\",\"type\":\"address\"},{\"internalType\":\"Currency\",\"name\":\"currency1\",\"type\":\"address\"},{\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"},{\"internalType\":\"int24\",\"name\":\"tickSpacing\",\"type\":\"int24\"},{\"internalType\":\"contract IHooks\",\"name\":\"hooks\",\"type\":\"address\"}],\"internalType\":\"struct PoolKey\",\"name\":\"\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"},{\"internalType\":\"int256\",\"name\":\"liquidityDelta\",\"type\":\"int256\"},{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"}],\"internalType\":\"struct IPoolManager.ModifyLiquidityParams\",\"name\":\"\",\"type\":\"tuple\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"beforeRemoveLiquidity\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"Currency\",\"name\":\"currency0\",\"type\":\"address\"},{\"internalType\":\"Currency\",\"name\":\"currency1\",\"type\":\"address\"},{\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"},{\"internalType\":\"int24\",\"name\":\"tickSpacing\",\"type\":\"int24\"},{\"internalType\":\"contract IHooks\",\"name\":\"hooks\",\"type\":\"address\"}],\"internalType\":\"struct PoolKey\",\"name\":\"\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"bool\",\"name\":\"zeroForOne\",\"type\":\"bool\"},{\"internalType\":\"int256\",\"name\":\"amountSpecified\",\"type\":\"int256\"},{\"internalType\":\"uint160\",\"name\":\"sqrtPriceLimitX96\",\"type\":\"uint160\"}],\"internalType\":\"struct IPoolManager.SwapParams\",\"name\":\"\",\"type\":\"tuple\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"beforeSwap\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"},{\"internalType\":\"BeforeSwapDelta\",\"name\":\"\",\"type\":\"int256\"},{\"internalType\":\"uint24\",\"name\":\"\",\"type\":\"uint24\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"Currency\",\"name\":\"currency0\",\"type\":\"address\"},{\"internalType\":\"Currency\",\"name\":\"currency1\",\"type\":\"address\"},{\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"},{\"internalType\":\"int24\",\"name\":\"tickSpacing\",\"type\":\"int24\"},{\"internalType\":\"contract IHooks\",\"name\":\"hooks\",\"type\":\"address\"}],\"internalType\":\"struct PoolKey\",\"name\":\"key\",\"type\":\"tuple\"},{\"internalType\":\"int24\",\"name\":\"tickToSellAt\",\"type\":\"int24\"},{\"internalType\":\"bool\",\"name\":\"zeroForOne\",\"type\":\"bool\"}],\"name\":\"cancelOrder\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"positionId\",\"type\":\"uint256\"}],\"name\":\"claimTokensSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"claimsSupply\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"positionId\",\"type\":\"uint256\"}],\"name\":\"claimableOutputTokens\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"outputClaimable\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getHookPermissions\",\"outputs\":[{\"components\":[{\"internalType\":\"bool\",\"name\":\"beforeInitialize\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"afterInitialize\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"beforeAddLiquidity\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"afterAddLiquidity\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"beforeRemoveLiquidity\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"afterRemoveLiquidity\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"beforeSwap\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"afterSwap\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"beforeDonate\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"afterDonate\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"beforeSwapReturnDelta\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"afterSwapReturnDelta\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"afterAddLiquidityReturnDelta\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"afterRemoveLiquidityReturnDelta\",\"type\":\"bool\"}],\"internalType\":\"struct Hooks.Permissions\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"Currency\",\"name\":\"currency0\",\"type\":\"address\"},{\"internalType\":\"Currency\",\"name\":\"currency1\",\"type\":\"address\"},{\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"},{\"internalType\":\"int24\",\"name\":\"tickSpacing\",\"type\":\"int24\"},{\"internalType\":\"contract IHooks\",\"name\":\"hooks\",\"type\":\"address\"}],\"internalType\":\"struct PoolKey\",\"name\":\"key\",\"type\":\"tuple\"},{\"internalType\":\"int24\",\"name\":\"tick\",\"type\":\"int24\"},{\"internalType\":\"bool\",\"name\":\"zeroForOne\",\"type\":\"bool\"}],\"name\":\"getPositionId\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"PoolId\",\"name\":\"poolId\",\"type\":\"bytes32\"}],\"name\":\"lastTicks\",\"outputs\":[{\"internalType\":\"int24\",\"name\":\"lastTick\",\"type\":\"int24\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"PoolId\",\"name\":\"poolId\",\"type\":\"bytes32\"},{\"internalType\":\"int24\",\"name\":\"tickToSellAt\",\"type\":\"int24\"},{\"internalType\":\"bool\",\"name\":\"zeroForOne\",\"type\":\"bool\"}],\"name\":\"pendingOrders\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"inputAmount\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"Currency\",\"name\":\"currency0\",\"type\":\"address\"},{\"internalType\":\"Currency\",\"name\":\"currency1\",\"type\":\"address\"},{\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"},{\"internalType\":\"int24\",\"name\":\"tickSpacing\",\"type\":\"int24\"},{\"internalType\":\"contract IHooks\",\"name\":\"hooks\",\"type\":\"address\"}],\"internalType\":\"struct PoolKey\",\"name\":\"key\",\"type\":\"tuple\"},{\"internalType\":\"int24\",\"name\":\"tickToSellAt\",\"type\":\"int24\"},{\"internalType\":\"bool\",\"name\":\"zeroForOne\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"inputAmount\",\"type\":\"uint256\"}],\"name\":\"placeOrder\",\"outputs\":[{\"internalType\":\"int24\",\"name\":\"\",\"type\":\"int24\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"poolManager\",\"outputs\":[{\"internalType\":\"contract IPoolManager\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"Currency\",\"name\":\"currency0\",\"type\":\"address\"},{\"internalType\":\"Currency\",\"name\":\"currency1\",\"type\":\"address\"},{\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"},{\"internalType\":\"int24\",\"name\":\"tickSpacing\",\"type\":\"int24\"},{\"internalType\":\"contract IHooks\",\"name\":\"hooks\",\"type\":\"address\"}],\"internalType\":\"struct PoolKey\",\"name\":\"key\",\"type\":\"tuple\"},{\"internalType\":\"int24\",\"name\":\"tickToSellAt\",\"type\":\"int24\"},{\"internalType\":\"bool\",\"name\":\"zeroForOne\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"inputAmountToClaimFor\",\"type\":\"uint256\"}],\"name\":\"redeem\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeBatchTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"unlockCallback\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"uri\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"events\":{\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to `approved`.\"},\"TransferBatch(address,address,address,uint256[],uint256[])\":{\"details\":\"Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all transfers.\"},\"TransferSingle(address,address,address,uint256,uint256)\":{\"details\":\"Emitted when `value` amount of tokens of type `id` are transferred from `from` to `to` by `operator`.\"},\"URI(string,uint256)\":{\"details\":\"Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI. If an {URI} event was emitted for `id`, the standard https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value returned by {IERC1155MetadataURI-uri}.\"}},\"kind\":\"dev\",\"methods\":{\"afterAddLiquidity(address,(address,address,uint24,int24,address),(int24,int24,int256,bytes32),int256,int256,bytes)\":{\"params\":{\"delta\":\"The caller's balance delta after adding liquidity; the sum of principal delta, fees accrued, and hook delta\",\"feesAccrued\":\"The fees accrued since the last time fees were collected from this position\",\"hookData\":\"Arbitrary data handed into the PoolManager by the liquidity provider to be passed on to the hook\",\"key\":\"The key for the pool\",\"params\":\"The parameters for adding liquidity\",\"sender\":\"The initial msg.sender for the add liquidity call\"},\"returns\":{\"_0\":\"bytes4 The function selector for the hook\",\"_1\":\"BalanceDelta The hook's delta in token0 and token1. Positive: the hook is owed/took currency, negative: the hook owes/sent currency\"}},\"afterDonate(address,(address,address,uint24,int24,address),uint256,uint256,bytes)\":{\"params\":{\"amount0\":\"The amount of token0 being donated\",\"amount1\":\"The amount of token1 being donated\",\"hookData\":\"Arbitrary data handed into the PoolManager by the donor to be be passed on to the hook\",\"key\":\"The key for the pool\",\"sender\":\"The initial msg.sender for the donate call\"},\"returns\":{\"_0\":\"bytes4 The function selector for the hook\"}},\"afterRemoveLiquidity(address,(address,address,uint24,int24,address),(int24,int24,int256,bytes32),int256,int256,bytes)\":{\"params\":{\"delta\":\"The caller's balance delta after adding liquidity; the sum of principal delta, fees accrued, and hook delta\",\"feesAccrued\":\"The fees accrued since the last time fees were collected from this position\",\"hookData\":\"Arbitrary data handed into the PoolManager by the liquidity provider to be be passed on to the hook\",\"key\":\"The key for the pool\",\"params\":\"The parameters for removing liquidity\",\"sender\":\"The initial msg.sender for the remove liquidity call\"},\"returns\":{\"_0\":\"bytes4 The function selector for the hook\",\"_1\":\"BalanceDelta The hook's delta in token0 and token1. Positive: the hook is owed/took currency, negative: the hook owes/sent currency\"}},\"balanceOf(address,uint256)\":{\"details\":\"See {IERC1155-balanceOf}.\"},\"balanceOfBatch(address[],uint256[])\":{\"details\":\"See {IERC1155-balanceOfBatch}. Requirements: - `accounts` and `ids` must have the same length.\"},\"beforeAddLiquidity(address,(address,address,uint24,int24,address),(int24,int24,int256,bytes32),bytes)\":{\"params\":{\"hookData\":\"Arbitrary data handed into the PoolManager by the liquidity provider to be passed on to the hook\",\"key\":\"The key for the pool\",\"params\":\"The parameters for adding liquidity\",\"sender\":\"The initial msg.sender for the add liquidity call\"},\"returns\":{\"_0\":\"bytes4 The function selector for the hook\"}},\"beforeDonate(address,(address,address,uint24,int24,address),uint256,uint256,bytes)\":{\"params\":{\"amount0\":\"The amount of token0 being donated\",\"amount1\":\"The amount of token1 being donated\",\"hookData\":\"Arbitrary data handed into the PoolManager by the donor to be be passed on to the hook\",\"key\":\"The key for the pool\",\"sender\":\"The initial msg.sender for the donate call\"},\"returns\":{\"_0\":\"bytes4 The function selector for the hook\"}},\"beforeInitialize(address,(address,address,uint24,int24,address),uint160)\":{\"params\":{\"key\":\"The key for the pool being initialized\",\"sender\":\"The initial msg.sender for the initialize call\",\"sqrtPriceX96\":\"The sqrt(price) of the pool as a Q64.96\"},\"returns\":{\"_0\":\"bytes4 The function selector for the hook\"}},\"beforeRemoveLiquidity(address,(address,address,uint24,int24,address),(int24,int24,int256,bytes32),bytes)\":{\"params\":{\"hookData\":\"Arbitrary data handed into the PoolManager by the liquidity provider to be be passed on to the hook\",\"key\":\"The key for the pool\",\"params\":\"The parameters for removing liquidity\",\"sender\":\"The initial msg.sender for the remove liquidity call\"},\"returns\":{\"_0\":\"bytes4 The function selector for the hook\"}},\"beforeSwap(address,(address,address,uint24,int24,address),(bool,int256,uint160),bytes)\":{\"params\":{\"hookData\":\"Arbitrary data handed into the PoolManager by the swapper to be be passed on to the hook\",\"key\":\"The key for the pool\",\"params\":\"The parameters for the swap\",\"sender\":\"The initial msg.sender for the swap call\"},\"returns\":{\"_0\":\"bytes4 The function selector for the hook\",\"_1\":\"BeforeSwapDelta The hook's delta in specified and unspecified currencies. Positive: the hook is owed/took currency, negative: the hook owes/sent currency\",\"_2\":\"uint24 Optionally override the lp fee, only used if three conditions are met: 1. the Pool has a dynamic fee, 2. the value's 2nd highest bit is set (23rd bit, 0x400000), and 3. the value is less than or equal to the maximum fee (1 million)\"}},\"getHookPermissions()\":{\"details\":\"Used at deployment to validate the address correctly represents the expected permissions\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC1155-isApprovedForAll}.\"},\"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)\":{\"details\":\"See {IERC1155-safeBatchTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,uint256,bytes)\":{\"details\":\"See {IERC1155-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC1155-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"unlockCallback(bytes)\":{\"details\":\"We force the onlyPoolManager modifier by exposing a virtual function after the onlyPoolManager check.\",\"params\":{\"data\":\"The data that was passed to the call to unlock\"},\"returns\":{\"_0\":\"Any data that you want to be returned from the unlock call\"}},\"uri(uint256)\":{\"details\":\"See {IERC1155MetadataURI-uri}. This implementation returns the same URI for *all* token types. It relies on the token type ID substitution mechanism https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the EIP]. Clients calling this function must replace the `\\\\{id\\\\}` substring with the actual token type ID.\"}},\"version\":1},\"userdoc\":{\"errors\":{\"NotPoolManager()\":[{\"notice\":\"Thrown when calling unlockCallback where the caller is not PoolManager\"}]},\"kind\":\"user\",\"methods\":{\"afterAddLiquidity(address,(address,address,uint24,int24,address),(int24,int24,int256,bytes32),int256,int256,bytes)\":{\"notice\":\"The hook called after liquidity is added\"},\"afterDonate(address,(address,address,uint24,int24,address),uint256,uint256,bytes)\":{\"notice\":\"The hook called after donate\"},\"afterRemoveLiquidity(address,(address,address,uint24,int24,address),(int24,int24,int256,bytes32),int256,int256,bytes)\":{\"notice\":\"The hook called after liquidity is removed\"},\"beforeAddLiquidity(address,(address,address,uint24,int24,address),(int24,int24,int256,bytes32),bytes)\":{\"notice\":\"The hook called before liquidity is added\"},\"beforeDonate(address,(address,address,uint24,int24,address),uint256,uint256,bytes)\":{\"notice\":\"The hook called before donate\"},\"beforeInitialize(address,(address,address,uint24,int24,address),uint160)\":{\"notice\":\"The hook called before the state of a pool is initialized\"},\"beforeRemoveLiquidity(address,(address,address,uint24,int24,address),(int24,int24,int256,bytes32),bytes)\":{\"notice\":\"The hook called before liquidity is removed\"},\"beforeSwap(address,(address,address,uint24,int24,address),(bool,int256,uint160),bytes)\":{\"notice\":\"The hook called before a swap\"},\"getHookPermissions()\":{\"notice\":\"Returns a struct of permissions to signal which hook functions are to be implemented\"},\"poolManager()\":{\"notice\":\"The Uniswap v4 PoolManager contract\"},\"unlockCallback(bytes)\":{\"notice\":\"Called by the pool manager on `msg.sender` when the manager is unlocked\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/TakeProfitsHook.sol\":\"TakeProfitsHook\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":800},\"remappings\":[\":@ensdomains/=lib/v4-periphery/lib/v4-core/node_modules/@ensdomains/\",\":@openzeppelin/=lib/v4-periphery/lib/v4-core/lib/openzeppelin-contracts/\",\":@openzeppelin/contracts/=lib/v4-periphery/lib/v4-core/lib/openzeppelin-contracts/contracts/\",\":@uniswap/v4-core/=lib/v4-periphery/lib/v4-core/\",\":ds-test/=lib/v4-periphery/lib/v4-core/lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/v4-periphery/lib/v4-core/lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-gas-snapshot/=lib/v4-periphery/lib/v4-core/lib/forge-gas-snapshot/src/\",\":forge-std/=lib/forge-std/src/\",\":hardhat/=lib/v4-periphery/lib/v4-core/node_modules/hardhat/\",\":openzeppelin-contracts/=lib/v4-periphery/lib/v4-core/lib/openzeppelin-contracts/\",\":permit2/=lib/v4-periphery/lib/permit2/\",\":solmate/=lib/v4-periphery/lib/v4-core/lib/solmate/\",\":v4-core/=lib/v4-periphery/lib/v4-core/src/\",\":v4-periphery/=lib/v4-periphery/\"]},\"sources\":{\"lib/v4-periphery/lib/v4-core/lib/openzeppelin-contracts/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]},\"lib/v4-periphery/lib/v4-core/lib/openzeppelin-contracts/contracts/token/ERC1155/ERC1155.sol\":{\"keccak256\":\"0xd9b0b8ee1ac6dfee14eb1ad4383a4739dbaa0f2036594bb3a16f0408085dadde\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6309805132e519162d1134c67df22dd963323a9208b4f41344a4c13ed63c1026\",\"dweb:/ipfs/QmTBPHnf6qbtAD4NVnKVFmubUHRqMDPLkseR6apxTUpsQo\"]},\"lib/v4-periphery/lib/v4-core/lib/openzeppelin-contracts/contracts/token/ERC1155/IERC1155.sol\":{\"keccak256\":\"0x6caffc9cfdc623eca9f87a686071708af5d5c17454d65022843fdddbc53c0cce\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ecf8c7ed1f8ff443c181f64496ae380ee02e61dcd2ed120e1e997837a926f182\",\"dweb:/ipfs/QmWASYTrZPF2MrcpC3EBmxx6RgtZ5Fr4jwrsmB7ZF7qhDC\"]},\"lib/v4-periphery/lib/v4-core/lib/openzeppelin-contracts/contracts/token/ERC1155/IERC1155Receiver.sol\":{\"keccak256\":\"0xb69597a63b202e28401128bed6a6d259e8730191274471af7303eafb247881a3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://25addbda49a578b3318130585601344c5149a5549d749adf88e9685349a46b23\",\"dweb:/ipfs/Qme2DuD8gpsve1ZvaSMQpBwMdpU7yAtekDwr7gUp8dX4zX\"]},\"lib/v4-periphery/lib/v4-core/lib/openzeppelin-contracts/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol\":{\"keccak256\":\"0xe92b5e199b963d108ad6e06feeede151ba23849e0d064956535489ff967ffe68\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://280e17738a67b06dae02fec32982bd48a8ab71d8df95e9975ae03532634bc522\",\"dweb:/ipfs/QmecjsNcFgy2mMjuNfRDkLpAYMRWnh5o73fw1Bj2rCso2z\"]},\"lib/v4-periphery/lib/v4-core/lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"lib/v4-periphery/lib/v4-core/lib/openzeppelin-contracts/contracts/utils/Arrays.sol\":{\"keccak256\":\"0x8806d620b6571932b662cfd48fbd518d4f70df1f88a23b5724cacde64a77bda1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8043304c8f9e1c1dc4a41935efa067daa77ad7abbae1fda41f015d53fbf327a5\",\"dweb:/ipfs/QmTrF2hSkRZoN9EEu8zdEhBpGNZ7RxzCdXf9ydzc2HQ3tM\"]},\"lib/v4-periphery/lib/v4-core/lib/openzeppelin-contracts/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"lib/v4-periphery/lib/v4-core/lib/openzeppelin-contracts/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0x32ba59b4b7299237c8ba56319110989d7978a039faf754793064e967e5894418\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1ae50c8b562427df610cc4540c9bf104acca7ef8e2dcae567ae7e52272281e9c\",\"dweb:/ipfs/QmTHiadFCSJUPpRjNegc5SahmeU8bAoY8i9Aq6tVscbcKR\"]},\"lib/v4-periphery/lib/v4-core/lib/openzeppelin-contracts/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x9e8778b14317ba9e256c30a76fd6c32b960af621987f56069e1e819c77c6a133\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1777404f1dcd0fac188e55a288724ec3c67b45288e49cc64723e95e702b49ab8\",\"dweb:/ipfs/QmZFdC626GButBApwDUvvTnUzdinevC3B24d7yyh57XkiA\"]},\"lib/v4-periphery/lib/v4-core/lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]},\"lib/v4-periphery/lib/v4-core/lib/openzeppelin-contracts/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]},\"lib/v4-periphery/lib/v4-core/lib/solmate/src/utils/FixedPointMathLib.sol\":{\"keccak256\":\"0x1b62af9baf5b8e991ed7531bc87f45550ba9d61e8dbff5caf237ccaf3a3fd843\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://b7b38b977c5305b18ceefbeed4c9ceaaaefa419b520de62de6604ea661f8c0a9\",\"dweb:/ipfs/QmecMRzgfMyDVa2pvBqMMDLYBappaj7Aa3qcMoQYEQrhWi\"]},\"lib/v4-periphery/lib/v4-core/src/interfaces/IExtsload.sol\":{\"keccak256\":\"0x80b53ca4907d6f0088c3b931f2b72cad1dc4615a95094d96bd0fb8dff8d5ba43\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://375c69148622aab7a3537d5fd37d373a8e9731022c8d87bdaee46233b0a99fe1\",\"dweb:/ipfs/QmXFjdoYRxsA5B1kyuxEXgNf3FBoL1zPvy26Qy8EtpdFRN\"]},\"lib/v4-periphery/lib/v4-core/src/interfaces/IExttload.sol\":{\"keccak256\":\"0xc6b68283ebd8d1c789df536756726eed51c589134bb20821b236a0d22a135937\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://294394f72dfc219689209f4130d85601dfd0d63c8d47578050d312db70f9b6c8\",\"dweb:/ipfs/QmTDMQ3oxCGHgEBU48a3Lp4S1rRjc8vVCxkhE5ZNej1bsY\"]},\"lib/v4-periphery/lib/v4-core/src/interfaces/IHooks.sol\":{\"keccak256\":\"0x556e093b73b1002371eb3cbc1f182e7ca948def61c321d2d566bdca7ab257697\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3af364d5189171800768f7a7b9c47d6714fe8e0532ac755ed1e22c91c17dabea\",\"dweb:/ipfs/QmX6kqyyRrHWZSg55PSnY8U5FAnMMhGA7Jwmj5uHGAcxcL\"]},\"lib/v4-periphery/lib/v4-core/src/interfaces/IPoolManager.sol\":{\"keccak256\":\"0xd682b9f3a6c6908c252a6bea95b7cf6631395dc6cff427e16af97210aedba854\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e52c885e336ddafcb3deea6cafafd0c5a469affa2013741cd021a87f8cf9f25e\",\"dweb:/ipfs/QmaAz8rqdpUY7hhN55Gwr5cF1fH7ZrNuVzXaEqqdzHCKGS\"]},\"lib/v4-periphery/lib/v4-core/src/interfaces/IProtocolFeeController.sol\":{\"keccak256\":\"0xc2d7f3605da9767e36cf25d4d4fa9b95663a6659e26ce28cf29b8b88acb79a4c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c7a43cda35b8a9254ed3e46cfd8649361f09121d17ef554bd3d190b9a8d57cc6\",\"dweb:/ipfs/QmRBDQoqCWddH5hY1JdxMyYtY8jMZhWAwtuFJBc3r8V31G\"]},\"lib/v4-periphery/lib/v4-core/src/interfaces/IProtocolFees.sol\":{\"keccak256\":\"0x8fc7260b141b65a5c3dc70ab869dce5725f1677075d2a51df293825170495c29\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ed86c9fe65d6bc88dec37bdb56338a5da3ead74bfa71b106f7c484d3f860e0a7\",\"dweb:/ipfs/QmQAx3YCg5JiCuz9kXyuqe1Y5B4zqiq5zgn5cKLhoK5Qrk\"]},\"lib/v4-periphery/lib/v4-core/src/interfaces/callback/IUnlockCallback.sol\":{\"keccak256\":\"0x58c82f2bd9d7c097ed09bd0991fedc403b0ec270eb3d0158bfb095c06a03d719\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://91168ca26a10980df2cdc3fbfe8ddf372c002b7ef19e3c59a0c9870d64198f1b\",\"dweb:/ipfs/QmUSpaM825vd1SwvF38esgbdLgYiPwefKaFERTWvUi6uSK\"]},\"lib/v4-periphery/lib/v4-core/src/interfaces/external/IERC20Minimal.sol\":{\"keccak256\":\"0xc1c23330c1511ecfd45c67a683962b4e2555b82f1dacd40cc8b46ae5a6e250e7\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://5ce10b7970482a65f9e9a365b810eeb154a5d4a8229a26653028d84b9622a410\",\"dweb:/ipfs/QmTSwXxZ2FTkM5duBZgbpFs8SRVDR5NPAnW4YimeDhb1s8\"]},\"lib/v4-periphery/lib/v4-core/src/interfaces/external/IERC6909Claims.sol\":{\"keccak256\":\"0xa586f345739e52b0488a0fe40b6e375cce67fdd25758408b0efcb5133ad96a48\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e8c557b7e52abdbbd82e415a1acc27921446a7fd090b7d4877e52be72619547f\",\"dweb:/ipfs/QmXE2KNPbXmGX8BQF3ei6zhzRTnhoTQg39XmqMnkhbr6QK\"]},\"lib/v4-periphery/lib/v4-core/src/libraries/BitMath.sol\":{\"keccak256\":\"0x148c274b48f5f4becfe0d8aee257fe8b5d87a902b5bcfb6b3e64b4d5a574aa50\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://b5db898b4aa8805cb599c51c5d218ba5bec476673c3851131c3b4f73565e8c8b\",\"dweb:/ipfs/QmdLGs2xPSRTCs76o1aMsBVZDwG8wTEmKGeRvghk7k2TZ2\"]},\"lib/v4-periphery/lib/v4-core/src/libraries/CustomRevert.sol\":{\"keccak256\":\"0x745ca9c258d00fae52f293af065471f1bc1099de1bea4ceb52e312240ac52895\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://71eee0aa4e395f2c7fce16760d6547c6a12a6fd3dc56b94f4d44480fed538495\",\"dweb:/ipfs/QmPfJBiHzeVe9sx3PZ27jWrzJqF9atvevpYBC9j3Ekz9TG\"]},\"lib/v4-periphery/lib/v4-core/src/libraries/FixedPoint128.sol\":{\"keccak256\":\"0xc7e80dc41f28887d0d915a75c0b2783ae659e5384dd1a3ed1251a42e058d8835\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://2df62bf1d9d4349236fd0bc7a96b3a3be95f4c049603e4a20c8473cca9402b4d\",\"dweb:/ipfs/QmVR5dmMkoypmhaBeBj8cGegHpJycbofUDg59dHm42i9MT\"]},\"lib/v4-periphery/lib/v4-core/src/libraries/FullMath.sol\":{\"keccak256\":\"0x4fc73a00817193fd3cac1cc03d8167d21af97d75f1815a070ee31a90c702b4c2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c3b2d66d36b1ad56b1ab6e2eb8a816740877b40b461c93f125e88621c8378e52\",\"dweb:/ipfs/QmPGvMZzKQvNiWKd8aRzzdW7oAizwrMgcMtnaworDkVHFC\"]},\"lib/v4-periphery/lib/v4-core/src/libraries/Hooks.sol\":{\"keccak256\":\"0x8142e347f4e139fe3c7b2182fb7933ce937def49b32164e6429ad59291151424\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://88dcd7b3f6f383f3c40b21507f7d6d7ebf4b3fd24c78b2f09e2137b7e18a7565\",\"dweb:/ipfs/QmWGtUCEBwqXCkA4EKmt6KrKxRFXiMszQLSe8AKu4EC1Kn\"]},\"lib/v4-periphery/lib/v4-core/src/libraries/LPFeeLibrary.sol\":{\"keccak256\":\"0x9cb794c60d4c867732b20a6cd14b965bf3a63df1161eb3cd28e2c9d0447db46f\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://3d987ee5738f74c3fb091db503b44ad6651e4e47554623182e0ecbe696bd7382\",\"dweb:/ipfs/QmW7Rt5qjD4mmRnvYcT2Fj7VPzBm1eT9w15WUHtfWmKEPh\"]},\"lib/v4-periphery/lib/v4-core/src/libraries/LiquidityMath.sol\":{\"keccak256\":\"0x4a04b9383e2fb943c2c3ae7d0c9071b58dd97b6dac0a409fe1c79c3ca897bbcf\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://0b33cf0ff936f62aa7f3b82922fa0ac52ac24471561e87fbf7ab8372607f6dfc\",\"dweb:/ipfs/Qmcr6omwzJjQPu6HQ8E9vFXaTgrtqfb2KbfxbuQavfUzFa\"]},\"lib/v4-periphery/lib/v4-core/src/libraries/ParseBytes.sol\":{\"keccak256\":\"0xf0795198d1e651b0b33fd1708d80a14f501bb2a1486905676d35f364e880f579\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://5aea527fcec51d7274f0c189dc2479a6aa708fc91857187a4d7db46bb1d6c7a8\",\"dweb:/ipfs/QmUTrwTPSZ7EHBaTyfAA78rZVP17iQzmAmvDcQ8GhDRAEf\"]},\"lib/v4-periphery/lib/v4-core/src/libraries/Position.sol\":{\"keccak256\":\"0xddab2a831f1befb6abf5567e77c4582169ca8156cf69eb4f22d8e87f7226a3f9\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://c79fe61b50f3b70cff503abfa6f5643fcbefb9b794855bee1019b1e6d9c083b2\",\"dweb:/ipfs/QmbKmYNQesaMz8bo1b7TMHQcAwaDd3eDPrE5pAdPPZTtk5\"]},\"lib/v4-periphery/lib/v4-core/src/libraries/SafeCast.sol\":{\"keccak256\":\"0x8060d21c4d54a431113f9a594b860e6a9bf1f346d0c7c02dfafe9847dd8a0591\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://e7f71b73d82965d1d949f388060f6f0daab7cd14718e260682918ec6fa0253b9\",\"dweb:/ipfs/QmP85jtFrCeV6Y8zuJfrrgiMy1shX3tHWs2wX7DMAB7Lft\"]},\"lib/v4-periphery/lib/v4-core/src/libraries/StateLibrary.sol\":{\"keccak256\":\"0x4bbb1e816dd67fd4e958518ef50d216fcdab19912ab98c28d4c5279890c48c2c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://eab2611adf69904cb0f326dbd82cdd6d1a09630dacace7f741e29c76836e41e8\",\"dweb:/ipfs/QmcCR78dZ8C7pF3DSDoWyYobX7aXkBNxbCmgenkqpgRrbT\"]},\"lib/v4-periphery/lib/v4-core/src/libraries/TickMath.sol\":{\"keccak256\":\"0x39b33c48e9632a6b330027121cffef80916ce11b729b8296b640e22dd1cd1c2f\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://62264b1fa20aa6f87a4f722d33a9e84d0c8f5a34f904e5a25ba007512202f4dd\",\"dweb:/ipfs/QmYsF6j9caz4V6GqGoBmfVDS3EioexZQQ8p6xfDZbk3owM\"]},\"lib/v4-periphery/lib/v4-core/src/types/BalanceDelta.sol\":{\"keccak256\":\"0xa719c8fe51e0a9524280178f19f6851bcc3b3b60e73618f3d60905d35ae5569f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7436928dc9de35c6c7c5c636cb51adaf295cfd590da83b19a004ae33cbec9ef9\",\"dweb:/ipfs/QmRJ9yZkUpzk4433GX3LgVVL8jwpbSYSUwXcucKisf3v4H\"]},\"lib/v4-periphery/lib/v4-core/src/types/BeforeSwapDelta.sol\":{\"keccak256\":\"0x2a774312d91285313d569da1a718c909655da5432310417692097a1d4dc83a78\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a2c7a0379955cff9c17ab9e61f95e42909aa5947c22740f86ce940d09856f782\",\"dweb:/ipfs/QmaAuo8UBYXsGrVuKh8iRoAAdqwtg1jDq515cW1ZRP5m9K\"]},\"lib/v4-periphery/lib/v4-core/src/types/Currency.sol\":{\"keccak256\":\"0x35c74eae038ecfbbae48b0e13f2b9a43ac6d8da4847ffa0f1482e4e2d455ee74\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cadb54f9c89b6970583148e503a23c7b654aff1f3e6a0da57705c54e5b03b39f\",\"dweb:/ipfs/Qma3CKKwyzGwzHN4Z9HDJ4Q7J5VfbN594i8F2DTGWTMWcB\"]},\"lib/v4-periphery/lib/v4-core/src/types/PoolId.sol\":{\"keccak256\":\"0x308311916ea0f5c2fd878b6a2751eb223d170a69e33f601fae56dfe3c5d392af\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://669c2cd7ac17690b5d8831e0bda72822376c3a04b36afed6d31df4d75fe60918\",\"dweb:/ipfs/QmT6EpkxqU8VF3WsgrZ66F3s1cCQRffR95z1HDYZz7ph6y\"]},\"lib/v4-periphery/lib/v4-core/src/types/PoolKey.sol\":{\"keccak256\":\"0xf89856e0580d7a4856d3187a76858377ccee9d59702d230c338d84388221b786\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6f3118fa189025695c37fdf0bdd1190f085ad097484d3c88cf4c56d1db65f639\",\"dweb:/ipfs/QmamXpgtB8GV1CaFLvqefPWSoikLDhMk1yU4heBnVzU8gi\"]},\"lib/v4-periphery/src/base/ImmutableState.sol\":{\"keccak256\":\"0x12b175e4ed6d31da545e3b6c9930901568c99d153b1e51044d32e88f42b9b633\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://f4347899e0b3bfd66e8d79652b1a14a62a02d16bfece63a40c6efe0e5656c384\",\"dweb:/ipfs/QmSbbT8fefHstA72BqF7SDooDtmhs79dR8T6pWv8LxKU2L\"]},\"lib/v4-periphery/src/base/SafeCallback.sol\":{\"keccak256\":\"0x6284bd1d1fbe78a901e63dc70720e2bf19de6758347b050f8ba2b155e73325c5\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://3afb423a3c0f8b5f6436680ff3cde9247924d442a9720dc39b2b07a352607187\",\"dweb:/ipfs/QmaT5bMwiiqkp8KWUnHjWJz55Ah9vbpASzJagg9riHbpTf\"]},\"lib/v4-periphery/src/base/hooks/BaseHook.sol\":{\"keccak256\":\"0x734be8d61303f27e1dae3b54a0925c2c2458fa5858b4c303fa899aca39aea5cb\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://ad4d0f2c40953a5755a5ab9034675337a945411745a5d8595d9831a3de94a0a1\",\"dweb:/ipfs/QmZbGVJHoB7bnaAbKH1B47eQaJbQTXxz9PBvLgJsdiLMXC\"]},\"src/TakeProfitsHook.sol\":{\"keccak256\":\"0xbb62f5260043da1447062a2cc5aac7316ccd59812ebb4200f259cd8c8a2dc41c\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://7f9e63cbba0ebee5aa97f4df66bf1be26132741d8268897a52634d7febae9f23\",\"dweb:/ipfs/QmdemV2bhxJ8J5UEnx7K5YJdgYJJFDkr5WQZSVia6wqfbs\"]}},\"version\":1}",
    "metadata": {
        "compiler": {
            "version": "0.8.26+commit.8a97fa7a"
        },
        "language": "Solidity",
        "output": {
            "abi": [
                {
                    "inputs": [
                        {
                            "internalType": "contract IPoolManager",
                            "name": "_manager",
                            "type": "address"
                        },
                        {
                            "internalType": "string",
                            "name": "_uri",
                            "type": "string"
                        }
                    ],
                    "stateMutability": "nonpayable",
                    "type": "constructor"
                },
                {
                    "inputs": [
                        {
                            "internalType": "address",
                            "name": "sender",
                            "type": "address"
                        },
                        {
                            "internalType": "uint256",
                            "name": "balance",
                            "type": "uint256"
                        },
                        {
                            "internalType": "uint256",
                            "name": "needed",
                            "type": "uint256"
                        },
                        {
                            "internalType": "uint256",
                            "name": "tokenId",
                            "type": "uint256"
                        }
                    ],
                    "type": "error",
                    "name": "ERC1155InsufficientBalance"
                },
                {
                    "inputs": [
                        {
                            "internalType": "address",
                            "name": "approver",
                            "type": "address"
                        }
                    ],
                    "type": "error",
                    "name": "ERC1155InvalidApprover"
                },
                {
                    "inputs": [
                        {
                            "internalType": "uint256",
                            "name": "idsLength",
                            "type": "uint256"
                        },
                        {
                            "internalType": "uint256",
                            "name": "valuesLength",
                            "type": "uint256"
                        }
                    ],
                    "type": "error",
                    "name": "ERC1155InvalidArrayLength"
                },
                {
                    "inputs": [
                        {
                            "internalType": "address",
                            "name": "operator",
                            "type": "address"
                        }
                    ],
                    "type": "error",
                    "name": "ERC1155InvalidOperator"
                },
                {
                    "inputs": [
                        {
                            "internalType": "address",
                            "name": "receiver",
                            "type": "address"
                        }
                    ],
                    "type": "error",
                    "name": "ERC1155InvalidReceiver"
                },
                {
                    "inputs": [
                        {
                            "internalType": "address",
                            "name": "sender",
                            "type": "address"
                        }
                    ],
                    "type": "error",
                    "name": "ERC1155InvalidSender"
                },
                {
                    "inputs": [
                        {
                            "internalType": "address",
                            "name": "operator",
                            "type": "address"
                        },
                        {
                            "internalType": "address",
                            "name": "owner",
                            "type": "address"
                        }
                    ],
                    "type": "error",
                    "name": "ERC1155MissingApprovalForAll"
                },
                {
                    "inputs": [],
                    "type": "error",
                    "name": "HookNotImplemented"
                },
                {
                    "inputs": [],
                    "type": "error",
                    "name": "InvalidOrder"
                },
                {
                    "inputs": [],
                    "type": "error",
                    "name": "InvalidPool"
                },
                {
                    "inputs": [],
                    "type": "error",
                    "name": "LockFailure"
                },
                {
                    "inputs": [],
                    "type": "error",
                    "name": "NotEnoughToClaim"
                },
                {
                    "inputs": [],
                    "type": "error",
                    "name": "NotPoolManager"
                },
                {
                    "inputs": [],
                    "type": "error",
                    "name": "NotSelf"
                },
                {
                    "inputs": [],
                    "type": "error",
                    "name": "NothingToClaim"
                },
                {
                    "inputs": [
                        {
                            "internalType": "address",
                            "name": "account",
                            "type": "address",
                            "indexed": true
                        },
                        {
                            "internalType": "address",
                            "name": "operator",
                            "type": "address",
                            "indexed": true
                        },
                        {
                            "internalType": "bool",
                            "name": "approved",
                            "type": "bool",
                            "indexed": false
                        }
                    ],
                    "type": "event",
                    "name": "ApprovalForAll",
                    "anonymous": false
                },
                {
                    "inputs": [
                        {
                            "internalType": "address",
                            "name": "operator",
                            "type": "address",
                            "indexed": true
                        },
                        {
                            "internalType": "address",
                            "name": "from",
                            "type": "address",
                            "indexed": true
                        },
                        {
                            "internalType": "address",
                            "name": "to",
                            "type": "address",
                            "indexed": true
                        },
                        {
                            "internalType": "uint256[]",
                            "name": "ids",
                            "type": "uint256[]",
                            "indexed": false
                        },
                        {
                            "internalType": "uint256[]",
                            "name": "values",
                            "type": "uint256[]",
                            "indexed": false
                        }
                    ],
                    "type": "event",
                    "name": "TransferBatch",
                    "anonymous": false
                },
                {
                    "inputs": [
                        {
                            "internalType": "address",
                            "name": "operator",
                            "type": "address",
                            "indexed": true
                        },
                        {
                            "internalType": "address",
                            "name": "from",
                            "type": "address",
                            "indexed": true
                        },
                        {
                            "internalType": "address",
                            "name": "to",
                            "type": "address",
                            "indexed": true
                        },
                        {
                            "internalType": "uint256",
                            "name": "id",
                            "type": "uint256",
                            "indexed": false
                        },
                        {
                            "internalType": "uint256",
                            "name": "value",
                            "type": "uint256",
                            "indexed": false
                        }
                    ],
                    "type": "event",
                    "name": "TransferSingle",
                    "anonymous": false
                },
                {
                    "inputs": [
                        {
                            "internalType": "string",
                            "name": "value",
                            "type": "string",
                            "indexed": false
                        },
                        {
                            "internalType": "uint256",
                            "name": "id",
                            "type": "uint256",
                            "indexed": true
                        }
                    ],
                    "type": "event",
                    "name": "URI",
                    "anonymous": false
                },
                {
                    "inputs": [
                        {
                            "internalType": "address",
                            "name": "",
                            "type": "address"
                        },
                        {
                            "internalType": "struct PoolKey",
                            "name": "",
                            "type": "tuple",
                            "components": [
                                {
                                    "internalType": "Currency",
                                    "name": "currency0",
                                    "type": "address"
                                },
                                {
                                    "internalType": "Currency",
                                    "name": "currency1",
                                    "type": "address"
                                },
                                {
                                    "internalType": "uint24",
                                    "name": "fee",
                                    "type": "uint24"
                                },
                                {
                                    "internalType": "int24",
                                    "name": "tickSpacing",
                                    "type": "int24"
                                },
                                {
                                    "internalType": "contract IHooks",
                                    "name": "hooks",
                                    "type": "address"
                                }
                            ]
                        },
                        {
                            "internalType": "struct IPoolManager.ModifyLiquidityParams",
                            "name": "",
                            "type": "tuple",
                            "components": [
                                {
                                    "internalType": "int24",
                                    "name": "tickLower",
                                    "type": "int24"
                                },
                                {
                                    "internalType": "int24",
                                    "name": "tickUpper",
                                    "type": "int24"
                                },
                                {
                                    "internalType": "int256",
                                    "name": "liquidityDelta",
                                    "type": "int256"
                                },
                                {
                                    "internalType": "bytes32",
                                    "name": "salt",
                                    "type": "bytes32"
                                }
                            ]
                        },
                        {
                            "internalType": "BalanceDelta",
                            "name": "",
                            "type": "int256"
                        },
                        {
                            "internalType": "BalanceDelta",
                            "name": "",
                            "type": "int256"
                        },
                        {
                            "internalType": "bytes",
                            "name": "",
                            "type": "bytes"
                        }
                    ],
                    "stateMutability": "nonpayable",
                    "type": "function",
                    "name": "afterAddLiquidity",
                    "outputs": [
                        {
                            "internalType": "bytes4",
                            "name": "",
                            "type": "bytes4"
                        },
                        {
                            "internalType": "BalanceDelta",
                            "name": "",
                            "type": "int256"
                        }
                    ]
                },
                {
                    "inputs": [
                        {
                            "internalType": "address",
                            "name": "",
                            "type": "address"
                        },
                        {
                            "internalType": "struct PoolKey",
                            "name": "",
                            "type": "tuple",
                            "components": [
                                {
                                    "internalType": "Currency",
                                    "name": "currency0",
                                    "type": "address"
                                },
                                {
                                    "internalType": "Currency",
                                    "name": "currency1",
                                    "type": "address"
                                },
                                {
                                    "internalType": "uint24",
                                    "name": "fee",
                                    "type": "uint24"
                                },
                                {
                                    "internalType": "int24",
                                    "name": "tickSpacing",
                                    "type": "int24"
                                },
                                {
                                    "internalType": "contract IHooks",
                                    "name": "hooks",
                                    "type": "address"
                                }
                            ]
                        },
                        {
                            "internalType": "uint256",
                            "name": "",
                            "type": "uint256"
                        },
                        {
                            "internalType": "uint256",
                            "name": "",
                            "type": "uint256"
                        },
                        {
                            "internalType": "bytes",
                            "name": "",
                            "type": "bytes"
                        }
                    ],
                    "stateMutability": "nonpayable",
                    "type": "function",
                    "name": "afterDonate",
                    "outputs": [
                        {
                            "internalType": "bytes4",
                            "name": "",
                            "type": "bytes4"
                        }
                    ]
                },
                {
                    "inputs": [
                        {
                            "internalType": "address",
                            "name": "",
                            "type": "address"
                        },
                        {
                            "internalType": "struct PoolKey",
                            "name": "key",
                            "type": "tuple",
                            "components": [
                                {
                                    "internalType": "Currency",
                                    "name": "currency0",
                                    "type": "address"
                                },
                                {
                                    "internalType": "Currency",
                                    "name": "currency1",
                                    "type": "address"
                                },
                                {
                                    "internalType": "uint24",
                                    "name": "fee",
                                    "type": "uint24"
                                },
                                {
                                    "internalType": "int24",
                                    "name": "tickSpacing",
                                    "type": "int24"
                                },
                                {
                                    "internalType": "contract IHooks",
                                    "name": "hooks",
                                    "type": "address"
                                }
                            ]
                        },
                        {
                            "internalType": "uint160",
                            "name": "",
                            "type": "uint160"
                        },
                        {
                            "internalType": "int24",
                            "name": "tick",
                            "type": "int24"
                        }
                    ],
                    "stateMutability": "nonpayable",
                    "type": "function",
                    "name": "afterInitialize",
                    "outputs": [
                        {
                            "internalType": "bytes4",
                            "name": "",
                            "type": "bytes4"
                        }
                    ]
                },
                {
                    "inputs": [
                        {
                            "internalType": "address",
                            "name": "",
                            "type": "address"
                        },
                        {
                            "internalType": "struct PoolKey",
                            "name": "",
                            "type": "tuple",
                            "components": [
                                {
                                    "internalType": "Currency",
                                    "name": "currency0",
                                    "type": "address"
                                },
                                {
                                    "internalType": "Currency",
                                    "name": "currency1",
                                    "type": "address"
                                },
                                {
                                    "internalType": "uint24",
                                    "name": "fee",
                                    "type": "uint24"
                                },
                                {
                                    "internalType": "int24",
                                    "name": "tickSpacing",
                                    "type": "int24"
                                },
                                {
                                    "internalType": "contract IHooks",
                                    "name": "hooks",
                                    "type": "address"
                                }
                            ]
                        },
                        {
                            "internalType": "struct IPoolManager.ModifyLiquidityParams",
                            "name": "",
                            "type": "tuple",
                            "components": [
                                {
                                    "internalType": "int24",
                                    "name": "tickLower",
                                    "type": "int24"
                                },
                                {
                                    "internalType": "int24",
                                    "name": "tickUpper",
                                    "type": "int24"
                                },
                                {
                                    "internalType": "int256",
                                    "name": "liquidityDelta",
                                    "type": "int256"
                                },
                                {
                                    "internalType": "bytes32",
                                    "name": "salt",
                                    "type": "bytes32"
                                }
                            ]
                        },
                        {
                            "internalType": "BalanceDelta",
                            "name": "",
                            "type": "int256"
                        },
                        {
                            "internalType": "BalanceDelta",
                            "name": "",
                            "type": "int256"
                        },
                        {
                            "internalType": "bytes",
                            "name": "",
                            "type": "bytes"
                        }
                    ],
                    "stateMutability": "nonpayable",
                    "type": "function",
                    "name": "afterRemoveLiquidity",
                    "outputs": [
                        {
                            "internalType": "bytes4",
                            "name": "",
                            "type": "bytes4"
                        },
                        {
                            "internalType": "BalanceDelta",
                            "name": "",
                            "type": "int256"
                        }
                    ]
                },
                {
                    "inputs": [
                        {
                            "internalType": "address",
                            "name": "sender",
                            "type": "address"
                        },
                        {
                            "internalType": "struct PoolKey",
                            "name": "key",
                            "type": "tuple",
                            "components": [
                                {
                                    "internalType": "Currency",
                                    "name": "currency0",
                                    "type": "address"
                                },
                                {
                                    "internalType": "Currency",
                                    "name": "currency1",
                                    "type": "address"
                                },
                                {
                                    "internalType": "uint24",
                                    "name": "fee",
                                    "type": "uint24"
                                },
                                {
                                    "internalType": "int24",
                                    "name": "tickSpacing",
                                    "type": "int24"
                                },
                                {
                                    "internalType": "contract IHooks",
                                    "name": "hooks",
                                    "type": "address"
                                }
                            ]
                        },
                        {
                            "internalType": "struct IPoolManager.SwapParams",
                            "name": "params",
                            "type": "tuple",
                            "components": [
                                {
                                    "internalType": "bool",
                                    "name": "zeroForOne",
                                    "type": "bool"
                                },
                                {
                                    "internalType": "int256",
                                    "name": "amountSpecified",
                                    "type": "int256"
                                },
                                {
                                    "internalType": "uint160",
                                    "name": "sqrtPriceLimitX96",
                                    "type": "uint160"
                                }
                            ]
                        },
                        {
                            "internalType": "BalanceDelta",
                            "name": "",
                            "type": "int256"
                        },
                        {
                            "internalType": "bytes",
                            "name": "",
                            "type": "bytes"
                        }
                    ],
                    "stateMutability": "nonpayable",
                    "type": "function",
                    "name": "afterSwap",
                    "outputs": [
                        {
                            "internalType": "bytes4",
                            "name": "",
                            "type": "bytes4"
                        },
                        {
                            "internalType": "int128",
                            "name": "",
                            "type": "int128"
                        }
                    ]
                },
                {
                    "inputs": [
                        {
                            "internalType": "address",
                            "name": "account",
                            "type": "address"
                        },
                        {
                            "internalType": "uint256",
                            "name": "id",
                            "type": "uint256"
                        }
                    ],
                    "stateMutability": "view",
                    "type": "function",
                    "name": "balanceOf",
                    "outputs": [
                        {
                            "internalType": "uint256",
                            "name": "",
                            "type": "uint256"
                        }
                    ]
                },
                {
                    "inputs": [
                        {
                            "internalType": "address[]",
                            "name": "accounts",
                            "type": "address[]"
                        },
                        {
                            "internalType": "uint256[]",
                            "name": "ids",
                            "type": "uint256[]"
                        }
                    ],
                    "stateMutability": "view",
                    "type": "function",
                    "name": "balanceOfBatch",
                    "outputs": [
                        {
                            "internalType": "uint256[]",
                            "name": "",
                            "type": "uint256[]"
                        }
                    ]
                },
                {
                    "inputs": [
                        {
                            "internalType": "address",
                            "name": "",
                            "type": "address"
                        },
                        {
                            "internalType": "struct PoolKey",
                            "name": "",
                            "type": "tuple",
                            "components": [
                                {
                                    "internalType": "Currency",
                                    "name": "currency0",
                                    "type": "address"
                                },
                                {
                                    "internalType": "Currency",
                                    "name": "currency1",
                                    "type": "address"
                                },
                                {
                                    "internalType": "uint24",
                                    "name": "fee",
                                    "type": "uint24"
                                },
                                {
                                    "internalType": "int24",
                                    "name": "tickSpacing",
                                    "type": "int24"
                                },
                                {
                                    "internalType": "contract IHooks",
                                    "name": "hooks",
                                    "type": "address"
                                }
                            ]
                        },
                        {
                            "internalType": "struct IPoolManager.ModifyLiquidityParams",
                            "name": "",
                            "type": "tuple",
                            "components": [
                                {
                                    "internalType": "int24",
                                    "name": "tickLower",
                                    "type": "int24"
                                },
                                {
                                    "internalType": "int24",
                                    "name": "tickUpper",
                                    "type": "int24"
                                },
                                {
                                    "internalType": "int256",
                                    "name": "liquidityDelta",
                                    "type": "int256"
                                },
                                {
                                    "internalType": "bytes32",
                                    "name": "salt",
                                    "type": "bytes32"
                                }
                            ]
                        },
                        {
                            "internalType": "bytes",
                            "name": "",
                            "type": "bytes"
                        }
                    ],
                    "stateMutability": "nonpayable",
                    "type": "function",
                    "name": "beforeAddLiquidity",
                    "outputs": [
                        {
                            "internalType": "bytes4",
                            "name": "",
                            "type": "bytes4"
                        }
                    ]
                },
                {
                    "inputs": [
                        {
                            "internalType": "address",
                            "name": "",
                            "type": "address"
                        },
                        {
                            "internalType": "struct PoolKey",
                            "name": "",
                            "type": "tuple",
                            "components": [
                                {
                                    "internalType": "Currency",
                                    "name": "currency0",
                                    "type": "address"
                                },
                                {
                                    "internalType": "Currency",
                                    "name": "currency1",
                                    "type": "address"
                                },
                                {
                                    "internalType": "uint24",
                                    "name": "fee",
                                    "type": "uint24"
                                },
                                {
                                    "internalType": "int24",
                                    "name": "tickSpacing",
                                    "type": "int24"
                                },
                                {
                                    "internalType": "contract IHooks",
                                    "name": "hooks",
                                    "type": "address"
                                }
                            ]
                        },
                        {
                            "internalType": "uint256",
                            "name": "",
                            "type": "uint256"
                        },
                        {
                            "internalType": "uint256",
                            "name": "",
                            "type": "uint256"
                        },
                        {
                            "internalType": "bytes",
                            "name": "",
                            "type": "bytes"
                        }
                    ],
                    "stateMutability": "nonpayable",
                    "type": "function",
                    "name": "beforeDonate",
                    "outputs": [
                        {
                            "internalType": "bytes4",
                            "name": "",
                            "type": "bytes4"
                        }
                    ]
                },
                {
                    "inputs": [
                        {
                            "internalType": "address",
                            "name": "",
                            "type": "address"
                        },
                        {
                            "internalType": "struct PoolKey",
                            "name": "",
                            "type": "tuple",
                            "components": [
                                {
                                    "internalType": "Currency",
                                    "name": "currency0",
                                    "type": "address"
                                },
                                {
                                    "internalType": "Currency",
                                    "name": "currency1",
                                    "type": "address"
                                },
                                {
                                    "internalType": "uint24",
                                    "name": "fee",
                                    "type": "uint24"
                                },
                                {
                                    "internalType": "int24",
                                    "name": "tickSpacing",
                                    "type": "int24"
                                },
                                {
                                    "internalType": "contract IHooks",
                                    "name": "hooks",
                                    "type": "address"
                                }
                            ]
                        },
                        {
                            "internalType": "uint160",
                            "name": "",
                            "type": "uint160"
                        }
                    ],
                    "stateMutability": "nonpayable",
                    "type": "function",
                    "name": "beforeInitialize",
                    "outputs": [
                        {
                            "internalType": "bytes4",
                            "name": "",
                            "type": "bytes4"
                        }
                    ]
                },
                {
                    "inputs": [
                        {
                            "internalType": "address",
                            "name": "",
                            "type": "address"
                        },
                        {
                            "internalType": "struct PoolKey",
                            "name": "",
                            "type": "tuple",
                            "components": [
                                {
                                    "internalType": "Currency",
                                    "name": "currency0",
                                    "type": "address"
                                },
                                {
                                    "internalType": "Currency",
                                    "name": "currency1",
                                    "type": "address"
                                },
                                {
                                    "internalType": "uint24",
                                    "name": "fee",
                                    "type": "uint24"
                                },
                                {
                                    "internalType": "int24",
                                    "name": "tickSpacing",
                                    "type": "int24"
                                },
                                {
                                    "internalType": "contract IHooks",
                                    "name": "hooks",
                                    "type": "address"
                                }
                            ]
                        },
                        {
                            "internalType": "struct IPoolManager.ModifyLiquidityParams",
                            "name": "",
                            "type": "tuple",
                            "components": [
                                {
                                    "internalType": "int24",
                                    "name": "tickLower",
                                    "type": "int24"
                                },
                                {
                                    "internalType": "int24",
                                    "name": "tickUpper",
                                    "type": "int24"
                                },
                                {
                                    "internalType": "int256",
                                    "name": "liquidityDelta",
                                    "type": "int256"
                                },
                                {
                                    "internalType": "bytes32",
                                    "name": "salt",
                                    "type": "bytes32"
                                }
                            ]
                        },
                        {
                            "internalType": "bytes",
                            "name": "",
                            "type": "bytes"
                        }
                    ],
                    "stateMutability": "nonpayable",
                    "type": "function",
                    "name": "beforeRemoveLiquidity",
                    "outputs": [
                        {
                            "internalType": "bytes4",
                            "name": "",
                            "type": "bytes4"
                        }
                    ]
                },
                {
                    "inputs": [
                        {
                            "internalType": "address",
                            "name": "",
                            "type": "address"
                        },
                        {
                            "internalType": "struct PoolKey",
                            "name": "",
                            "type": "tuple",
                            "components": [
                                {
                                    "internalType": "Currency",
                                    "name": "currency0",
                                    "type": "address"
                                },
                                {
                                    "internalType": "Currency",
                                    "name": "currency1",
                                    "type": "address"
                                },
                                {
                                    "internalType": "uint24",
                                    "name": "fee",
                                    "type": "uint24"
                                },
                                {
                                    "internalType": "int24",
                                    "name": "tickSpacing",
                                    "type": "int24"
                                },
                                {
                                    "internalType": "contract IHooks",
                                    "name": "hooks",
                                    "type": "address"
                                }
                            ]
                        },
                        {
                            "internalType": "struct IPoolManager.SwapParams",
                            "name": "",
                            "type": "tuple",
                            "components": [
                                {
                                    "internalType": "bool",
                                    "name": "zeroForOne",
                                    "type": "bool"
                                },
                                {
                                    "internalType": "int256",
                                    "name": "amountSpecified",
                                    "type": "int256"
                                },
                                {
                                    "internalType": "uint160",
                                    "name": "sqrtPriceLimitX96",
                                    "type": "uint160"
                                }
                            ]
                        },
                        {
                            "internalType": "bytes",
                            "name": "",
                            "type": "bytes"
                        }
                    ],
                    "stateMutability": "nonpayable",
                    "type": "function",
                    "name": "beforeSwap",
                    "outputs": [
                        {
                            "internalType": "bytes4",
                            "name": "",
                            "type": "bytes4"
                        },
                        {
                            "internalType": "BeforeSwapDelta",
                            "name": "",
                            "type": "int256"
                        },
                        {
                            "internalType": "uint24",
                            "name": "",
                            "type": "uint24"
                        }
                    ]
                },
                {
                    "inputs": [
                        {
                            "internalType": "struct PoolKey",
                            "name": "key",
                            "type": "tuple",
                            "components": [
                                {
                                    "internalType": "Currency",
                                    "name": "currency0",
                                    "type": "address"
                                },
                                {
                                    "internalType": "Currency",
                                    "name": "currency1",
                                    "type": "address"
                                },
                                {
                                    "internalType": "uint24",
                                    "name": "fee",
                                    "type": "uint24"
                                },
                                {
                                    "internalType": "int24",
                                    "name": "tickSpacing",
                                    "type": "int24"
                                },
                                {
                                    "internalType": "contract IHooks",
                                    "name": "hooks",
                                    "type": "address"
                                }
                            ]
                        },
                        {
                            "internalType": "int24",
                            "name": "tickToSellAt",
                            "type": "int24"
                        },
                        {
                            "internalType": "bool",
                            "name": "zeroForOne",
                            "type": "bool"
                        }
                    ],
                    "stateMutability": "nonpayable",
                    "type": "function",
                    "name": "cancelOrder"
                },
                {
                    "inputs": [
                        {
                            "internalType": "uint256",
                            "name": "positionId",
                            "type": "uint256"
                        }
                    ],
                    "stateMutability": "view",
                    "type": "function",
                    "name": "claimTokensSupply",
                    "outputs": [
                        {
                            "internalType": "uint256",
                            "name": "claimsSupply",
                            "type": "uint256"
                        }
                    ]
                },
                {
                    "inputs": [
                        {
                            "internalType": "uint256",
                            "name": "positionId",
                            "type": "uint256"
                        }
                    ],
                    "stateMutability": "view",
                    "type": "function",
                    "name": "claimableOutputTokens",
                    "outputs": [
                        {
                            "internalType": "uint256",
                            "name": "outputClaimable",
                            "type": "uint256"
                        }
                    ]
                },
                {
                    "inputs": [],
                    "stateMutability": "pure",
                    "type": "function",
                    "name": "getHookPermissions",
                    "outputs": [
                        {
                            "internalType": "struct Hooks.Permissions",
                            "name": "",
                            "type": "tuple",
                            "components": [
                                {
                                    "internalType": "bool",
                                    "name": "beforeInitialize",
                                    "type": "bool"
                                },
                                {
                                    "internalType": "bool",
                                    "name": "afterInitialize",
                                    "type": "bool"
                                },
                                {
                                    "internalType": "bool",
                                    "name": "beforeAddLiquidity",
                                    "type": "bool"
                                },
                                {
                                    "internalType": "bool",
                                    "name": "afterAddLiquidity",
                                    "type": "bool"
                                },
                                {
                                    "internalType": "bool",
                                    "name": "beforeRemoveLiquidity",
                                    "type": "bool"
                                },
                                {
                                    "internalType": "bool",
                                    "name": "afterRemoveLiquidity",
                                    "type": "bool"
                                },
                                {
                                    "internalType": "bool",
                                    "name": "beforeSwap",
                                    "type": "bool"
                                },
                                {
                                    "internalType": "bool",
                                    "name": "afterSwap",
                                    "type": "bool"
                                },
                                {
                                    "internalType": "bool",
                                    "name": "beforeDonate",
                                    "type": "bool"
                                },
                                {
                                    "internalType": "bool",
                                    "name": "afterDonate",
                                    "type": "bool"
                                },
                                {
                                    "internalType": "bool",
                                    "name": "beforeSwapReturnDelta",
                                    "type": "bool"
                                },
                                {
                                    "internalType": "bool",
                                    "name": "afterSwapReturnDelta",
                                    "type": "bool"
                                },
                                {
                                    "internalType": "bool",
                                    "name": "afterAddLiquidityReturnDelta",
                                    "type": "bool"
                                },
                                {
                                    "internalType": "bool",
                                    "name": "afterRemoveLiquidityReturnDelta",
                                    "type": "bool"
                                }
                            ]
                        }
                    ]
                },
                {
                    "inputs": [
                        {
                            "internalType": "struct PoolKey",
                            "name": "key",
                            "type": "tuple",
                            "components": [
                                {
                                    "internalType": "Currency",
                                    "name": "currency0",
                                    "type": "address"
                                },
                                {
                                    "internalType": "Currency",
                                    "name": "currency1",
                                    "type": "address"
                                },
                                {
                                    "internalType": "uint24",
                                    "name": "fee",
                                    "type": "uint24"
                                },
                                {
                                    "internalType": "int24",
                                    "name": "tickSpacing",
                                    "type": "int24"
                                },
                                {
                                    "internalType": "contract IHooks",
                                    "name": "hooks",
                                    "type": "address"
                                }
                            ]
                        },
                        {
                            "internalType": "int24",
                            "name": "tick",
                            "type": "int24"
                        },
                        {
                            "internalType": "bool",
                            "name": "zeroForOne",
                            "type": "bool"
                        }
                    ],
                    "stateMutability": "pure",
                    "type": "function",
                    "name": "getPositionId",
                    "outputs": [
                        {
                            "internalType": "uint256",
                            "name": "",
                            "type": "uint256"
                        }
                    ]
                },
                {
                    "inputs": [
                        {
                            "internalType": "address",
                            "name": "account",
                            "type": "address"
                        },
                        {
                            "internalType": "address",
                            "name": "operator",
                            "type": "address"
                        }
                    ],
                    "stateMutability": "view",
                    "type": "function",
                    "name": "isApprovedForAll",
                    "outputs": [
                        {
                            "internalType": "bool",
                            "name": "",
                            "type": "bool"
                        }
                    ]
                },
                {
                    "inputs": [
                        {
                            "internalType": "PoolId",
                            "name": "poolId",
                            "type": "bytes32"
                        }
                    ],
                    "stateMutability": "view",
                    "type": "function",
                    "name": "lastTicks",
                    "outputs": [
                        {
                            "internalType": "int24",
                            "name": "lastTick",
                            "type": "int24"
                        }
                    ]
                },
                {
                    "inputs": [
                        {
                            "internalType": "PoolId",
                            "name": "poolId",
                            "type": "bytes32"
                        },
                        {
                            "internalType": "int24",
                            "name": "tickToSellAt",
                            "type": "int24"
                        },
                        {
                            "internalType": "bool",
                            "name": "zeroForOne",
                            "type": "bool"
                        }
                    ],
                    "stateMutability": "view",
                    "type": "function",
                    "name": "pendingOrders",
                    "outputs": [
                        {
                            "internalType": "uint256",
                            "name": "inputAmount",
                            "type": "uint256"
                        }
                    ]
                },
                {
                    "inputs": [
                        {
                            "internalType": "struct PoolKey",
                            "name": "key",
                            "type": "tuple",
                            "components": [
                                {
                                    "internalType": "Currency",
                                    "name": "currency0",
                                    "type": "address"
                                },
                                {
                                    "internalType": "Currency",
                                    "name": "currency1",
                                    "type": "address"
                                },
                                {
                                    "internalType": "uint24",
                                    "name": "fee",
                                    "type": "uint24"
                                },
                                {
                                    "internalType": "int24",
                                    "name": "tickSpacing",
                                    "type": "int24"
                                },
                                {
                                    "internalType": "contract IHooks",
                                    "name": "hooks",
                                    "type": "address"
                                }
                            ]
                        },
                        {
                            "internalType": "int24",
                            "name": "tickToSellAt",
                            "type": "int24"
                        },
                        {
                            "internalType": "bool",
                            "name": "zeroForOne",
                            "type": "bool"
                        },
                        {
                            "internalType": "uint256",
                            "name": "inputAmount",
                            "type": "uint256"
                        }
                    ],
                    "stateMutability": "nonpayable",
                    "type": "function",
                    "name": "placeOrder",
                    "outputs": [
                        {
                            "internalType": "int24",
                            "name": "",
                            "type": "int24"
                        }
                    ]
                },
                {
                    "inputs": [],
                    "stateMutability": "view",
                    "type": "function",
                    "name": "poolManager",
                    "outputs": [
                        {
                            "internalType": "contract IPoolManager",
                            "name": "",
                            "type": "address"
                        }
                    ]
                },
                {
                    "inputs": [
                        {
                            "internalType": "struct PoolKey",
                            "name": "key",
                            "type": "tuple",
                            "components": [
                                {
                                    "internalType": "Currency",
                                    "name": "currency0",
                                    "type": "address"
                                },
                                {
                                    "internalType": "Currency",
                                    "name": "currency1",
                                    "type": "address"
                                },
                                {
                                    "internalType": "uint24",
                                    "name": "fee",
                                    "type": "uint24"
                                },
                                {
                                    "internalType": "int24",
                                    "name": "tickSpacing",
                                    "type": "int24"
                                },
                                {
                                    "internalType": "contract IHooks",
                                    "name": "hooks",
                                    "type": "address"
                                }
                            ]
                        },
                        {
                            "internalType": "int24",
                            "name": "tickToSellAt",
                            "type": "int24"
                        },
                        {
                            "internalType": "bool",
                            "name": "zeroForOne",
                            "type": "bool"
                        },
                        {
                            "internalType": "uint256",
                            "name": "inputAmountToClaimFor",
                            "type": "uint256"
                        }
                    ],
                    "stateMutability": "nonpayable",
                    "type": "function",
                    "name": "redeem"
                },
                {
                    "inputs": [
                        {
                            "internalType": "address",
                            "name": "from",
                            "type": "address"
                        },
                        {
                            "internalType": "address",
                            "name": "to",
                            "type": "address"
                        },
                        {
                            "internalType": "uint256[]",
                            "name": "ids",
                            "type": "uint256[]"
                        },
                        {
                            "internalType": "uint256[]",
                            "name": "values",
                            "type": "uint256[]"
                        },
                        {
                            "internalType": "bytes",
                            "name": "data",
                            "type": "bytes"
                        }
                    ],
                    "stateMutability": "nonpayable",
                    "type": "function",
                    "name": "safeBatchTransferFrom"
                },
                {
                    "inputs": [
                        {
                            "internalType": "address",
                            "name": "from",
                            "type": "address"
                        },
                        {
                            "internalType": "address",
                            "name": "to",
                            "type": "address"
                        },
                        {
                            "internalType": "uint256",
                            "name": "id",
                            "type": "uint256"
                        },
                        {
                            "internalType": "uint256",
                            "name": "value",
                            "type": "uint256"
                        },
                        {
                            "internalType": "bytes",
                            "name": "data",
                            "type": "bytes"
                        }
                    ],
                    "stateMutability": "nonpayable",
                    "type": "function",
                    "name": "safeTransferFrom"
                },
                {
                    "inputs": [
                        {
                            "internalType": "address",
                            "name": "operator",
                            "type": "address"
                        },
                        {
                            "internalType": "bool",
                            "name": "approved",
                            "type": "bool"
                        }
                    ],
                    "stateMutability": "nonpayable",
                    "type": "function",
                    "name": "setApprovalForAll"
                },
                {
                    "inputs": [
                        {
                            "internalType": "bytes4",
                            "name": "interfaceId",
                            "type": "bytes4"
                        }
                    ],
                    "stateMutability": "view",
                    "type": "function",
                    "name": "supportsInterface",
                    "outputs": [
                        {
                            "internalType": "bool",
                            "name": "",
                            "type": "bool"
                        }
                    ]
                },
                {
                    "inputs": [
                        {
                            "internalType": "bytes",
                            "name": "data",
                            "type": "bytes"
                        }
                    ],
                    "stateMutability": "nonpayable",
                    "type": "function",
                    "name": "unlockCallback",
                    "outputs": [
                        {
                            "internalType": "bytes",
                            "name": "",
                            "type": "bytes"
                        }
                    ]
                },
                {
                    "inputs": [
                        {
                            "internalType": "uint256",
                            "name": "",
                            "type": "uint256"
                        }
                    ],
                    "stateMutability": "view",
                    "type": "function",
                    "name": "uri",
                    "outputs": [
                        {
                            "internalType": "string",
                            "name": "",
                            "type": "string"
                        }
                    ]
                }
            ],
            "devdoc": {
                "kind": "dev",
                "methods": {
                    "afterAddLiquidity(address,(address,address,uint24,int24,address),(int24,int24,int256,bytes32),int256,int256,bytes)": {
                        "params": {
                            "delta": "The caller's balance delta after adding liquidity; the sum of principal delta, fees accrued, and hook delta",
                            "feesAccrued": "The fees accrued since the last time fees were collected from this position",
                            "hookData": "Arbitrary data handed into the PoolManager by the liquidity provider to be passed on to the hook",
                            "key": "The key for the pool",
                            "params": "The parameters for adding liquidity",
                            "sender": "The initial msg.sender for the add liquidity call"
                        },
                        "returns": {
                            "_0": "bytes4 The function selector for the hook",
                            "_1": "BalanceDelta The hook's delta in token0 and token1. Positive: the hook is owed/took currency, negative: the hook owes/sent currency"
                        }
                    },
                    "afterDonate(address,(address,address,uint24,int24,address),uint256,uint256,bytes)": {
                        "params": {
                            "amount0": "The amount of token0 being donated",
                            "amount1": "The amount of token1 being donated",
                            "hookData": "Arbitrary data handed into the PoolManager by the donor to be be passed on to the hook",
                            "key": "The key for the pool",
                            "sender": "The initial msg.sender for the donate call"
                        },
                        "returns": {
                            "_0": "bytes4 The function selector for the hook"
                        }
                    },
                    "afterRemoveLiquidity(address,(address,address,uint24,int24,address),(int24,int24,int256,bytes32),int256,int256,bytes)": {
                        "params": {
                            "delta": "The caller's balance delta after adding liquidity; the sum of principal delta, fees accrued, and hook delta",
                            "feesAccrued": "The fees accrued since the last time fees were collected from this position",
                            "hookData": "Arbitrary data handed into the PoolManager by the liquidity provider to be be passed on to the hook",
                            "key": "The key for the pool",
                            "params": "The parameters for removing liquidity",
                            "sender": "The initial msg.sender for the remove liquidity call"
                        },
                        "returns": {
                            "_0": "bytes4 The function selector for the hook",
                            "_1": "BalanceDelta The hook's delta in token0 and token1. Positive: the hook is owed/took currency, negative: the hook owes/sent currency"
                        }
                    },
                    "balanceOf(address,uint256)": {
                        "details": "See {IERC1155-balanceOf}."
                    },
                    "balanceOfBatch(address[],uint256[])": {
                        "details": "See {IERC1155-balanceOfBatch}. Requirements: - `accounts` and `ids` must have the same length."
                    },
                    "beforeAddLiquidity(address,(address,address,uint24,int24,address),(int24,int24,int256,bytes32),bytes)": {
                        "params": {
                            "hookData": "Arbitrary data handed into the PoolManager by the liquidity provider to be passed on to the hook",
                            "key": "The key for the pool",
                            "params": "The parameters for adding liquidity",
                            "sender": "The initial msg.sender for the add liquidity call"
                        },
                        "returns": {
                            "_0": "bytes4 The function selector for the hook"
                        }
                    },
                    "beforeDonate(address,(address,address,uint24,int24,address),uint256,uint256,bytes)": {
                        "params": {
                            "amount0": "The amount of token0 being donated",
                            "amount1": "The amount of token1 being donated",
                            "hookData": "Arbitrary data handed into the PoolManager by the donor to be be passed on to the hook",
                            "key": "The key for the pool",
                            "sender": "The initial msg.sender for the donate call"
                        },
                        "returns": {
                            "_0": "bytes4 The function selector for the hook"
                        }
                    },
                    "beforeInitialize(address,(address,address,uint24,int24,address),uint160)": {
                        "params": {
                            "key": "The key for the pool being initialized",
                            "sender": "The initial msg.sender for the initialize call",
                            "sqrtPriceX96": "The sqrt(price) of the pool as a Q64.96"
                        },
                        "returns": {
                            "_0": "bytes4 The function selector for the hook"
                        }
                    },
                    "beforeRemoveLiquidity(address,(address,address,uint24,int24,address),(int24,int24,int256,bytes32),bytes)": {
                        "params": {
                            "hookData": "Arbitrary data handed into the PoolManager by the liquidity provider to be be passed on to the hook",
                            "key": "The key for the pool",
                            "params": "The parameters for removing liquidity",
                            "sender": "The initial msg.sender for the remove liquidity call"
                        },
                        "returns": {
                            "_0": "bytes4 The function selector for the hook"
                        }
                    },
                    "beforeSwap(address,(address,address,uint24,int24,address),(bool,int256,uint160),bytes)": {
                        "params": {
                            "hookData": "Arbitrary data handed into the PoolManager by the swapper to be be passed on to the hook",
                            "key": "The key for the pool",
                            "params": "The parameters for the swap",
                            "sender": "The initial msg.sender for the swap call"
                        },
                        "returns": {
                            "_0": "bytes4 The function selector for the hook",
                            "_1": "BeforeSwapDelta The hook's delta in specified and unspecified currencies. Positive: the hook is owed/took currency, negative: the hook owes/sent currency",
                            "_2": "uint24 Optionally override the lp fee, only used if three conditions are met: 1. the Pool has a dynamic fee, 2. the value's 2nd highest bit is set (23rd bit, 0x400000), and 3. the value is less than or equal to the maximum fee (1 million)"
                        }
                    },
                    "getHookPermissions()": {
                        "details": "Used at deployment to validate the address correctly represents the expected permissions"
                    },
                    "isApprovedForAll(address,address)": {
                        "details": "See {IERC1155-isApprovedForAll}."
                    },
                    "safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": {
                        "details": "See {IERC1155-safeBatchTransferFrom}."
                    },
                    "safeTransferFrom(address,address,uint256,uint256,bytes)": {
                        "details": "See {IERC1155-safeTransferFrom}."
                    },
                    "setApprovalForAll(address,bool)": {
                        "details": "See {IERC1155-setApprovalForAll}."
                    },
                    "supportsInterface(bytes4)": {
                        "details": "See {IERC165-supportsInterface}."
                    },
                    "unlockCallback(bytes)": {
                        "details": "We force the onlyPoolManager modifier by exposing a virtual function after the onlyPoolManager check.",
                        "params": {
                            "data": "The data that was passed to the call to unlock"
                        },
                        "returns": {
                            "_0": "Any data that you want to be returned from the unlock call"
                        }
                    },
                    "uri(uint256)": {
                        "details": "See {IERC1155MetadataURI-uri}. This implementation returns the same URI for *all* token types. It relies on the token type ID substitution mechanism https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the EIP]. Clients calling this function must replace the `\\{id\\}` substring with the actual token type ID."
                    }
                },
                "version": 1
            },
            "userdoc": {
                "kind": "user",
                "methods": {
                    "afterAddLiquidity(address,(address,address,uint24,int24,address),(int24,int24,int256,bytes32),int256,int256,bytes)": {
                        "notice": "The hook called after liquidity is added"
                    },
                    "afterDonate(address,(address,address,uint24,int24,address),uint256,uint256,bytes)": {
                        "notice": "The hook called after donate"
                    },
                    "afterRemoveLiquidity(address,(address,address,uint24,int24,address),(int24,int24,int256,bytes32),int256,int256,bytes)": {
                        "notice": "The hook called after liquidity is removed"
                    },
                    "beforeAddLiquidity(address,(address,address,uint24,int24,address),(int24,int24,int256,bytes32),bytes)": {
                        "notice": "The hook called before liquidity is added"
                    },
                    "beforeDonate(address,(address,address,uint24,int24,address),uint256,uint256,bytes)": {
                        "notice": "The hook called before donate"
                    },
                    "beforeInitialize(address,(address,address,uint24,int24,address),uint160)": {
                        "notice": "The hook called before the state of a pool is initialized"
                    },
                    "beforeRemoveLiquidity(address,(address,address,uint24,int24,address),(int24,int24,int256,bytes32),bytes)": {
                        "notice": "The hook called before liquidity is removed"
                    },
                    "beforeSwap(address,(address,address,uint24,int24,address),(bool,int256,uint160),bytes)": {
                        "notice": "The hook called before a swap"
                    },
                    "getHookPermissions()": {
                        "notice": "Returns a struct of permissions to signal which hook functions are to be implemented"
                    },
                    "poolManager()": {
                        "notice": "The Uniswap v4 PoolManager contract"
                    },
                    "unlockCallback(bytes)": {
                        "notice": "Called by the pool manager on `msg.sender` when the manager is unlocked"
                    }
                },
                "version": 1
            }
        },
        "settings": {
            "remappings": [
                "@ensdomains/=lib/v4-periphery/lib/v4-core/node_modules/@ensdomains/",
                "@openzeppelin/=lib/v4-periphery/lib/v4-core/lib/openzeppelin-contracts/",
                "@openzeppelin/contracts/=lib/v4-periphery/lib/v4-core/lib/openzeppelin-contracts/contracts/",
                "@uniswap/v4-core/=lib/v4-periphery/lib/v4-core/",
                "ds-test/=lib/v4-periphery/lib/v4-core/lib/forge-std/lib/ds-test/src/",
                "erc4626-tests/=lib/v4-periphery/lib/v4-core/lib/openzeppelin-contracts/lib/erc4626-tests/",
                "forge-gas-snapshot/=lib/v4-periphery/lib/v4-core/lib/forge-gas-snapshot/src/",
                "forge-std/=lib/forge-std/src/",
                "hardhat/=lib/v4-periphery/lib/v4-core/node_modules/hardhat/",
                "openzeppelin-contracts/=lib/v4-periphery/lib/v4-core/lib/openzeppelin-contracts/",
                "permit2/=lib/v4-periphery/lib/permit2/",
                "solmate/=lib/v4-periphery/lib/v4-core/lib/solmate/",
                "v4-core/=lib/v4-periphery/lib/v4-core/src/",
                "v4-periphery/=lib/v4-periphery/"
            ],
            "optimizer": {
                "enabled": true,
                "runs": 800
            },
            "metadata": {
                "bytecodeHash": "ipfs"
            },
            "compilationTarget": {
                "src/TakeProfitsHook.sol": "TakeProfitsHook"
            },
            "evmVersion": "cancun",
            "libraries": {}
        },
        "sources": {
            "lib/v4-periphery/lib/v4-core/lib/openzeppelin-contracts/contracts/interfaces/draft-IERC6093.sol": {
                "keccak256": "0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7",
                "urls": [
                    "bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f",
                    "dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt"
                ],
                "license": "MIT"
            },
            "lib/v4-periphery/lib/v4-core/lib/openzeppelin-contracts/contracts/token/ERC1155/ERC1155.sol": {
                "keccak256": "0xd9b0b8ee1ac6dfee14eb1ad4383a4739dbaa0f2036594bb3a16f0408085dadde",
                "urls": [
                    "bzz-raw://6309805132e519162d1134c67df22dd963323a9208b4f41344a4c13ed63c1026",
                    "dweb:/ipfs/QmTBPHnf6qbtAD4NVnKVFmubUHRqMDPLkseR6apxTUpsQo"
                ],
                "license": "MIT"
            },
            "lib/v4-periphery/lib/v4-core/lib/openzeppelin-contracts/contracts/token/ERC1155/IERC1155.sol": {
                "keccak256": "0x6caffc9cfdc623eca9f87a686071708af5d5c17454d65022843fdddbc53c0cce",
                "urls": [
                    "bzz-raw://ecf8c7ed1f8ff443c181f64496ae380ee02e61dcd2ed120e1e997837a926f182",
                    "dweb:/ipfs/QmWASYTrZPF2MrcpC3EBmxx6RgtZ5Fr4jwrsmB7ZF7qhDC"
                ],
                "license": "MIT"
            },
            "lib/v4-periphery/lib/v4-core/lib/openzeppelin-contracts/contracts/token/ERC1155/IERC1155Receiver.sol": {
                "keccak256": "0xb69597a63b202e28401128bed6a6d259e8730191274471af7303eafb247881a3",
                "urls": [
                    "bzz-raw://25addbda49a578b3318130585601344c5149a5549d749adf88e9685349a46b23",
                    "dweb:/ipfs/Qme2DuD8gpsve1ZvaSMQpBwMdpU7yAtekDwr7gUp8dX4zX"
                ],
                "license": "MIT"
            },
            "lib/v4-periphery/lib/v4-core/lib/openzeppelin-contracts/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol": {
                "keccak256": "0xe92b5e199b963d108ad6e06feeede151ba23849e0d064956535489ff967ffe68",
                "urls": [
                    "bzz-raw://280e17738a67b06dae02fec32982bd48a8ab71d8df95e9975ae03532634bc522",
                    "dweb:/ipfs/QmecjsNcFgy2mMjuNfRDkLpAYMRWnh5o73fw1Bj2rCso2z"
                ],
                "license": "MIT"
            },
            "lib/v4-periphery/lib/v4-core/lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol": {
                "keccak256": "0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70",
                "urls": [
                    "bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c",
                    "dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq"
                ],
                "license": "MIT"
            },
            "lib/v4-periphery/lib/v4-core/lib/openzeppelin-contracts/contracts/utils/Arrays.sol": {
                "keccak256": "0x8806d620b6571932b662cfd48fbd518d4f70df1f88a23b5724cacde64a77bda1",
                "urls": [
                    "bzz-raw://8043304c8f9e1c1dc4a41935efa067daa77ad7abbae1fda41f015d53fbf327a5",
                    "dweb:/ipfs/QmTrF2hSkRZoN9EEu8zdEhBpGNZ7RxzCdXf9ydzc2HQ3tM"
                ],
                "license": "MIT"
            },
            "lib/v4-periphery/lib/v4-core/lib/openzeppelin-contracts/contracts/utils/Context.sol": {
                "keccak256": "0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2",
                "urls": [
                    "bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12",
                    "dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF"
                ],
                "license": "MIT"
            },
            "lib/v4-periphery/lib/v4-core/lib/openzeppelin-contracts/contracts/utils/StorageSlot.sol": {
                "keccak256": "0x32ba59b4b7299237c8ba56319110989d7978a039faf754793064e967e5894418",
                "urls": [
                    "bzz-raw://1ae50c8b562427df610cc4540c9bf104acca7ef8e2dcae567ae7e52272281e9c",
                    "dweb:/ipfs/QmTHiadFCSJUPpRjNegc5SahmeU8bAoY8i9Aq6tVscbcKR"
                ],
                "license": "MIT"
            },
            "lib/v4-periphery/lib/v4-core/lib/openzeppelin-contracts/contracts/utils/introspection/ERC165.sol": {
                "keccak256": "0x9e8778b14317ba9e256c30a76fd6c32b960af621987f56069e1e819c77c6a133",
                "urls": [
                    "bzz-raw://1777404f1dcd0fac188e55a288724ec3c67b45288e49cc64723e95e702b49ab8",
                    "dweb:/ipfs/QmZFdC626GButBApwDUvvTnUzdinevC3B24d7yyh57XkiA"
                ],
                "license": "MIT"
            },
            "lib/v4-periphery/lib/v4-core/lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol": {
                "keccak256": "0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b",
                "urls": [
                    "bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df",
                    "dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL"
                ],
                "license": "MIT"
            },
            "lib/v4-periphery/lib/v4-core/lib/openzeppelin-contracts/contracts/utils/math/Math.sol": {
                "keccak256": "0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d",
                "urls": [
                    "bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875",
                    "dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L"
                ],
                "license": "MIT"
            },
            "lib/v4-periphery/lib/v4-core/lib/solmate/src/utils/FixedPointMathLib.sol": {
                "keccak256": "0x1b62af9baf5b8e991ed7531bc87f45550ba9d61e8dbff5caf237ccaf3a3fd843",
                "urls": [
                    "bzz-raw://b7b38b977c5305b18ceefbeed4c9ceaaaefa419b520de62de6604ea661f8c0a9",
                    "dweb:/ipfs/QmecMRzgfMyDVa2pvBqMMDLYBappaj7Aa3qcMoQYEQrhWi"
                ],
                "license": "AGPL-3.0-only"
            },
            "lib/v4-periphery/lib/v4-core/src/interfaces/IExtsload.sol": {
                "keccak256": "0x80b53ca4907d6f0088c3b931f2b72cad1dc4615a95094d96bd0fb8dff8d5ba43",
                "urls": [
                    "bzz-raw://375c69148622aab7a3537d5fd37d373a8e9731022c8d87bdaee46233b0a99fe1",
                    "dweb:/ipfs/QmXFjdoYRxsA5B1kyuxEXgNf3FBoL1zPvy26Qy8EtpdFRN"
                ],
                "license": "MIT"
            },
            "lib/v4-periphery/lib/v4-core/src/interfaces/IExttload.sol": {
                "keccak256": "0xc6b68283ebd8d1c789df536756726eed51c589134bb20821b236a0d22a135937",
                "urls": [
                    "bzz-raw://294394f72dfc219689209f4130d85601dfd0d63c8d47578050d312db70f9b6c8",
                    "dweb:/ipfs/QmTDMQ3oxCGHgEBU48a3Lp4S1rRjc8vVCxkhE5ZNej1bsY"
                ],
                "license": "MIT"
            },
            "lib/v4-periphery/lib/v4-core/src/interfaces/IHooks.sol": {
                "keccak256": "0x556e093b73b1002371eb3cbc1f182e7ca948def61c321d2d566bdca7ab257697",
                "urls": [
                    "bzz-raw://3af364d5189171800768f7a7b9c47d6714fe8e0532ac755ed1e22c91c17dabea",
                    "dweb:/ipfs/QmX6kqyyRrHWZSg55PSnY8U5FAnMMhGA7Jwmj5uHGAcxcL"
                ],
                "license": "MIT"
            },
            "lib/v4-periphery/lib/v4-core/src/interfaces/IPoolManager.sol": {
                "keccak256": "0xd682b9f3a6c6908c252a6bea95b7cf6631395dc6cff427e16af97210aedba854",
                "urls": [
                    "bzz-raw://e52c885e336ddafcb3deea6cafafd0c5a469affa2013741cd021a87f8cf9f25e",
                    "dweb:/ipfs/QmaAz8rqdpUY7hhN55Gwr5cF1fH7ZrNuVzXaEqqdzHCKGS"
                ],
                "license": "MIT"
            },
            "lib/v4-periphery/lib/v4-core/src/interfaces/IProtocolFeeController.sol": {
                "keccak256": "0xc2d7f3605da9767e36cf25d4d4fa9b95663a6659e26ce28cf29b8b88acb79a4c",
                "urls": [
                    "bzz-raw://c7a43cda35b8a9254ed3e46cfd8649361f09121d17ef554bd3d190b9a8d57cc6",
                    "dweb:/ipfs/QmRBDQoqCWddH5hY1JdxMyYtY8jMZhWAwtuFJBc3r8V31G"
                ],
                "license": "MIT"
            },
            "lib/v4-periphery/lib/v4-core/src/interfaces/IProtocolFees.sol": {
                "keccak256": "0x8fc7260b141b65a5c3dc70ab869dce5725f1677075d2a51df293825170495c29",
                "urls": [
                    "bzz-raw://ed86c9fe65d6bc88dec37bdb56338a5da3ead74bfa71b106f7c484d3f860e0a7",
                    "dweb:/ipfs/QmQAx3YCg5JiCuz9kXyuqe1Y5B4zqiq5zgn5cKLhoK5Qrk"
                ],
                "license": "MIT"
            },
            "lib/v4-periphery/lib/v4-core/src/interfaces/callback/IUnlockCallback.sol": {
                "keccak256": "0x58c82f2bd9d7c097ed09bd0991fedc403b0ec270eb3d0158bfb095c06a03d719",
                "urls": [
                    "bzz-raw://91168ca26a10980df2cdc3fbfe8ddf372c002b7ef19e3c59a0c9870d64198f1b",
                    "dweb:/ipfs/QmUSpaM825vd1SwvF38esgbdLgYiPwefKaFERTWvUi6uSK"
                ],
                "license": "MIT"
            },
            "lib/v4-periphery/lib/v4-core/src/interfaces/external/IERC20Minimal.sol": {
                "keccak256": "0xc1c23330c1511ecfd45c67a683962b4e2555b82f1dacd40cc8b46ae5a6e250e7",
                "urls": [
                    "bzz-raw://5ce10b7970482a65f9e9a365b810eeb154a5d4a8229a26653028d84b9622a410",
                    "dweb:/ipfs/QmTSwXxZ2FTkM5duBZgbpFs8SRVDR5NPAnW4YimeDhb1s8"
                ],
                "license": "GPL-2.0-or-later"
            },
            "lib/v4-periphery/lib/v4-core/src/interfaces/external/IERC6909Claims.sol": {
                "keccak256": "0xa586f345739e52b0488a0fe40b6e375cce67fdd25758408b0efcb5133ad96a48",
                "urls": [
                    "bzz-raw://e8c557b7e52abdbbd82e415a1acc27921446a7fd090b7d4877e52be72619547f",
                    "dweb:/ipfs/QmXE2KNPbXmGX8BQF3ei6zhzRTnhoTQg39XmqMnkhbr6QK"
                ],
                "license": "MIT"
            },
            "lib/v4-periphery/lib/v4-core/src/libraries/BitMath.sol": {
                "keccak256": "0x148c274b48f5f4becfe0d8aee257fe8b5d87a902b5bcfb6b3e64b4d5a574aa50",
                "urls": [
                    "bzz-raw://b5db898b4aa8805cb599c51c5d218ba5bec476673c3851131c3b4f73565e8c8b",
                    "dweb:/ipfs/QmdLGs2xPSRTCs76o1aMsBVZDwG8wTEmKGeRvghk7k2TZ2"
                ],
                "license": "GPL-2.0-or-later"
            },
            "lib/v4-periphery/lib/v4-core/src/libraries/CustomRevert.sol": {
                "keccak256": "0x745ca9c258d00fae52f293af065471f1bc1099de1bea4ceb52e312240ac52895",
                "urls": [
                    "bzz-raw://71eee0aa4e395f2c7fce16760d6547c6a12a6fd3dc56b94f4d44480fed538495",
                    "dweb:/ipfs/QmPfJBiHzeVe9sx3PZ27jWrzJqF9atvevpYBC9j3Ekz9TG"
                ],
                "license": "MIT"
            },
            "lib/v4-periphery/lib/v4-core/src/libraries/FixedPoint128.sol": {
                "keccak256": "0xc7e80dc41f28887d0d915a75c0b2783ae659e5384dd1a3ed1251a42e058d8835",
                "urls": [
                    "bzz-raw://2df62bf1d9d4349236fd0bc7a96b3a3be95f4c049603e4a20c8473cca9402b4d",
                    "dweb:/ipfs/QmVR5dmMkoypmhaBeBj8cGegHpJycbofUDg59dHm42i9MT"
                ],
                "license": "GPL-2.0-or-later"
            },
            "lib/v4-periphery/lib/v4-core/src/libraries/FullMath.sol": {
                "keccak256": "0x4fc73a00817193fd3cac1cc03d8167d21af97d75f1815a070ee31a90c702b4c2",
                "urls": [
                    "bzz-raw://c3b2d66d36b1ad56b1ab6e2eb8a816740877b40b461c93f125e88621c8378e52",
                    "dweb:/ipfs/QmPGvMZzKQvNiWKd8aRzzdW7oAizwrMgcMtnaworDkVHFC"
                ],
                "license": "MIT"
            },
            "lib/v4-periphery/lib/v4-core/src/libraries/Hooks.sol": {
                "keccak256": "0x8142e347f4e139fe3c7b2182fb7933ce937def49b32164e6429ad59291151424",
                "urls": [
                    "bzz-raw://88dcd7b3f6f383f3c40b21507f7d6d7ebf4b3fd24c78b2f09e2137b7e18a7565",
                    "dweb:/ipfs/QmWGtUCEBwqXCkA4EKmt6KrKxRFXiMszQLSe8AKu4EC1Kn"
                ],
                "license": "MIT"
            },
            "lib/v4-periphery/lib/v4-core/src/libraries/LPFeeLibrary.sol": {
                "keccak256": "0x9cb794c60d4c867732b20a6cd14b965bf3a63df1161eb3cd28e2c9d0447db46f",
                "urls": [
                    "bzz-raw://3d987ee5738f74c3fb091db503b44ad6651e4e47554623182e0ecbe696bd7382",
                    "dweb:/ipfs/QmW7Rt5qjD4mmRnvYcT2Fj7VPzBm1eT9w15WUHtfWmKEPh"
                ],
                "license": "GPL-2.0-or-later"
            },
            "lib/v4-periphery/lib/v4-core/src/libraries/LiquidityMath.sol": {
                "keccak256": "0x4a04b9383e2fb943c2c3ae7d0c9071b58dd97b6dac0a409fe1c79c3ca897bbcf",
                "urls": [
                    "bzz-raw://0b33cf0ff936f62aa7f3b82922fa0ac52ac24471561e87fbf7ab8372607f6dfc",
                    "dweb:/ipfs/Qmcr6omwzJjQPu6HQ8E9vFXaTgrtqfb2KbfxbuQavfUzFa"
                ],
                "license": "GPL-2.0-or-later"
            },
            "lib/v4-periphery/lib/v4-core/src/libraries/ParseBytes.sol": {
                "keccak256": "0xf0795198d1e651b0b33fd1708d80a14f501bb2a1486905676d35f364e880f579",
                "urls": [
                    "bzz-raw://5aea527fcec51d7274f0c189dc2479a6aa708fc91857187a4d7db46bb1d6c7a8",
                    "dweb:/ipfs/QmUTrwTPSZ7EHBaTyfAA78rZVP17iQzmAmvDcQ8GhDRAEf"
                ],
                "license": "GPL-2.0-or-later"
            },
            "lib/v4-periphery/lib/v4-core/src/libraries/Position.sol": {
                "keccak256": "0xddab2a831f1befb6abf5567e77c4582169ca8156cf69eb4f22d8e87f7226a3f9",
                "urls": [
                    "bzz-raw://c79fe61b50f3b70cff503abfa6f5643fcbefb9b794855bee1019b1e6d9c083b2",
                    "dweb:/ipfs/QmbKmYNQesaMz8bo1b7TMHQcAwaDd3eDPrE5pAdPPZTtk5"
                ],
                "license": "BUSL-1.1"
            },
            "lib/v4-periphery/lib/v4-core/src/libraries/SafeCast.sol": {
                "keccak256": "0x8060d21c4d54a431113f9a594b860e6a9bf1f346d0c7c02dfafe9847dd8a0591",
                "urls": [
                    "bzz-raw://e7f71b73d82965d1d949f388060f6f0daab7cd14718e260682918ec6fa0253b9",
                    "dweb:/ipfs/QmP85jtFrCeV6Y8zuJfrrgiMy1shX3tHWs2wX7DMAB7Lft"
                ],
                "license": "GPL-2.0-or-later"
            },
            "lib/v4-periphery/lib/v4-core/src/libraries/StateLibrary.sol": {
                "keccak256": "0x4bbb1e816dd67fd4e958518ef50d216fcdab19912ab98c28d4c5279890c48c2c",
                "urls": [
                    "bzz-raw://eab2611adf69904cb0f326dbd82cdd6d1a09630dacace7f741e29c76836e41e8",
                    "dweb:/ipfs/QmcCR78dZ8C7pF3DSDoWyYobX7aXkBNxbCmgenkqpgRrbT"
                ],
                "license": "MIT"
            },
            "lib/v4-periphery/lib/v4-core/src/libraries/TickMath.sol": {
                "keccak256": "0x39b33c48e9632a6b330027121cffef80916ce11b729b8296b640e22dd1cd1c2f",
                "urls": [
                    "bzz-raw://62264b1fa20aa6f87a4f722d33a9e84d0c8f5a34f904e5a25ba007512202f4dd",
                    "dweb:/ipfs/QmYsF6j9caz4V6GqGoBmfVDS3EioexZQQ8p6xfDZbk3owM"
                ],
                "license": "GPL-2.0-or-later"
            },
            "lib/v4-periphery/lib/v4-core/src/types/BalanceDelta.sol": {
                "keccak256": "0xa719c8fe51e0a9524280178f19f6851bcc3b3b60e73618f3d60905d35ae5569f",
                "urls": [
                    "bzz-raw://7436928dc9de35c6c7c5c636cb51adaf295cfd590da83b19a004ae33cbec9ef9",
                    "dweb:/ipfs/QmRJ9yZkUpzk4433GX3LgVVL8jwpbSYSUwXcucKisf3v4H"
                ],
                "license": "MIT"
            },
            "lib/v4-periphery/lib/v4-core/src/types/BeforeSwapDelta.sol": {
                "keccak256": "0x2a774312d91285313d569da1a718c909655da5432310417692097a1d4dc83a78",
                "urls": [
                    "bzz-raw://a2c7a0379955cff9c17ab9e61f95e42909aa5947c22740f86ce940d09856f782",
                    "dweb:/ipfs/QmaAuo8UBYXsGrVuKh8iRoAAdqwtg1jDq515cW1ZRP5m9K"
                ],
                "license": "MIT"
            },
            "lib/v4-periphery/lib/v4-core/src/types/Currency.sol": {
                "keccak256": "0x35c74eae038ecfbbae48b0e13f2b9a43ac6d8da4847ffa0f1482e4e2d455ee74",
                "urls": [
                    "bzz-raw://cadb54f9c89b6970583148e503a23c7b654aff1f3e6a0da57705c54e5b03b39f",
                    "dweb:/ipfs/Qma3CKKwyzGwzHN4Z9HDJ4Q7J5VfbN594i8F2DTGWTMWcB"
                ],
                "license": "MIT"
            },
            "lib/v4-periphery/lib/v4-core/src/types/PoolId.sol": {
                "keccak256": "0x308311916ea0f5c2fd878b6a2751eb223d170a69e33f601fae56dfe3c5d392af",
                "urls": [
                    "bzz-raw://669c2cd7ac17690b5d8831e0bda72822376c3a04b36afed6d31df4d75fe60918",
                    "dweb:/ipfs/QmT6EpkxqU8VF3WsgrZ66F3s1cCQRffR95z1HDYZz7ph6y"
                ],
                "license": "MIT"
            },
            "lib/v4-periphery/lib/v4-core/src/types/PoolKey.sol": {
                "keccak256": "0xf89856e0580d7a4856d3187a76858377ccee9d59702d230c338d84388221b786",
                "urls": [
                    "bzz-raw://6f3118fa189025695c37fdf0bdd1190f085ad097484d3c88cf4c56d1db65f639",
                    "dweb:/ipfs/QmamXpgtB8GV1CaFLvqefPWSoikLDhMk1yU4heBnVzU8gi"
                ],
                "license": "MIT"
            },
            "lib/v4-periphery/src/base/ImmutableState.sol": {
                "keccak256": "0x12b175e4ed6d31da545e3b6c9930901568c99d153b1e51044d32e88f42b9b633",
                "urls": [
                    "bzz-raw://f4347899e0b3bfd66e8d79652b1a14a62a02d16bfece63a40c6efe0e5656c384",
                    "dweb:/ipfs/QmSbbT8fefHstA72BqF7SDooDtmhs79dR8T6pWv8LxKU2L"
                ],
                "license": "GPL-2.0-or-later"
            },
            "lib/v4-periphery/src/base/SafeCallback.sol": {
                "keccak256": "0x6284bd1d1fbe78a901e63dc70720e2bf19de6758347b050f8ba2b155e73325c5",
                "urls": [
                    "bzz-raw://3afb423a3c0f8b5f6436680ff3cde9247924d442a9720dc39b2b07a352607187",
                    "dweb:/ipfs/QmaT5bMwiiqkp8KWUnHjWJz55Ah9vbpASzJagg9riHbpTf"
                ],
                "license": "GPL-3.0-or-later"
            },
            "lib/v4-periphery/src/base/hooks/BaseHook.sol": {
                "keccak256": "0x734be8d61303f27e1dae3b54a0925c2c2458fa5858b4c303fa899aca39aea5cb",
                "urls": [
                    "bzz-raw://ad4d0f2c40953a5755a5ab9034675337a945411745a5d8595d9831a3de94a0a1",
                    "dweb:/ipfs/QmZbGVJHoB7bnaAbKH1B47eQaJbQTXxz9PBvLgJsdiLMXC"
                ],
                "license": "GPL-3.0-or-later"
            },
            "src/TakeProfitsHook.sol": {
                "keccak256": "0xbb62f5260043da1447062a2cc5aac7316ccd59812ebb4200f259cd8c8a2dc41c",
                "urls": [
                    "bzz-raw://7f9e63cbba0ebee5aa97f4df66bf1be26132741d8268897a52634d7febae9f23",
                    "dweb:/ipfs/QmdemV2bhxJ8J5UEnx7K5YJdgYJJFDkr5WQZSVia6wqfbs"
                ],
                "license": "UNLICENSED"
            }
        },
        "version": 1
    },
    "id": 109
}