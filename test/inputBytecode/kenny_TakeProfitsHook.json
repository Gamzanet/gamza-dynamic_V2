{
    "abi": [
        {
            "type": "constructor",
            "inputs": [
                {
                    "name": "_manager",
                    "type": "address",
                    "internalType": "contract IPoolManager"
                },
                {
                    "name": "_uri",
                    "type": "string",
                    "internalType": "string"
                }
            ],
            "stateMutability": "nonpayable"
        },
        {
            "type": "function",
            "name": "afterAddLiquidity",
            "inputs": [
                {
                    "name": "",
                    "type": "address",
                    "internalType": "address"
                },
                {
                    "name": "",
                    "type": "tuple",
                    "internalType": "struct PoolKey",
                    "components": [
                        {
                            "name": "currency0",
                            "type": "address",
                            "internalType": "Currency"
                        },
                        {
                            "name": "currency1",
                            "type": "address",
                            "internalType": "Currency"
                        },
                        {
                            "name": "fee",
                            "type": "uint24",
                            "internalType": "uint24"
                        },
                        {
                            "name": "tickSpacing",
                            "type": "int24",
                            "internalType": "int24"
                        },
                        {
                            "name": "hooks",
                            "type": "address",
                            "internalType": "contract IHooks"
                        }
                    ]
                },
                {
                    "name": "",
                    "type": "tuple",
                    "internalType": "struct IPoolManager.ModifyLiquidityParams",
                    "components": [
                        {
                            "name": "tickLower",
                            "type": "int24",
                            "internalType": "int24"
                        },
                        {
                            "name": "tickUpper",
                            "type": "int24",
                            "internalType": "int24"
                        },
                        {
                            "name": "liquidityDelta",
                            "type": "int256",
                            "internalType": "int256"
                        },
                        {
                            "name": "salt",
                            "type": "bytes32",
                            "internalType": "bytes32"
                        }
                    ]
                },
                {
                    "name": "",
                    "type": "int256",
                    "internalType": "BalanceDelta"
                },
                {
                    "name": "",
                    "type": "int256",
                    "internalType": "BalanceDelta"
                },
                {
                    "name": "",
                    "type": "bytes",
                    "internalType": "bytes"
                }
            ],
            "outputs": [
                {
                    "name": "",
                    "type": "bytes4",
                    "internalType": "bytes4"
                },
                {
                    "name": "",
                    "type": "int256",
                    "internalType": "BalanceDelta"
                }
            ],
            "stateMutability": "nonpayable"
        },
        {
            "type": "function",
            "name": "afterDonate",
            "inputs": [
                {
                    "name": "",
                    "type": "address",
                    "internalType": "address"
                },
                {
                    "name": "",
                    "type": "tuple",
                    "internalType": "struct PoolKey",
                    "components": [
                        {
                            "name": "currency0",
                            "type": "address",
                            "internalType": "Currency"
                        },
                        {
                            "name": "currency1",
                            "type": "address",
                            "internalType": "Currency"
                        },
                        {
                            "name": "fee",
                            "type": "uint24",
                            "internalType": "uint24"
                        },
                        {
                            "name": "tickSpacing",
                            "type": "int24",
                            "internalType": "int24"
                        },
                        {
                            "name": "hooks",
                            "type": "address",
                            "internalType": "contract IHooks"
                        }
                    ]
                },
                {
                    "name": "",
                    "type": "uint256",
                    "internalType": "uint256"
                },
                {
                    "name": "",
                    "type": "uint256",
                    "internalType": "uint256"
                },
                {
                    "name": "",
                    "type": "bytes",
                    "internalType": "bytes"
                }
            ],
            "outputs": [
                {
                    "name": "",
                    "type": "bytes4",
                    "internalType": "bytes4"
                }
            ],
            "stateMutability": "nonpayable"
        },
        {
            "type": "function",
            "name": "afterInitialize",
            "inputs": [
                {
                    "name": "",
                    "type": "address",
                    "internalType": "address"
                },
                {
                    "name": "key",
                    "type": "tuple",
                    "internalType": "struct PoolKey",
                    "components": [
                        {
                            "name": "currency0",
                            "type": "address",
                            "internalType": "Currency"
                        },
                        {
                            "name": "currency1",
                            "type": "address",
                            "internalType": "Currency"
                        },
                        {
                            "name": "fee",
                            "type": "uint24",
                            "internalType": "uint24"
                        },
                        {
                            "name": "tickSpacing",
                            "type": "int24",
                            "internalType": "int24"
                        },
                        {
                            "name": "hooks",
                            "type": "address",
                            "internalType": "contract IHooks"
                        }
                    ]
                },
                {
                    "name": "",
                    "type": "uint160",
                    "internalType": "uint160"
                },
                {
                    "name": "tick",
                    "type": "int24",
                    "internalType": "int24"
                },
                {
                    "name": "",
                    "type": "bytes",
                    "internalType": "bytes"
                }
            ],
            "outputs": [
                {
                    "name": "",
                    "type": "bytes4",
                    "internalType": "bytes4"
                }
            ],
            "stateMutability": "nonpayable"
        },
        {
            "type": "function",
            "name": "afterRemoveLiquidity",
            "inputs": [
                {
                    "name": "",
                    "type": "address",
                    "internalType": "address"
                },
                {
                    "name": "",
                    "type": "tuple",
                    "internalType": "struct PoolKey",
                    "components": [
                        {
                            "name": "currency0",
                            "type": "address",
                            "internalType": "Currency"
                        },
                        {
                            "name": "currency1",
                            "type": "address",
                            "internalType": "Currency"
                        },
                        {
                            "name": "fee",
                            "type": "uint24",
                            "internalType": "uint24"
                        },
                        {
                            "name": "tickSpacing",
                            "type": "int24",
                            "internalType": "int24"
                        },
                        {
                            "name": "hooks",
                            "type": "address",
                            "internalType": "contract IHooks"
                        }
                    ]
                },
                {
                    "name": "",
                    "type": "tuple",
                    "internalType": "struct IPoolManager.ModifyLiquidityParams",
                    "components": [
                        {
                            "name": "tickLower",
                            "type": "int24",
                            "internalType": "int24"
                        },
                        {
                            "name": "tickUpper",
                            "type": "int24",
                            "internalType": "int24"
                        },
                        {
                            "name": "liquidityDelta",
                            "type": "int256",
                            "internalType": "int256"
                        },
                        {
                            "name": "salt",
                            "type": "bytes32",
                            "internalType": "bytes32"
                        }
                    ]
                },
                {
                    "name": "",
                    "type": "int256",
                    "internalType": "BalanceDelta"
                },
                {
                    "name": "",
                    "type": "int256",
                    "internalType": "BalanceDelta"
                },
                {
                    "name": "",
                    "type": "bytes",
                    "internalType": "bytes"
                }
            ],
            "outputs": [
                {
                    "name": "",
                    "type": "bytes4",
                    "internalType": "bytes4"
                },
                {
                    "name": "",
                    "type": "int256",
                    "internalType": "BalanceDelta"
                }
            ],
            "stateMutability": "nonpayable"
        },
        {
            "type": "function",
            "name": "afterSwap",
            "inputs": [
                {
                    "name": "sender",
                    "type": "address",
                    "internalType": "address"
                },
                {
                    "name": "key",
                    "type": "tuple",
                    "internalType": "struct PoolKey",
                    "components": [
                        {
                            "name": "currency0",
                            "type": "address",
                            "internalType": "Currency"
                        },
                        {
                            "name": "currency1",
                            "type": "address",
                            "internalType": "Currency"
                        },
                        {
                            "name": "fee",
                            "type": "uint24",
                            "internalType": "uint24"
                        },
                        {
                            "name": "tickSpacing",
                            "type": "int24",
                            "internalType": "int24"
                        },
                        {
                            "name": "hooks",
                            "type": "address",
                            "internalType": "contract IHooks"
                        }
                    ]
                },
                {
                    "name": "params",
                    "type": "tuple",
                    "internalType": "struct IPoolManager.SwapParams",
                    "components": [
                        {
                            "name": "zeroForOne",
                            "type": "bool",
                            "internalType": "bool"
                        },
                        {
                            "name": "amountSpecified",
                            "type": "int256",
                            "internalType": "int256"
                        },
                        {
                            "name": "sqrtPriceLimitX96",
                            "type": "uint160",
                            "internalType": "uint160"
                        }
                    ]
                },
                {
                    "name": "",
                    "type": "int256",
                    "internalType": "BalanceDelta"
                },
                {
                    "name": "",
                    "type": "bytes",
                    "internalType": "bytes"
                }
            ],
            "outputs": [
                {
                    "name": "",
                    "type": "bytes4",
                    "internalType": "bytes4"
                },
                {
                    "name": "",
                    "type": "int128",
                    "internalType": "int128"
                }
            ],
            "stateMutability": "nonpayable"
        },
        {
            "type": "function",
            "name": "balanceOf",
            "inputs": [
                {
                    "name": "account",
                    "type": "address",
                    "internalType": "address"
                },
                {
                    "name": "id",
                    "type": "uint256",
                    "internalType": "uint256"
                }
            ],
            "outputs": [
                {
                    "name": "",
                    "type": "uint256",
                    "internalType": "uint256"
                }
            ],
            "stateMutability": "view"
        },
        {
            "type": "function",
            "name": "balanceOfBatch",
            "inputs": [
                {
                    "name": "accounts",
                    "type": "address[]",
                    "internalType": "address[]"
                },
                {
                    "name": "ids",
                    "type": "uint256[]",
                    "internalType": "uint256[]"
                }
            ],
            "outputs": [
                {
                    "name": "",
                    "type": "uint256[]",
                    "internalType": "uint256[]"
                }
            ],
            "stateMutability": "view"
        },
        {
            "type": "function",
            "name": "beforeAddLiquidity",
            "inputs": [
                {
                    "name": "",
                    "type": "address",
                    "internalType": "address"
                },
                {
                    "name": "",
                    "type": "tuple",
                    "internalType": "struct PoolKey",
                    "components": [
                        {
                            "name": "currency0",
                            "type": "address",
                            "internalType": "Currency"
                        },
                        {
                            "name": "currency1",
                            "type": "address",
                            "internalType": "Currency"
                        },
                        {
                            "name": "fee",
                            "type": "uint24",
                            "internalType": "uint24"
                        },
                        {
                            "name": "tickSpacing",
                            "type": "int24",
                            "internalType": "int24"
                        },
                        {
                            "name": "hooks",
                            "type": "address",
                            "internalType": "contract IHooks"
                        }
                    ]
                },
                {
                    "name": "",
                    "type": "tuple",
                    "internalType": "struct IPoolManager.ModifyLiquidityParams",
                    "components": [
                        {
                            "name": "tickLower",
                            "type": "int24",
                            "internalType": "int24"
                        },
                        {
                            "name": "tickUpper",
                            "type": "int24",
                            "internalType": "int24"
                        },
                        {
                            "name": "liquidityDelta",
                            "type": "int256",
                            "internalType": "int256"
                        },
                        {
                            "name": "salt",
                            "type": "bytes32",
                            "internalType": "bytes32"
                        }
                    ]
                },
                {
                    "name": "",
                    "type": "bytes",
                    "internalType": "bytes"
                }
            ],
            "outputs": [
                {
                    "name": "",
                    "type": "bytes4",
                    "internalType": "bytes4"
                }
            ],
            "stateMutability": "nonpayable"
        },
        {
            "type": "function",
            "name": "beforeDonate",
            "inputs": [
                {
                    "name": "",
                    "type": "address",
                    "internalType": "address"
                },
                {
                    "name": "",
                    "type": "tuple",
                    "internalType": "struct PoolKey",
                    "components": [
                        {
                            "name": "currency0",
                            "type": "address",
                            "internalType": "Currency"
                        },
                        {
                            "name": "currency1",
                            "type": "address",
                            "internalType": "Currency"
                        },
                        {
                            "name": "fee",
                            "type": "uint24",
                            "internalType": "uint24"
                        },
                        {
                            "name": "tickSpacing",
                            "type": "int24",
                            "internalType": "int24"
                        },
                        {
                            "name": "hooks",
                            "type": "address",
                            "internalType": "contract IHooks"
                        }
                    ]
                },
                {
                    "name": "",
                    "type": "uint256",
                    "internalType": "uint256"
                },
                {
                    "name": "",
                    "type": "uint256",
                    "internalType": "uint256"
                },
                {
                    "name": "",
                    "type": "bytes",
                    "internalType": "bytes"
                }
            ],
            "outputs": [
                {
                    "name": "",
                    "type": "bytes4",
                    "internalType": "bytes4"
                }
            ],
            "stateMutability": "nonpayable"
        },
        {
            "type": "function",
            "name": "beforeInitialize",
            "inputs": [
                {
                    "name": "",
                    "type": "address",
                    "internalType": "address"
                },
                {
                    "name": "",
                    "type": "tuple",
                    "internalType": "struct PoolKey",
                    "components": [
                        {
                            "name": "currency0",
                            "type": "address",
                            "internalType": "Currency"
                        },
                        {
                            "name": "currency1",
                            "type": "address",
                            "internalType": "Currency"
                        },
                        {
                            "name": "fee",
                            "type": "uint24",
                            "internalType": "uint24"
                        },
                        {
                            "name": "tickSpacing",
                            "type": "int24",
                            "internalType": "int24"
                        },
                        {
                            "name": "hooks",
                            "type": "address",
                            "internalType": "contract IHooks"
                        }
                    ]
                },
                {
                    "name": "",
                    "type": "uint160",
                    "internalType": "uint160"
                },
                {
                    "name": "",
                    "type": "bytes",
                    "internalType": "bytes"
                }
            ],
            "outputs": [
                {
                    "name": "",
                    "type": "bytes4",
                    "internalType": "bytes4"
                }
            ],
            "stateMutability": "nonpayable"
        },
        {
            "type": "function",
            "name": "beforeRemoveLiquidity",
            "inputs": [
                {
                    "name": "",
                    "type": "address",
                    "internalType": "address"
                },
                {
                    "name": "",
                    "type": "tuple",
                    "internalType": "struct PoolKey",
                    "components": [
                        {
                            "name": "currency0",
                            "type": "address",
                            "internalType": "Currency"
                        },
                        {
                            "name": "currency1",
                            "type": "address",
                            "internalType": "Currency"
                        },
                        {
                            "name": "fee",
                            "type": "uint24",
                            "internalType": "uint24"
                        },
                        {
                            "name": "tickSpacing",
                            "type": "int24",
                            "internalType": "int24"
                        },
                        {
                            "name": "hooks",
                            "type": "address",
                            "internalType": "contract IHooks"
                        }
                    ]
                },
                {
                    "name": "",
                    "type": "tuple",
                    "internalType": "struct IPoolManager.ModifyLiquidityParams",
                    "components": [
                        {
                            "name": "tickLower",
                            "type": "int24",
                            "internalType": "int24"
                        },
                        {
                            "name": "tickUpper",
                            "type": "int24",
                            "internalType": "int24"
                        },
                        {
                            "name": "liquidityDelta",
                            "type": "int256",
                            "internalType": "int256"
                        },
                        {
                            "name": "salt",
                            "type": "bytes32",
                            "internalType": "bytes32"
                        }
                    ]
                },
                {
                    "name": "",
                    "type": "bytes",
                    "internalType": "bytes"
                }
            ],
            "outputs": [
                {
                    "name": "",
                    "type": "bytes4",
                    "internalType": "bytes4"
                }
            ],
            "stateMutability": "nonpayable"
        },
        {
            "type": "function",
            "name": "beforeSwap",
            "inputs": [
                {
                    "name": "",
                    "type": "address",
                    "internalType": "address"
                },
                {
                    "name": "",
                    "type": "tuple",
                    "internalType": "struct PoolKey",
                    "components": [
                        {
                            "name": "currency0",
                            "type": "address",
                            "internalType": "Currency"
                        },
                        {
                            "name": "currency1",
                            "type": "address",
                            "internalType": "Currency"
                        },
                        {
                            "name": "fee",
                            "type": "uint24",
                            "internalType": "uint24"
                        },
                        {
                            "name": "tickSpacing",
                            "type": "int24",
                            "internalType": "int24"
                        },
                        {
                            "name": "hooks",
                            "type": "address",
                            "internalType": "contract IHooks"
                        }
                    ]
                },
                {
                    "name": "",
                    "type": "tuple",
                    "internalType": "struct IPoolManager.SwapParams",
                    "components": [
                        {
                            "name": "zeroForOne",
                            "type": "bool",
                            "internalType": "bool"
                        },
                        {
                            "name": "amountSpecified",
                            "type": "int256",
                            "internalType": "int256"
                        },
                        {
                            "name": "sqrtPriceLimitX96",
                            "type": "uint160",
                            "internalType": "uint160"
                        }
                    ]
                },
                {
                    "name": "",
                    "type": "bytes",
                    "internalType": "bytes"
                }
            ],
            "outputs": [
                {
                    "name": "",
                    "type": "bytes4",
                    "internalType": "bytes4"
                },
                {
                    "name": "",
                    "type": "int256",
                    "internalType": "BeforeSwapDelta"
                },
                {
                    "name": "",
                    "type": "uint24",
                    "internalType": "uint24"
                }
            ],
            "stateMutability": "nonpayable"
        },
        {
            "type": "function",
            "name": "cancelOrder",
            "inputs": [
                {
                    "name": "key",
                    "type": "tuple",
                    "internalType": "struct PoolKey",
                    "components": [
                        {
                            "name": "currency0",
                            "type": "address",
                            "internalType": "Currency"
                        },
                        {
                            "name": "currency1",
                            "type": "address",
                            "internalType": "Currency"
                        },
                        {
                            "name": "fee",
                            "type": "uint24",
                            "internalType": "uint24"
                        },
                        {
                            "name": "tickSpacing",
                            "type": "int24",
                            "internalType": "int24"
                        },
                        {
                            "name": "hooks",
                            "type": "address",
                            "internalType": "contract IHooks"
                        }
                    ]
                },
                {
                    "name": "tickToSellAt",
                    "type": "int24",
                    "internalType": "int24"
                },
                {
                    "name": "zeroForOne",
                    "type": "bool",
                    "internalType": "bool"
                }
            ],
            "outputs": [],
            "stateMutability": "nonpayable"
        },
        {
            "type": "function",
            "name": "claimTokensSupply",
            "inputs": [
                {
                    "name": "positionId",
                    "type": "uint256",
                    "internalType": "uint256"
                }
            ],
            "outputs": [
                {
                    "name": "claimsSupply",
                    "type": "uint256",
                    "internalType": "uint256"
                }
            ],
            "stateMutability": "view"
        },
        {
            "type": "function",
            "name": "claimableOutputTokens",
            "inputs": [
                {
                    "name": "positionId",
                    "type": "uint256",
                    "internalType": "uint256"
                }
            ],
            "outputs": [
                {
                    "name": "outputClaimable",
                    "type": "uint256",
                    "internalType": "uint256"
                }
            ],
            "stateMutability": "view"
        },
        {
            "type": "function",
            "name": "getHookPermissions",
            "inputs": [],
            "outputs": [
                {
                    "name": "",
                    "type": "tuple",
                    "internalType": "struct Hooks.Permissions",
                    "components": [
                        {
                            "name": "beforeInitialize",
                            "type": "bool",
                            "internalType": "bool"
                        },
                        {
                            "name": "afterInitialize",
                            "type": "bool",
                            "internalType": "bool"
                        },
                        {
                            "name": "beforeAddLiquidity",
                            "type": "bool",
                            "internalType": "bool"
                        },
                        {
                            "name": "afterAddLiquidity",
                            "type": "bool",
                            "internalType": "bool"
                        },
                        {
                            "name": "beforeRemoveLiquidity",
                            "type": "bool",
                            "internalType": "bool"
                        },
                        {
                            "name": "afterRemoveLiquidity",
                            "type": "bool",
                            "internalType": "bool"
                        },
                        {
                            "name": "beforeSwap",
                            "type": "bool",
                            "internalType": "bool"
                        },
                        {
                            "name": "afterSwap",
                            "type": "bool",
                            "internalType": "bool"
                        },
                        {
                            "name": "beforeDonate",
                            "type": "bool",
                            "internalType": "bool"
                        },
                        {
                            "name": "afterDonate",
                            "type": "bool",
                            "internalType": "bool"
                        },
                        {
                            "name": "beforeSwapReturnDelta",
                            "type": "bool",
                            "internalType": "bool"
                        },
                        {
                            "name": "afterSwapReturnDelta",
                            "type": "bool",
                            "internalType": "bool"
                        },
                        {
                            "name": "afterAddLiquidityReturnDelta",
                            "type": "bool",
                            "internalType": "bool"
                        },
                        {
                            "name": "afterRemoveLiquidityReturnDelta",
                            "type": "bool",
                            "internalType": "bool"
                        }
                    ]
                }
            ],
            "stateMutability": "pure"
        },
        {
            "type": "function",
            "name": "getPositionId",
            "inputs": [
                {
                    "name": "key",
                    "type": "tuple",
                    "internalType": "struct PoolKey",
                    "components": [
                        {
                            "name": "currency0",
                            "type": "address",
                            "internalType": "Currency"
                        },
                        {
                            "name": "currency1",
                            "type": "address",
                            "internalType": "Currency"
                        },
                        {
                            "name": "fee",
                            "type": "uint24",
                            "internalType": "uint24"
                        },
                        {
                            "name": "tickSpacing",
                            "type": "int24",
                            "internalType": "int24"
                        },
                        {
                            "name": "hooks",
                            "type": "address",
                            "internalType": "contract IHooks"
                        }
                    ]
                },
                {
                    "name": "tick",
                    "type": "int24",
                    "internalType": "int24"
                },
                {
                    "name": "zeroForOne",
                    "type": "bool",
                    "internalType": "bool"
                }
            ],
            "outputs": [
                {
                    "name": "",
                    "type": "uint256",
                    "internalType": "uint256"
                }
            ],
            "stateMutability": "pure"
        },
        {
            "type": "function",
            "name": "isApprovedForAll",
            "inputs": [
                {
                    "name": "account",
                    "type": "address",
                    "internalType": "address"
                },
                {
                    "name": "operator",
                    "type": "address",
                    "internalType": "address"
                }
            ],
            "outputs": [
                {
                    "name": "",
                    "type": "bool",
                    "internalType": "bool"
                }
            ],
            "stateMutability": "view"
        },
        {
            "type": "function",
            "name": "lastTicks",
            "inputs": [
                {
                    "name": "poolId",
                    "type": "bytes32",
                    "internalType": "PoolId"
                }
            ],
            "outputs": [
                {
                    "name": "lastTick",
                    "type": "int24",
                    "internalType": "int24"
                }
            ],
            "stateMutability": "view"
        },
        {
            "type": "function",
            "name": "pendingOrders",
            "inputs": [
                {
                    "name": "poolId",
                    "type": "bytes32",
                    "internalType": "PoolId"
                },
                {
                    "name": "tickToSellAt",
                    "type": "int24",
                    "internalType": "int24"
                },
                {
                    "name": "zeroForOne",
                    "type": "bool",
                    "internalType": "bool"
                }
            ],
            "outputs": [
                {
                    "name": "inputAmount",
                    "type": "uint256",
                    "internalType": "uint256"
                }
            ],
            "stateMutability": "view"
        },
        {
            "type": "function",
            "name": "placeOrder",
            "inputs": [
                {
                    "name": "key",
                    "type": "tuple",
                    "internalType": "struct PoolKey",
                    "components": [
                        {
                            "name": "currency0",
                            "type": "address",
                            "internalType": "Currency"
                        },
                        {
                            "name": "currency1",
                            "type": "address",
                            "internalType": "Currency"
                        },
                        {
                            "name": "fee",
                            "type": "uint24",
                            "internalType": "uint24"
                        },
                        {
                            "name": "tickSpacing",
                            "type": "int24",
                            "internalType": "int24"
                        },
                        {
                            "name": "hooks",
                            "type": "address",
                            "internalType": "contract IHooks"
                        }
                    ]
                },
                {
                    "name": "tickToSellAt",
                    "type": "int24",
                    "internalType": "int24"
                },
                {
                    "name": "zeroForOne",
                    "type": "bool",
                    "internalType": "bool"
                },
                {
                    "name": "inputAmount",
                    "type": "uint256",
                    "internalType": "uint256"
                }
            ],
            "outputs": [
                {
                    "name": "",
                    "type": "int24",
                    "internalType": "int24"
                }
            ],
            "stateMutability": "nonpayable"
        },
        {
            "type": "function",
            "name": "poolManager",
            "inputs": [],
            "outputs": [
                {
                    "name": "",
                    "type": "address",
                    "internalType": "contract IPoolManager"
                }
            ],
            "stateMutability": "view"
        },
        {
            "type": "function",
            "name": "redeem",
            "inputs": [
                {
                    "name": "key",
                    "type": "tuple",
                    "internalType": "struct PoolKey",
                    "components": [
                        {
                            "name": "currency0",
                            "type": "address",
                            "internalType": "Currency"
                        },
                        {
                            "name": "currency1",
                            "type": "address",
                            "internalType": "Currency"
                        },
                        {
                            "name": "fee",
                            "type": "uint24",
                            "internalType": "uint24"
                        },
                        {
                            "name": "tickSpacing",
                            "type": "int24",
                            "internalType": "int24"
                        },
                        {
                            "name": "hooks",
                            "type": "address",
                            "internalType": "contract IHooks"
                        }
                    ]
                },
                {
                    "name": "tickToSellAt",
                    "type": "int24",
                    "internalType": "int24"
                },
                {
                    "name": "zeroForOne",
                    "type": "bool",
                    "internalType": "bool"
                },
                {
                    "name": "inputAmountToClaimFor",
                    "type": "uint256",
                    "internalType": "uint256"
                }
            ],
            "outputs": [],
            "stateMutability": "nonpayable"
        },
        {
            "type": "function",
            "name": "safeBatchTransferFrom",
            "inputs": [
                {
                    "name": "from",
                    "type": "address",
                    "internalType": "address"
                },
                {
                    "name": "to",
                    "type": "address",
                    "internalType": "address"
                },
                {
                    "name": "ids",
                    "type": "uint256[]",
                    "internalType": "uint256[]"
                },
                {
                    "name": "values",
                    "type": "uint256[]",
                    "internalType": "uint256[]"
                },
                {
                    "name": "data",
                    "type": "bytes",
                    "internalType": "bytes"
                }
            ],
            "outputs": [],
            "stateMutability": "nonpayable"
        },
        {
            "type": "function",
            "name": "safeTransferFrom",
            "inputs": [
                {
                    "name": "from",
                    "type": "address",
                    "internalType": "address"
                },
                {
                    "name": "to",
                    "type": "address",
                    "internalType": "address"
                },
                {
                    "name": "id",
                    "type": "uint256",
                    "internalType": "uint256"
                },
                {
                    "name": "value",
                    "type": "uint256",
                    "internalType": "uint256"
                },
                {
                    "name": "data",
                    "type": "bytes",
                    "internalType": "bytes"
                }
            ],
            "outputs": [],
            "stateMutability": "nonpayable"
        },
        {
            "type": "function",
            "name": "setApprovalForAll",
            "inputs": [
                {
                    "name": "operator",
                    "type": "address",
                    "internalType": "address"
                },
                {
                    "name": "approved",
                    "type": "bool",
                    "internalType": "bool"
                }
            ],
            "outputs": [],
            "stateMutability": "nonpayable"
        },
        {
            "type": "function",
            "name": "supportsInterface",
            "inputs": [
                {
                    "name": "interfaceId",
                    "type": "bytes4",
                    "internalType": "bytes4"
                }
            ],
            "outputs": [
                {
                    "name": "",
                    "type": "bool",
                    "internalType": "bool"
                }
            ],
            "stateMutability": "view"
        },
        {
            "type": "function",
            "name": "unlockCallback",
            "inputs": [
                {
                    "name": "data",
                    "type": "bytes",
                    "internalType": "bytes"
                }
            ],
            "outputs": [
                {
                    "name": "",
                    "type": "bytes",
                    "internalType": "bytes"
                }
            ],
            "stateMutability": "nonpayable"
        },
        {
            "type": "function",
            "name": "uri",
            "inputs": [
                {
                    "name": "",
                    "type": "uint256",
                    "internalType": "uint256"
                }
            ],
            "outputs": [
                {
                    "name": "",
                    "type": "string",
                    "internalType": "string"
                }
            ],
            "stateMutability": "view"
        },
        {
            "type": "event",
            "name": "ApprovalForAll",
            "inputs": [
                {
                    "name": "account",
                    "type": "address",
                    "indexed": true,
                    "internalType": "address"
                },
                {
                    "name": "operator",
                    "type": "address",
                    "indexed": true,
                    "internalType": "address"
                },
                {
                    "name": "approved",
                    "type": "bool",
                    "indexed": false,
                    "internalType": "bool"
                }
            ],
            "anonymous": false
        },
        {
            "type": "event",
            "name": "TransferBatch",
            "inputs": [
                {
                    "name": "operator",
                    "type": "address",
                    "indexed": true,
                    "internalType": "address"
                },
                {
                    "name": "from",
                    "type": "address",
                    "indexed": true,
                    "internalType": "address"
                },
                {
                    "name": "to",
                    "type": "address",
                    "indexed": true,
                    "internalType": "address"
                },
                {
                    "name": "ids",
                    "type": "uint256[]",
                    "indexed": false,
                    "internalType": "uint256[]"
                },
                {
                    "name": "values",
                    "type": "uint256[]",
                    "indexed": false,
                    "internalType": "uint256[]"
                }
            ],
            "anonymous": false
        },
        {
            "type": "event",
            "name": "TransferSingle",
            "inputs": [
                {
                    "name": "operator",
                    "type": "address",
                    "indexed": true,
                    "internalType": "address"
                },
                {
                    "name": "from",
                    "type": "address",
                    "indexed": true,
                    "internalType": "address"
                },
                {
                    "name": "to",
                    "type": "address",
                    "indexed": true,
                    "internalType": "address"
                },
                {
                    "name": "id",
                    "type": "uint256",
                    "indexed": false,
                    "internalType": "uint256"
                },
                {
                    "name": "value",
                    "type": "uint256",
                    "indexed": false,
                    "internalType": "uint256"
                }
            ],
            "anonymous": false
        },
        {
            "type": "event",
            "name": "URI",
            "inputs": [
                {
                    "name": "value",
                    "type": "string",
                    "indexed": false,
                    "internalType": "string"
                },
                {
                    "name": "id",
                    "type": "uint256",
                    "indexed": true,
                    "internalType": "uint256"
                }
            ],
            "anonymous": false
        },
        {
            "type": "error",
            "name": "ERC1155InsufficientBalance",
            "inputs": [
                {
                    "name": "sender",
                    "type": "address",
                    "internalType": "address"
                },
                {
                    "name": "balance",
                    "type": "uint256",
                    "internalType": "uint256"
                },
                {
                    "name": "needed",
                    "type": "uint256",
                    "internalType": "uint256"
                },
                {
                    "name": "tokenId",
                    "type": "uint256",
                    "internalType": "uint256"
                }
            ]
        },
        {
            "type": "error",
            "name": "ERC1155InvalidApprover",
            "inputs": [
                {
                    "name": "approver",
                    "type": "address",
                    "internalType": "address"
                }
            ]
        },
        {
            "type": "error",
            "name": "ERC1155InvalidArrayLength",
            "inputs": [
                {
                    "name": "idsLength",
                    "type": "uint256",
                    "internalType": "uint256"
                },
                {
                    "name": "valuesLength",
                    "type": "uint256",
                    "internalType": "uint256"
                }
            ]
        },
        {
            "type": "error",
            "name": "ERC1155InvalidOperator",
            "inputs": [
                {
                    "name": "operator",
                    "type": "address",
                    "internalType": "address"
                }
            ]
        },
        {
            "type": "error",
            "name": "ERC1155InvalidReceiver",
            "inputs": [
                {
                    "name": "receiver",
                    "type": "address",
                    "internalType": "address"
                }
            ]
        },
        {
            "type": "error",
            "name": "ERC1155InvalidSender",
            "inputs": [
                {
                    "name": "sender",
                    "type": "address",
                    "internalType": "address"
                }
            ]
        },
        {
            "type": "error",
            "name": "ERC1155MissingApprovalForAll",
            "inputs": [
                {
                    "name": "operator",
                    "type": "address",
                    "internalType": "address"
                },
                {
                    "name": "owner",
                    "type": "address",
                    "internalType": "address"
                }
            ]
        },
        {
            "type": "error",
            "name": "HookNotImplemented",
            "inputs": []
        },
        {
            "type": "error",
            "name": "InvalidOrder",
            "inputs": []
        },
        {
            "type": "error",
            "name": "InvalidPool",
            "inputs": []
        },
        {
            "type": "error",
            "name": "LockFailure",
            "inputs": []
        },
        {
            "type": "error",
            "name": "NotEnoughToClaim",
            "inputs": []
        },
        {
            "type": "error",
            "name": "NotPoolManager",
            "inputs": []
        },
        {
            "type": "error",
            "name": "NotSelf",
            "inputs": []
        },
        {
            "type": "error",
            "name": "NothingToClaim",
            "inputs": []
        }
    ],
    "bytecode": {
        "object": "0x60a060405234801561000f575f80fd5b506040516132ac3803806132ac83398101604081905261002e916102ce565b6001600160a01b038216608052808261004630610058565b506100508161014e565b5050506104db565b61014b81610146604080516101c0810182525f80825260208201819052918101829052606081018290526080810182905260a0810182905260c0810182905260e08101829052610100810182905261012081018290526101408101829052610160810182905261018081018290526101a081019190915250604080516101c0810182525f808252600160208301819052928201819052606082018190526080820181905260a0820181905260c0820181905260e0820192909252610100810182905261012081018290526101408101829052610160810182905261018081018290526101a081019190915290565b61015e565b50565b600261015a8282610421565b5050565b80511515612000831615151415806101825750602081015115156110008316151514155b806101995750604081015115156108008316151514155b806101b05750606081015115156104008316151514155b806101c75750608081015115156102008316151514155b806101de575060a081015115156101008316151514155b806101f4575060c0810151151560808316151514155b8061020a575060e0810151151560408316151514155b806102215750610100810151151560208316151514155b806102385750610120810151151560108316151514155b8061024f5750610140810151151560088316151514155b806102665750610160810151151560048316151514155b8061027d5750610180810151151560028316151514155b8061029457506101a0810151151560018316151514155b1561015a5761015a630732d7b560e51b83815f526001600160a01b03811660045260245ffd5b634e487b7160e01b5f52604160045260245ffd5b5f80604083850312156102df575f80fd5b82516001600160a01b03811681146102f5575f80fd5b60208401519092506001600160401b03811115610310575f80fd5b8301601f81018513610320575f80fd5b80516001600160401b03811115610339576103396102ba565b604051601f8201601f19908116603f011681016001600160401b0381118282101715610367576103676102ba565b60405281815282820160200187101561037e575f80fd5b8160208401602083015e5f602083830101528093505050509250929050565b600181811c908216806103b157607f821691505b6020821081036103cf57634e487b7160e01b5f52602260045260245ffd5b50919050565b601f82111561041c57805f5260205f20601f840160051c810160208510156103fa5750805b601f840160051c820191505b81811015610419575f8155600101610406565b50505b505050565b81516001600160401b0381111561043a5761043a6102ba565b61044e81610448845461039d565b846103d5565b6020601f821160018114610480575f83156104695750848201515b5f19600385901b1c1916600184901b178455610419565b5f84815260208120601f198516915b828110156104af578785015182556020948501946001909201910161048f565b50848210156104cc57868401515f19600387901b60f8161c191681555b50505050600190811b01905550565b608051612d886105245f395f818161053201528181610a320152818161121801528181611b0301528181611c8e01528181611cf501528181611d2e0152611def0152612d885ff3fe608060405234801561000f575f80fd5b50600436106101c5575f3560e01c8063a0dc3f99116100fe578063c4e833ce1161009e578063e4cbfea51161006e578063e4cbfea51461057f578063e985e9c5146105a1578063f242432a146105dc578063fa59cb0c146105ef575f80fd5b8063c4e833ce14610436578063dc4c90d31461052d578063dd02c9641461056c578063e1b4af6914610428575f80fd5b8063a910f80f116100d9578063a910f80f146103c0578063b47b2fb1146103d3578063b5a3391414610409578063b6a8b0fa14610428575f80fd5b8063a0dc3f991461036a578063a22cb4651461037d578063a2dc31b214610390575f80fd5b80633bb76cc1116101695780636c2bbe7e116101445780636c2bbe7e146102fe5780637e8941af1461033157806391dd7346146103575780639f063efc146102fe575f80fd5b80633bb76cc1146102815780634e1273f4146102a0578063575e24b4146102c0575f80fd5b806321d0ee70116101a457806321d0ee7014610232578063259982e5146102325780632eb2c2d61461025e5780633440d82014610273575f80fd5b8062fdd58e146101c957806301ffc9a7146101ef5780630e89341c14610212575b5f80fd5b6101dc6101d7366004611e59565b610602565b6040519081526020015b60405180910390f35b6102026101fd366004611e98565b610629565b60405190151581526020016101e6565b610225610220366004611eb3565b610678565b6040516101e69190611ef8565b610245610240366004611f6e565b61070a565b6040516001600160e01b031990911681526020016101e6565b61027161026c366004612123565b610724565b005b6102456102403660046121d6565b6101dc61028f366004611eb3565b60066020525f908152604090205481565b6102b36102ae366004612230565b6107ae565b6040516101e6919061232f565b6102d36102ce366004612351565b610879565b604080516001600160e01b03199094168452602084019290925262ffffff16908201526060016101e6565b61031161030c3660046123ab565b610895565b604080516001600160e01b031990931683526020830191909152016101e6565b61034461033f366004612459565b6108b0565b60405160029190910b81526020016101e6565b6102256103653660046124a5565b610a25565b6102716103783660046124e4565b610a81565b61027161038b366004612529565b610b9d565b6101dc61039e366004612560565b600460209081525f938452604080852082529284528284209052825290205481565b6102456103ce366004612592565b610bac565b6103e66103e136600461261a565b610bfb565b604080516001600160e01b03199093168352600f9190910b6020830152016101e6565b6101dc610417366004611eb3565b60056020525f908152604090205481565b61024561024036600461267d565b610520604080516101c0810182525f80825260208201819052918101829052606081018290526080810182905260a0810182905260c0810182905260e08101829052610100810182905261012081018290526101408101829052610160810182905261018081018290526101a081019190915250604080516101c0810182525f808252600160208301819052928201819052606082018190526080820181905260a0820181905260c0820181905260e0820192909252610100810182905261012081018290526101408101829052610160810182905261018081018290526101a081019190915290565b6040516101e691906126d7565b6105547f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b0390911681526020016101e6565b61027161057a366004612459565b610ca1565b61034461058d366004611eb3565b60036020525f908152604090205460020b81565b6102026105af3660046127f8565b6001600160a01b039182165f90815260016020908152604080832093909416825291909152205460ff1690565b6102716105ea366004612824565b610de7565b6101dc6105fd3660046124e4565b610e64565b5f818152602081815260408083206001600160a01b03861684529091529020545b92915050565b5f6001600160e01b03198216636cdb3d1360e11b148061065957506001600160e01b031982166303a24d0760e21b145b8061062357506301ffc9a760e01b6001600160e01b0319831614610623565b6060600280546106879061287c565b80601f01602080910402602001604051908101604052809291908181526020018280546106b39061287c565b80156106fe5780601f106106d5576101008083540402835291602001916106fe565b820191905f5260205f20905b8154815290600101906020018083116106e157829003601f168201915b50505050509050919050565b5f604051630a85dc2960e01b815260040160405180910390fd5b336001600160a01b038616811480159061076357506001600160a01b038087165f9081526001602090815260408083209385168352929052205460ff16155b156107995760405163711bec9160e11b81526001600160a01b038083166004830152871660248201526044015b60405180910390fd5b6107a68686868686610eb7565b505050505050565b606081518351146107df5781518351604051635b05999160e01b815260048101929092526024820152604401610790565b5f835167ffffffffffffffff8111156107fa576107fa611fe5565b604051908082528060200260200182016040528015610823578160200160208202803683370190505b5090505f5b84518110156108715760208082028601015161084c90602080840287010151610602565b82828151811061085e5761085e6128ae565b6020908102919091010152600101610828565b509392505050565b5f805f604051630a85dc2960e01b815260040160405180910390fd5b5f80604051630a85dc2960e01b815260040160405180910390fd5b5f806108cb856108c66080890160608a016128c2565b610f1c565b90508260045f6108ea6108e3368b90038b018b6128ed565b60a0902090565b815260208082019290925260409081015f908120600286900b82528352818120881515825290925281208054909190610924908490612995565b909155505f9050610936878387610e64565b90508360055f8381526020019081526020015f205f8282546109589190612995565b9250508190555061097933828660405180602001604052805f815250610f6c565b5f856109945761098f6040890160208a016129a8565b6109a1565b6109a160208901896129a8565b6040516323b872dd60e01b8152336004820152306024820152604481018790529091506001600160a01b038216906323b872dd906064016020604051808303815f875af11580156109f4573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610a1891906129c3565b5091979650505050505050565b6060336001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614610a705760405163570c108560e11b815260040160405180910390fd5b610a7a8383610fc7565b9392505050565b5f610a96836108c660808701606088016128c2565b90505f610aa4858385610e64565b90505f610ab13383610602565b9050805f03610ad35760405163af61069360e01b815260040160405180910390fd5b8060045f610ae96108e3368b90038b018b6128ed565b815260208082019290925260409081015f908120600288900b82528352818120881515825290925281208054909190610b239084906129de565b90915550505f8281526005602052604081208054839290610b459084906129de565b90915550610b569050338383611060565b5f84610b7157610b6c60408801602089016129a8565b610b7e565b610b7e60208801886129a8565b9050610b946001600160a01b03821633846110c6565b50505050505050565b610ba8338383611162565b5050565b5f83600382610bc36108e3368b90038b018b6128ed565b815260208101919091526040015f20805462ffffff191662ffffff929092169190911790555063a910f80f60e01b9695505050505050565b5f80306001600160a01b03891603610c1e575063b47b2fb160e01b90505f610c96565b60015f5b8115610c4957610c3f89610c3960208b018b6129f1565b156111f6565b9092509050610c22565b8060035f610c5f6108e3368e90038e018e6128ed565b815260208101919091526040015f908120805462ffffff191662ffffff939093169290921790915563b47b2fb160e01b9450925050505b965096945050505050565b5f610cb6846108c660808801606089016128c2565b90505f610cc4868386610e64565b5f8181526006602052604081205491925003610cf3576040516312d37ee560e31b815260040160405180910390fd5b5f610cfe3383610602565b905083811015610d2157604051639378648960e01b815260040160405180910390fd5b5f8281526006602090815260408083205460059092528220549091610d478784846113ae565b90508060065f8781526020019081526020015f205f828254610d6991906129de565b90915550505f8581526005602052604081208054899290610d8b9084906129de565b90915550610d9c9050338689611060565b5f88610db457610daf60208c018c6129a8565b610dc4565b610dc460408c0160208d016129a8565b9050610dda6001600160a01b03821633846110c6565b5050505050505050505050565b336001600160a01b0386168114801590610e2657506001600160a01b038087165f9081526001602090815260408083209385168352929052205460ff16155b15610e575760405163711bec9160e11b81526001600160a01b03808316600483015287166024820152604401610790565b6107a686868686866113c9565b5f610e776108e3368690038601866128ed565b604080516020810192909252600285900b90820152821515606082015260800160408051601f198184030181529190528051602090910120949350505050565b6001600160a01b038416610ee057604051632bfa23e760e11b81525f6004820152602401610790565b6001600160a01b038516610f0857604051626a0d4560e21b81525f6004820152602401610790565b610f158585858585611448565b5050505050565b5f80610f288385612a20565b90505f8460020b128015610f475750610f418385612a58565b60020b15155b15610f5a5780610f5681612a79565b9150505b610f648382612a9a565b949350505050565b6001600160a01b038416610f9557604051632bfa23e760e11b81525f6004820152602401610790565b604080516001808252602082018690528183019081526060820185905260808201909252906107a65f87848487611448565b60605f80306001600160a01b03168585604051610fe5929190612ab9565b5f604051808303815f865af19150503d805f811461101e576040519150601f19603f3d011682016040523d82523d5f602084013e611023565b606091505b509150915081156110375791506106239050565b80515f03611058576040516314815f4760e31b815260040160405180910390fd5b805160208201fd5b6001600160a01b03831661108857604051626a0d4560e21b81525f6004820152602401610790565b604080516001808252602082018590528183019081526060820184905260a082019092525f60808201818152919291610f1591879185908590611448565b5f6001600160a01b0384166110fa575f805f8085875af19050806110f5576110f5638549db5960e01b8461149b565b61115c565b60405163a9059cbb60e01b81526001600160a01b038416600482015282602482015260205f6044835f895af13d15601f3d1160015f511416171691505f81525f60208201525f6040820152508061115c5761115c632c4b17e760e21b8561149b565b50505050565b6001600160a01b03821661118a5760405162ced3e160e81b81525f6004820152602401610790565b6001600160a01b038381165f81815260016020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b5f808061123e61120e6108e3368890038801886128ed565b6001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016906114ce565b50509150505f60035f61125b888036038101906108e391906128ed565b815260208101919091526040015f2054600290810b915082900b81121561131857805b8260020b8160020b13611312575f6004816112a16108e3368c90038c018c6128ed565b815260208082019290925260409081015f908120600286900b825283528181208a15158252909252902054905080156112f0576112e088838984611580565b60018495509550505050506113a7565b5061130160808801606089016128c2565b61130b9082612ac8565b905061127e565b506113a0565b805b8260020b8160020b1261139e575f60048161133d6108e3368c90038c018c6128ed565b815260208082019290925260409081015f908120600286900b825283528181208a151582529092529020549050801561137c576112e088838984611580565b5061138d60808801606089016128c2565b6113979082612aed565b905061131a565b505b505f925090505b9250929050565b5f825f1904841183021582026113c2575f80fd5b5091020490565b6001600160a01b0384166113f257604051632bfa23e760e11b81525f6004820152602401610790565b6001600160a01b03851661141a57604051626a0d4560e21b81525f6004820152602401610790565b60408051600180825260208201869052818301908152606082018590526080820190925290610b9487878484875b611454858585856116ac565b6001600160a01b03841615610f15578251339060010361148d57602084810151908401516114868389898585896118bb565b50506107a6565b6107a68187878787876119dc565b3d60405183815282600482015260406024820152816044820152815f606483013e602080601f8401040260640191508181fd5b5f805f805f6114dc86611ac3565b604051631e2eaeaf60e01b8152600481018290529091505f906001600160a01b03891690631e2eaeaf90602401602060405180830381865afa158015611524573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906115489190612b12565b90506001600160a01b03811695508060a01c60020b945062ffffff8160b81c16935062ffffff8160d01c169250505092959194509250565b5f6115f08560405180606001604052808615158152602001856115a290612b29565b8152602001866115d0576115cb600173fffd8963efd1fc6a506488495d951d5263988d26612b43565b6115e0565b6115e06401000276a36001612b62565b6001600160a01b03169052611aff565b90508160045f6116086108e3368a90038a018a6128ed565b815260208082019290925260409081015f908120600289900b825283528181208715158252909252812080549091906116429084906129de565b909155505f9050611654868686610e64565b90505f8461166e576116668360801d90565b600f0b61167c565b61167883600f0b90565b600f0b5b90508060065f8481526020019081526020015f205f82825461169e9190612995565b909155505050505050505050565b80518251146116db5781518151604051635b05999160e01b815260048101929092526024820152604401610790565b335f5b83518110156117dd576020818102858101820151908501909101516001600160a01b0388161561178f575f828152602081815260408083206001600160a01b038c16845290915290205481811015611769576040516303dee4c560e01b81526001600160a01b038a166004820152602481018290526044810183905260648101849052608401610790565b5f838152602081815260408083206001600160a01b038d16845290915290209082900390555b6001600160a01b038716156117d3575f828152602081815260408083206001600160a01b038b168452909152812080548392906117cd908490612995565b90915550505b50506001016116de565b50825160010361185d5760208301515f906020840151909150856001600160a01b0316876001600160a01b0316846001600160a01b03167fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62858560405161184e929190918252602082015260400190565b60405180910390a45050610f15565b836001600160a01b0316856001600160a01b0316826001600160a01b03167f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb86866040516118ac929190612b81565b60405180910390a45050505050565b6001600160a01b0384163b156107a65760405163f23a6e6160e01b81526001600160a01b0385169063f23a6e61906118ff9089908990889088908890600401612bae565b6020604051808303815f875af1925050508015611939575060408051601f3d908101601f1916820190925261193691810190612bf5565b60015b6119a0573d808015611966576040519150601f19603f3d011682016040523d82523d5f602084013e61196b565b606091505b5080515f0361199857604051632bfa23e760e11b81526001600160a01b0386166004820152602401610790565b805181602001fd5b6001600160e01b0319811663f23a6e6160e01b14610b9457604051632bfa23e760e11b81526001600160a01b0386166004820152602401610790565b6001600160a01b0384163b156107a65760405163bc197c8160e01b81526001600160a01b0385169063bc197c8190611a209089908990889088908890600401612c10565b6020604051808303815f875af1925050508015611a5a575060408051601f3d908101601f19168201909252611a5791810190612bf5565b60015b611a87573d808015611966576040519150601f19603f3d011682016040523d82523d5f602084013e61196b565b6001600160e01b0319811663bc197c8160e01b14610b9457604051632bfa23e760e11b81526001600160a01b0386166004820152602401610790565b6040515f90611ae2908390600690602001918252602082015260400190565b604051602081830303815290604052805190602001209050919050565b5f807f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663f3cd914c85856040518363ffffffff1660e01b8152600401611b4f929190612c72565b6020604051808303815f875af1158015611b6b573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190611b8f9190612b12565b835190915015611c10575f611ba48260801d90565b600f0b1215611bd557611bd5611bbd60208601866129a8565b611bc78360801d90565b611bd090612d25565b611c6f565b5f611be082600f0b90565b600f0b1315611c0b57611c0b611bfc60408601602087016129a8565b611c0683600f0b90565b611db2565b610a7a565b5f611c1b82600f0b90565b600f0b1215611c4157611c41611c3760408601602087016129a8565b611bc783600f0b90565b5f611c4c8260801d90565b600f0b1315610a7a57610a7a611c6560208601866129a8565b611c068360801d90565b604051632961046560e21b81526001600160a01b0383811660048301527f0000000000000000000000000000000000000000000000000000000000000000169063a5841194906024015f604051808303815f87803b158015611ccf575f80fd5b505af1158015611ce1573d5f803e3d5ffd5b50611d2c925050506001600160a01b0383167f00000000000000000000000000000000000000000000000000000000000000006fffffffffffffffffffffffffffffffff84166110c6565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166311da60b46040518163ffffffff1660e01b81526004016020604051808303815f875af1158015611d89573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190611dad9190612b12565b505050565b604051630b0d9c0960e01b81526001600160a01b0383811660048301523060248301526fffffffffffffffffffffffffffffffff831660448301527f00000000000000000000000000000000000000000000000000000000000000001690630b0d9c09906064015f604051808303815f87803b158015611e30575f80fd5b505af11580156107a6573d5f803e3d5ffd5b6001600160a01b0381168114611e56575f80fd5b50565b5f8060408385031215611e6a575f80fd5b8235611e7581611e42565b946020939093013593505050565b6001600160e01b031981168114611e56575f80fd5b5f60208284031215611ea8575f80fd5b8135610a7a81611e83565b5f60208284031215611ec3575f80fd5b5035919050565b5f81518084528060208401602086015e5f602082860101526020601f19601f83011685010191505092915050565b602081525f610a7a6020830184611eca565b5f60a08284031215611f1a575f80fd5b50919050565b5f60808284031215611f1a575f80fd5b5f8083601f840112611f40575f80fd5b50813567ffffffffffffffff811115611f57575f80fd5b6020830191508360208285010111156113a7575f80fd5b5f805f805f6101608688031215611f83575f80fd5b8535611f8e81611e42565b9450611f9d8760208801611f0a565b9350611fac8760c08801611f20565b925061014086013567ffffffffffffffff811115611fc8575f80fd5b611fd488828901611f30565b969995985093965092949392505050565b634e487b7160e01b5f52604160045260245ffd5b604051601f8201601f1916810167ffffffffffffffff8111828210171561202257612022611fe5565b604052919050565b5f67ffffffffffffffff82111561204357612043611fe5565b5060051b60200190565b5f82601f83011261205c575f80fd5b813561206f61206a8261202a565b611ff9565b8082825260208201915060208360051b860101925085831115612090575f80fd5b602085015b838110156120ad578035835260209283019201612095565b5095945050505050565b5f82601f8301126120c6575f80fd5b813567ffffffffffffffff8111156120e0576120e0611fe5565b6120f3601f8201601f1916602001611ff9565b818152846020838601011115612107575f80fd5b816020850160208301375f918101602001919091529392505050565b5f805f805f60a08688031215612137575f80fd5b853561214281611e42565b9450602086013561215281611e42565b9350604086013567ffffffffffffffff81111561216d575f80fd5b6121798882890161204d565b935050606086013567ffffffffffffffff811115612195575f80fd5b6121a18882890161204d565b925050608086013567ffffffffffffffff8111156121bd575f80fd5b6121c9888289016120b7565b9150509295509295909350565b5f805f805f61010086880312156121eb575f80fd5b85356121f681611e42565b94506122058760208801611f0a565b935060c086013561221581611e42565b925060e086013567ffffffffffffffff811115611fc8575f80fd5b5f8060408385031215612241575f80fd5b823567ffffffffffffffff811115612257575f80fd5b8301601f81018513612267575f80fd5b803561227561206a8261202a565b8082825260208201915060208360051b850101925087831115612296575f80fd5b6020840193505b828410156122c15783356122b081611e42565b82526020938401939091019061229d565b9450505050602083013567ffffffffffffffff8111156122df575f80fd5b6122eb8582860161204d565b9150509250929050565b5f8151808452602084019350602083015f5b82811015612325578151865260209586019590910190600101612307565b5093949350505050565b602081525f610a7a60208301846122f5565b5f60608284031215611f1a575f80fd5b5f805f805f6101408688031215612366575f80fd5b853561237181611e42565b94506123808760208801611f0a565b935061238f8760c08801612341565b925061012086013567ffffffffffffffff811115611fc8575f80fd5b5f805f805f805f6101a0888a0312156123c2575f80fd5b87356123cd81611e42565b96506123dc8960208a01611f0a565b95506123eb8960c08a01611f20565b94506101408801359350610160880135925061018088013567ffffffffffffffff811115612417575f80fd5b6124238a828b01611f30565b989b979a50959850939692959293505050565b8035600281900b8114612447575f80fd5b919050565b8015158114611e56575f80fd5b5f805f80610100858703121561246d575f80fd5b6124778686611f0a565b935061248560a08601612436565b925060c08501356124958161244c565b9396929550929360e00135925050565b5f80602083850312156124b6575f80fd5b823567ffffffffffffffff8111156124cc575f80fd5b6124d885828601611f30565b90969095509350505050565b5f805f60e084860312156124f6575f80fd5b6125008585611f0a565b925061250e60a08501612436565b915060c084013561251e8161244c565b809150509250925092565b5f806040838503121561253a575f80fd5b823561254581611e42565b915060208301356125558161244c565b809150509250929050565b5f805f60608486031215612572575f80fd5b8335925061258260208501612436565b9150604084013561251e8161244c565b5f805f805f8061012087890312156125a8575f80fd5b86356125b381611e42565b95506125c28860208901611f0a565b945060c08701356125d281611e42565b93506125e060e08801612436565b925061010087013567ffffffffffffffff8111156125fc575f80fd5b61260889828a01611f30565b979a9699509497509295939492505050565b5f805f805f806101608789031215612630575f80fd5b863561263b81611e42565b955061264a8860208901611f0a565b94506126598860c08901612341565b9350610120870135925061014087013567ffffffffffffffff8111156125fc575f80fd5b5f805f805f806101208789031215612693575f80fd5b863561269e81611e42565b95506126ad8860208901611f0a565b945060c0870135935060e0870135925061010087013567ffffffffffffffff8111156125fc575f80fd5b8151151581526101c0810160208301516126f5602084018215159052565b506040830151612709604084018215159052565b50606083015161271d606084018215159052565b506080830151612731608084018215159052565b5060a083015161274560a084018215159052565b5060c083015161275960c084018215159052565b5060e083015161276d60e084018215159052565b5061010083015161278361010084018215159052565b5061012083015161279961012084018215159052565b506101408301516127af61014084018215159052565b506101608301516127c561016084018215159052565b506101808301516127db61018084018215159052565b506101a08301516127f16101a084018215159052565b5092915050565b5f8060408385031215612809575f80fd5b823561281481611e42565b9150602083013561255581611e42565b5f805f805f60a08688031215612838575f80fd5b853561284381611e42565b9450602086013561285381611e42565b93506040860135925060608601359150608086013567ffffffffffffffff8111156121bd575f80fd5b600181811c9082168061289057607f821691505b602082108103611f1a57634e487b7160e01b5f52602260045260245ffd5b634e487b7160e01b5f52603260045260245ffd5b5f602082840312156128d2575f80fd5b610a7a82612436565b803562ffffff81168114612447575f80fd5b5f60a08284031280156128fe575f80fd5b5060405160a0810167ffffffffffffffff8111828210171561292257612922611fe5565b604052823561293081611e42565b8152602083013561294081611e42565b6020820152612951604084016128db565b604082015261296260608401612436565b6060820152608083013561297581611e42565b60808201529392505050565b634e487b7160e01b5f52601160045260245ffd5b8082018082111561062357610623612981565b5f602082840312156129b8575f80fd5b8135610a7a81611e42565b5f602082840312156129d3575f80fd5b8151610a7a8161244c565b8181038181111561062357610623612981565b5f60208284031215612a01575f80fd5b8135610a7a8161244c565b634e487b7160e01b5f52601260045260245ffd5b5f8160020b8360020b80612a3657612a36612a0c565b627fffff1982145f1982141615612a4f57612a4f612981565b90059392505050565b5f8260020b80612a6a57612a6a612a0c565b808360020b0791505092915050565b5f8160020b627fffff198103612a9157612a91612981565b5f190192915050565b5f8260020b8260020b028060020b91508082146127f1576127f1612981565b818382375f9101908152919050565b600281810b9083900b01627fffff8113627fffff198212171561062357610623612981565b600282810b9082900b03627fffff198112627fffff8213171561062357610623612981565b5f60208284031215612b22575f80fd5b5051919050565b5f600160ff1b8201612b3d57612b3d612981565b505f0390565b6001600160a01b03828116828216039081111561062357610623612981565b6001600160a01b03818116838216019081111561062357610623612981565b604081525f612b9360408301856122f5565b8281036020840152612ba581856122f5565b95945050505050565b6001600160a01b03861681526001600160a01b038516602082015283604082015282606082015260a060808201525f612bea60a0830184611eca565b979650505050505050565b5f60208284031215612c05575f80fd5b8151610a7a81611e83565b6001600160a01b03861681526001600160a01b038516602082015260a060408201525f612c4060a08301866122f5565b8281036060840152612c5281866122f5565b90508281036080840152612c668185611eca565b98975050505050505050565b5f8335612c7e81611e42565b6001600160a01b031682526020840135612c9781611e42565b6001600160a01b0316602083015262ffffff612cb5604086016128db565b166040830152612cc760608501612436565b60020b60608301526080840135612cdd81611e42565b6001600160a01b0390811660808401528351151560a0840152602084015160c084015260408401511660e0830152610120610100830152610f6461012083015f815260200190565b5f81600f0b6f7fffffffffffffffffffffffffffffff198103612d4a57612d4a612981565b5f039291505056fea26469706673582212202e5b39fcdccf4d5047622f1058e7fbaa35f8133fb449a4e26931d38e5f7361fb64736f6c634300081a0033",
        "sourceMap": "843:15240:108:-:0;;;1611:112;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;451:26:105;;;;1715:4:108;1697:8;854:25:107::1;874:4;854:19;:25::i;:::-;-1:-1:-1::0;1293:13:27;1301:4;1293:7;:13::i;:::-;1251:62;1611:112:108;;843:15240;;1842:142:107;1919:58;1949:5;1956:20;843:15240:108;;;;;;;;-1:-1:-1;843:15240:108;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1959:630:108;;;;;;;;-1:-1:-1;1959:630:108;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1808:788;1956:20:107;1919:29;:58::i;:::-;1842:142;:::o;10282:86:27:-;10348:4;:13;10355:6;10348:4;:13;:::i;:::-;;10282:86;:::o;3584:1599:66:-;3703:28;;:74;;1319:7;16446:29;;:34;;3703:74;;;:166;;-1:-1:-1;3797:27:66;;;;:72;;1382:7;16446:29;;:34;;3797:72;;3703:166;:265;;;-1:-1:-1;3889:30:66;;;;:79;;1450:7;16446:29;;:34;;3889:79;;3703:265;:362;;;-1:-1:-1;3988:29:66;;;;:77;;1516:7;16446:29;;:34;;3988:77;;3703:362;:467;;;-1:-1:-1;4085:33:66;;;;:85;;1587:6;16446:29;;:34;;4085:85;;3703:467;:570;;;-1:-1:-1;4190:32:66;;;;:83;;1655:6;16446:29;;:34;;4190:83;;3703:570;:652;;;-1:-1:-1;4293:22:66;;;;:62;;1713:6;16446:29;;:34;;4293:62;;3703:652;:732;;;-1:-1:-1;4375:21:66;;;;:60;;1769:6;16446:29;;:34;;4375:60;;3703:732;:818;;;-1:-1:-1;4455:24:66;;;;:66;;1829:6;16446:29;;:34;;4455:66;;3703:818;:902;;;-1:-1:-1;4541:23:66;;;;:64;;1887:6;16446:29;;:34;;4541:64;;3703:902;:1009;;;-1:-1:-1;4625:33:66;;;;:87;;1959:6;16446:29;;:34;;4625:87;;3703:1009;:1114;;;-1:-1:-1;4732:32:66;;;;:85;;2029:6;16446:29;;:34;;4732:85;;3703:1114;:1236;;;-1:-1:-1;4837:40:66;;;;:102;;2108:6;16446:29;;:34;;4837:102;;3703:1236;:1384;;;-1:-1:-1;4959:43:66;;;;:128;;2190:6;16446:29;;:34;;4959:128;;3703:1384;3686:1491;;;5112:54;-1:-1:-1;;;5160:4:66;986:8:62;983:1;976:19;-1:-1:-1;;;;;1025:4:62;1021:53;1015:4;1008:67;1098:4;1095:1;1088:15;14:127:110;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:1124;257:6;265;318:2;306:9;297:7;293:23;289:32;286:52;;;334:1;331;324:12;286:52;360:16;;-1:-1:-1;;;;;405:31:110;;395:42;;385:70;;451:1;448;441:12;385:70;523:2;508:18;;502:25;474:5;;-1:-1:-1;;;;;;539:30:110;;536:50;;;582:1;579;572:12;536:50;605:22;;658:4;650:13;;646:27;-1:-1:-1;636:55:110;;687:1;684;677:12;636:55;714:9;;-1:-1:-1;;;;;735:30:110;;732:56;;;768:18;;:::i;:::-;817:2;811:9;909:2;871:17;;-1:-1:-1;;867:31:110;;;900:2;863:40;859:54;847:67;;-1:-1:-1;;;;;929:34:110;;965:22;;;926:62;923:88;;;991:18;;:::i;:::-;1027:2;1020:22;1051;;;1092:15;;;1109:2;1088:24;1085:37;-1:-1:-1;1082:57:110;;;1135:1;1132;1125:12;1082:57;1184:6;1179:2;1175;1171:11;1166:2;1158:6;1154:15;1148:43;1237:1;1232:2;1223:6;1215;1211:19;1207:28;1200:39;1258:6;1248:16;;;;;146:1124;;;;;:::o;1275:380::-;1354:1;1350:12;;;;1397;;;1418:61;;1472:4;1464:6;1460:17;1450:27;;1418:61;1525:2;1517:6;1514:14;1494:18;1491:38;1488:161;;1571:10;1566:3;1562:20;1559:1;1552:31;1606:4;1603:1;1596:15;1634:4;1631:1;1624:15;1488:161;;1275:380;;;:::o;1786:518::-;1888:2;1883:3;1880:11;1877:421;;;1924:5;1921:1;1914:16;1968:4;1965:1;1955:18;2038:2;2026:10;2022:19;2019:1;2015:27;2009:4;2005:38;2074:4;2062:10;2059:20;2056:47;;;-1:-1:-1;2097:4:110;2056:47;2152:2;2147:3;2143:12;2140:1;2136:20;2130:4;2126:31;2116:41;;2207:81;2225:2;2218:5;2215:13;2207:81;;;2284:1;2270:16;;2251:1;2240:13;2207:81;;;2211:3;;1877:421;1786:518;;;:::o;2480:1299::-;2600:10;;-1:-1:-1;;;;;2622:30:110;;2619:56;;;2655:18;;:::i;:::-;2684:97;2774:6;2734:38;2766:4;2760:11;2734:38;:::i;:::-;2728:4;2684:97;:::i;:::-;2830:4;2861:2;2850:14;;2878:1;2873:649;;;;3566:1;3583:6;3580:89;;;-1:-1:-1;3635:19:110;;;3629:26;3580:89;-1:-1:-1;;2437:1:110;2433:11;;;2429:24;2425:29;2415:40;2461:1;2457:11;;;2412:57;3682:81;;2843:930;;2873:649;1733:1;1726:14;;;1770:4;1757:18;;-1:-1:-1;;2909:20:110;;;3027:222;3041:7;3038:1;3035:14;3027:222;;;3123:19;;;3117:26;3102:42;;3230:4;3215:20;;;;3183:1;3171:14;;;;3057:12;3027:222;;;3031:3;3277:6;3268:7;3265:19;3262:201;;;3338:19;;;3332:26;-1:-1:-1;;3421:1:110;3417:14;;;3433:3;3413:24;3409:37;3405:42;3390:58;3375:74;;3262:201;-1:-1:-1;;;;3509:1:110;3493:14;;;3489:22;3476:36;;-1:-1:-1;2480:1299:110:o;:::-;843:15240:108;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;",
        "linkReferences": {}
    },
    "deployedBytecode": {
        "object": "0x608060405234801561000f575f80fd5b50600436106101c5575f3560e01c8063a0dc3f99116100fe578063c4e833ce1161009e578063e4cbfea51161006e578063e4cbfea51461057f578063e985e9c5146105a1578063f242432a146105dc578063fa59cb0c146105ef575f80fd5b8063c4e833ce14610436578063dc4c90d31461052d578063dd02c9641461056c578063e1b4af6914610428575f80fd5b8063a910f80f116100d9578063a910f80f146103c0578063b47b2fb1146103d3578063b5a3391414610409578063b6a8b0fa14610428575f80fd5b8063a0dc3f991461036a578063a22cb4651461037d578063a2dc31b214610390575f80fd5b80633bb76cc1116101695780636c2bbe7e116101445780636c2bbe7e146102fe5780637e8941af1461033157806391dd7346146103575780639f063efc146102fe575f80fd5b80633bb76cc1146102815780634e1273f4146102a0578063575e24b4146102c0575f80fd5b806321d0ee70116101a457806321d0ee7014610232578063259982e5146102325780632eb2c2d61461025e5780633440d82014610273575f80fd5b8062fdd58e146101c957806301ffc9a7146101ef5780630e89341c14610212575b5f80fd5b6101dc6101d7366004611e59565b610602565b6040519081526020015b60405180910390f35b6102026101fd366004611e98565b610629565b60405190151581526020016101e6565b610225610220366004611eb3565b610678565b6040516101e69190611ef8565b610245610240366004611f6e565b61070a565b6040516001600160e01b031990911681526020016101e6565b61027161026c366004612123565b610724565b005b6102456102403660046121d6565b6101dc61028f366004611eb3565b60066020525f908152604090205481565b6102b36102ae366004612230565b6107ae565b6040516101e6919061232f565b6102d36102ce366004612351565b610879565b604080516001600160e01b03199094168452602084019290925262ffffff16908201526060016101e6565b61031161030c3660046123ab565b610895565b604080516001600160e01b031990931683526020830191909152016101e6565b61034461033f366004612459565b6108b0565b60405160029190910b81526020016101e6565b6102256103653660046124a5565b610a25565b6102716103783660046124e4565b610a81565b61027161038b366004612529565b610b9d565b6101dc61039e366004612560565b600460209081525f938452604080852082529284528284209052825290205481565b6102456103ce366004612592565b610bac565b6103e66103e136600461261a565b610bfb565b604080516001600160e01b03199093168352600f9190910b6020830152016101e6565b6101dc610417366004611eb3565b60056020525f908152604090205481565b61024561024036600461267d565b610520604080516101c0810182525f80825260208201819052918101829052606081018290526080810182905260a0810182905260c0810182905260e08101829052610100810182905261012081018290526101408101829052610160810182905261018081018290526101a081019190915250604080516101c0810182525f808252600160208301819052928201819052606082018190526080820181905260a0820181905260c0820181905260e0820192909252610100810182905261012081018290526101408101829052610160810182905261018081018290526101a081019190915290565b6040516101e691906126d7565b6105547f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b0390911681526020016101e6565b61027161057a366004612459565b610ca1565b61034461058d366004611eb3565b60036020525f908152604090205460020b81565b6102026105af3660046127f8565b6001600160a01b039182165f90815260016020908152604080832093909416825291909152205460ff1690565b6102716105ea366004612824565b610de7565b6101dc6105fd3660046124e4565b610e64565b5f818152602081815260408083206001600160a01b03861684529091529020545b92915050565b5f6001600160e01b03198216636cdb3d1360e11b148061065957506001600160e01b031982166303a24d0760e21b145b8061062357506301ffc9a760e01b6001600160e01b0319831614610623565b6060600280546106879061287c565b80601f01602080910402602001604051908101604052809291908181526020018280546106b39061287c565b80156106fe5780601f106106d5576101008083540402835291602001916106fe565b820191905f5260205f20905b8154815290600101906020018083116106e157829003601f168201915b50505050509050919050565b5f604051630a85dc2960e01b815260040160405180910390fd5b336001600160a01b038616811480159061076357506001600160a01b038087165f9081526001602090815260408083209385168352929052205460ff16155b156107995760405163711bec9160e11b81526001600160a01b038083166004830152871660248201526044015b60405180910390fd5b6107a68686868686610eb7565b505050505050565b606081518351146107df5781518351604051635b05999160e01b815260048101929092526024820152604401610790565b5f835167ffffffffffffffff8111156107fa576107fa611fe5565b604051908082528060200260200182016040528015610823578160200160208202803683370190505b5090505f5b84518110156108715760208082028601015161084c90602080840287010151610602565b82828151811061085e5761085e6128ae565b6020908102919091010152600101610828565b509392505050565b5f805f604051630a85dc2960e01b815260040160405180910390fd5b5f80604051630a85dc2960e01b815260040160405180910390fd5b5f806108cb856108c66080890160608a016128c2565b610f1c565b90508260045f6108ea6108e3368b90038b018b6128ed565b60a0902090565b815260208082019290925260409081015f908120600286900b82528352818120881515825290925281208054909190610924908490612995565b909155505f9050610936878387610e64565b90508360055f8381526020019081526020015f205f8282546109589190612995565b9250508190555061097933828660405180602001604052805f815250610f6c565b5f856109945761098f6040890160208a016129a8565b6109a1565b6109a160208901896129a8565b6040516323b872dd60e01b8152336004820152306024820152604481018790529091506001600160a01b038216906323b872dd906064016020604051808303815f875af11580156109f4573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610a1891906129c3565b5091979650505050505050565b6060336001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614610a705760405163570c108560e11b815260040160405180910390fd5b610a7a8383610fc7565b9392505050565b5f610a96836108c660808701606088016128c2565b90505f610aa4858385610e64565b90505f610ab13383610602565b9050805f03610ad35760405163af61069360e01b815260040160405180910390fd5b8060045f610ae96108e3368b90038b018b6128ed565b815260208082019290925260409081015f908120600288900b82528352818120881515825290925281208054909190610b239084906129de565b90915550505f8281526005602052604081208054839290610b459084906129de565b90915550610b569050338383611060565b5f84610b7157610b6c60408801602089016129a8565b610b7e565b610b7e60208801886129a8565b9050610b946001600160a01b03821633846110c6565b50505050505050565b610ba8338383611162565b5050565b5f83600382610bc36108e3368b90038b018b6128ed565b815260208101919091526040015f20805462ffffff191662ffffff929092169190911790555063a910f80f60e01b9695505050505050565b5f80306001600160a01b03891603610c1e575063b47b2fb160e01b90505f610c96565b60015f5b8115610c4957610c3f89610c3960208b018b6129f1565b156111f6565b9092509050610c22565b8060035f610c5f6108e3368e90038e018e6128ed565b815260208101919091526040015f908120805462ffffff191662ffffff939093169290921790915563b47b2fb160e01b9450925050505b965096945050505050565b5f610cb6846108c660808801606089016128c2565b90505f610cc4868386610e64565b5f8181526006602052604081205491925003610cf3576040516312d37ee560e31b815260040160405180910390fd5b5f610cfe3383610602565b905083811015610d2157604051639378648960e01b815260040160405180910390fd5b5f8281526006602090815260408083205460059092528220549091610d478784846113ae565b90508060065f8781526020019081526020015f205f828254610d6991906129de565b90915550505f8581526005602052604081208054899290610d8b9084906129de565b90915550610d9c9050338689611060565b5f88610db457610daf60208c018c6129a8565b610dc4565b610dc460408c0160208d016129a8565b9050610dda6001600160a01b03821633846110c6565b5050505050505050505050565b336001600160a01b0386168114801590610e2657506001600160a01b038087165f9081526001602090815260408083209385168352929052205460ff16155b15610e575760405163711bec9160e11b81526001600160a01b03808316600483015287166024820152604401610790565b6107a686868686866113c9565b5f610e776108e3368690038601866128ed565b604080516020810192909252600285900b90820152821515606082015260800160408051601f198184030181529190528051602090910120949350505050565b6001600160a01b038416610ee057604051632bfa23e760e11b81525f6004820152602401610790565b6001600160a01b038516610f0857604051626a0d4560e21b81525f6004820152602401610790565b610f158585858585611448565b5050505050565b5f80610f288385612a20565b90505f8460020b128015610f475750610f418385612a58565b60020b15155b15610f5a5780610f5681612a79565b9150505b610f648382612a9a565b949350505050565b6001600160a01b038416610f9557604051632bfa23e760e11b81525f6004820152602401610790565b604080516001808252602082018690528183019081526060820185905260808201909252906107a65f87848487611448565b60605f80306001600160a01b03168585604051610fe5929190612ab9565b5f604051808303815f865af19150503d805f811461101e576040519150601f19603f3d011682016040523d82523d5f602084013e611023565b606091505b509150915081156110375791506106239050565b80515f03611058576040516314815f4760e31b815260040160405180910390fd5b805160208201fd5b6001600160a01b03831661108857604051626a0d4560e21b81525f6004820152602401610790565b604080516001808252602082018590528183019081526060820184905260a082019092525f60808201818152919291610f1591879185908590611448565b5f6001600160a01b0384166110fa575f805f8085875af19050806110f5576110f5638549db5960e01b8461149b565b61115c565b60405163a9059cbb60e01b81526001600160a01b038416600482015282602482015260205f6044835f895af13d15601f3d1160015f511416171691505f81525f60208201525f6040820152508061115c5761115c632c4b17e760e21b8561149b565b50505050565b6001600160a01b03821661118a5760405162ced3e160e81b81525f6004820152602401610790565b6001600160a01b038381165f81815260016020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b5f808061123e61120e6108e3368890038801886128ed565b6001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016906114ce565b50509150505f60035f61125b888036038101906108e391906128ed565b815260208101919091526040015f2054600290810b915082900b81121561131857805b8260020b8160020b13611312575f6004816112a16108e3368c90038c018c6128ed565b815260208082019290925260409081015f908120600286900b825283528181208a15158252909252902054905080156112f0576112e088838984611580565b60018495509550505050506113a7565b5061130160808801606089016128c2565b61130b9082612ac8565b905061127e565b506113a0565b805b8260020b8160020b1261139e575f60048161133d6108e3368c90038c018c6128ed565b815260208082019290925260409081015f908120600286900b825283528181208a151582529092529020549050801561137c576112e088838984611580565b5061138d60808801606089016128c2565b6113979082612aed565b905061131a565b505b505f925090505b9250929050565b5f825f1904841183021582026113c2575f80fd5b5091020490565b6001600160a01b0384166113f257604051632bfa23e760e11b81525f6004820152602401610790565b6001600160a01b03851661141a57604051626a0d4560e21b81525f6004820152602401610790565b60408051600180825260208201869052818301908152606082018590526080820190925290610b9487878484875b611454858585856116ac565b6001600160a01b03841615610f15578251339060010361148d57602084810151908401516114868389898585896118bb565b50506107a6565b6107a68187878787876119dc565b3d60405183815282600482015260406024820152816044820152815f606483013e602080601f8401040260640191508181fd5b5f805f805f6114dc86611ac3565b604051631e2eaeaf60e01b8152600481018290529091505f906001600160a01b03891690631e2eaeaf90602401602060405180830381865afa158015611524573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906115489190612b12565b90506001600160a01b03811695508060a01c60020b945062ffffff8160b81c16935062ffffff8160d01c169250505092959194509250565b5f6115f08560405180606001604052808615158152602001856115a290612b29565b8152602001866115d0576115cb600173fffd8963efd1fc6a506488495d951d5263988d26612b43565b6115e0565b6115e06401000276a36001612b62565b6001600160a01b03169052611aff565b90508160045f6116086108e3368a90038a018a6128ed565b815260208082019290925260409081015f908120600289900b825283528181208715158252909252812080549091906116429084906129de565b909155505f9050611654868686610e64565b90505f8461166e576116668360801d90565b600f0b61167c565b61167883600f0b90565b600f0b5b90508060065f8481526020019081526020015f205f82825461169e9190612995565b909155505050505050505050565b80518251146116db5781518151604051635b05999160e01b815260048101929092526024820152604401610790565b335f5b83518110156117dd576020818102858101820151908501909101516001600160a01b0388161561178f575f828152602081815260408083206001600160a01b038c16845290915290205481811015611769576040516303dee4c560e01b81526001600160a01b038a166004820152602481018290526044810183905260648101849052608401610790565b5f838152602081815260408083206001600160a01b038d16845290915290209082900390555b6001600160a01b038716156117d3575f828152602081815260408083206001600160a01b038b168452909152812080548392906117cd908490612995565b90915550505b50506001016116de565b50825160010361185d5760208301515f906020840151909150856001600160a01b0316876001600160a01b0316846001600160a01b03167fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62858560405161184e929190918252602082015260400190565b60405180910390a45050610f15565b836001600160a01b0316856001600160a01b0316826001600160a01b03167f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb86866040516118ac929190612b81565b60405180910390a45050505050565b6001600160a01b0384163b156107a65760405163f23a6e6160e01b81526001600160a01b0385169063f23a6e61906118ff9089908990889088908890600401612bae565b6020604051808303815f875af1925050508015611939575060408051601f3d908101601f1916820190925261193691810190612bf5565b60015b6119a0573d808015611966576040519150601f19603f3d011682016040523d82523d5f602084013e61196b565b606091505b5080515f0361199857604051632bfa23e760e11b81526001600160a01b0386166004820152602401610790565b805181602001fd5b6001600160e01b0319811663f23a6e6160e01b14610b9457604051632bfa23e760e11b81526001600160a01b0386166004820152602401610790565b6001600160a01b0384163b156107a65760405163bc197c8160e01b81526001600160a01b0385169063bc197c8190611a209089908990889088908890600401612c10565b6020604051808303815f875af1925050508015611a5a575060408051601f3d908101601f19168201909252611a5791810190612bf5565b60015b611a87573d808015611966576040519150601f19603f3d011682016040523d82523d5f602084013e61196b565b6001600160e01b0319811663bc197c8160e01b14610b9457604051632bfa23e760e11b81526001600160a01b0386166004820152602401610790565b6040515f90611ae2908390600690602001918252602082015260400190565b604051602081830303815290604052805190602001209050919050565b5f807f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663f3cd914c85856040518363ffffffff1660e01b8152600401611b4f929190612c72565b6020604051808303815f875af1158015611b6b573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190611b8f9190612b12565b835190915015611c10575f611ba48260801d90565b600f0b1215611bd557611bd5611bbd60208601866129a8565b611bc78360801d90565b611bd090612d25565b611c6f565b5f611be082600f0b90565b600f0b1315611c0b57611c0b611bfc60408601602087016129a8565b611c0683600f0b90565b611db2565b610a7a565b5f611c1b82600f0b90565b600f0b1215611c4157611c41611c3760408601602087016129a8565b611bc783600f0b90565b5f611c4c8260801d90565b600f0b1315610a7a57610a7a611c6560208601866129a8565b611c068360801d90565b604051632961046560e21b81526001600160a01b0383811660048301527f0000000000000000000000000000000000000000000000000000000000000000169063a5841194906024015f604051808303815f87803b158015611ccf575f80fd5b505af1158015611ce1573d5f803e3d5ffd5b50611d2c925050506001600160a01b0383167f00000000000000000000000000000000000000000000000000000000000000006fffffffffffffffffffffffffffffffff84166110c6565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166311da60b46040518163ffffffff1660e01b81526004016020604051808303815f875af1158015611d89573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190611dad9190612b12565b505050565b604051630b0d9c0960e01b81526001600160a01b0383811660048301523060248301526fffffffffffffffffffffffffffffffff831660448301527f00000000000000000000000000000000000000000000000000000000000000001690630b0d9c09906064015f604051808303815f87803b158015611e30575f80fd5b505af11580156107a6573d5f803e3d5ffd5b6001600160a01b0381168114611e56575f80fd5b50565b5f8060408385031215611e6a575f80fd5b8235611e7581611e42565b946020939093013593505050565b6001600160e01b031981168114611e56575f80fd5b5f60208284031215611ea8575f80fd5b8135610a7a81611e83565b5f60208284031215611ec3575f80fd5b5035919050565b5f81518084528060208401602086015e5f602082860101526020601f19601f83011685010191505092915050565b602081525f610a7a6020830184611eca565b5f60a08284031215611f1a575f80fd5b50919050565b5f60808284031215611f1a575f80fd5b5f8083601f840112611f40575f80fd5b50813567ffffffffffffffff811115611f57575f80fd5b6020830191508360208285010111156113a7575f80fd5b5f805f805f6101608688031215611f83575f80fd5b8535611f8e81611e42565b9450611f9d8760208801611f0a565b9350611fac8760c08801611f20565b925061014086013567ffffffffffffffff811115611fc8575f80fd5b611fd488828901611f30565b969995985093965092949392505050565b634e487b7160e01b5f52604160045260245ffd5b604051601f8201601f1916810167ffffffffffffffff8111828210171561202257612022611fe5565b604052919050565b5f67ffffffffffffffff82111561204357612043611fe5565b5060051b60200190565b5f82601f83011261205c575f80fd5b813561206f61206a8261202a565b611ff9565b8082825260208201915060208360051b860101925085831115612090575f80fd5b602085015b838110156120ad578035835260209283019201612095565b5095945050505050565b5f82601f8301126120c6575f80fd5b813567ffffffffffffffff8111156120e0576120e0611fe5565b6120f3601f8201601f1916602001611ff9565b818152846020838601011115612107575f80fd5b816020850160208301375f918101602001919091529392505050565b5f805f805f60a08688031215612137575f80fd5b853561214281611e42565b9450602086013561215281611e42565b9350604086013567ffffffffffffffff81111561216d575f80fd5b6121798882890161204d565b935050606086013567ffffffffffffffff811115612195575f80fd5b6121a18882890161204d565b925050608086013567ffffffffffffffff8111156121bd575f80fd5b6121c9888289016120b7565b9150509295509295909350565b5f805f805f61010086880312156121eb575f80fd5b85356121f681611e42565b94506122058760208801611f0a565b935060c086013561221581611e42565b925060e086013567ffffffffffffffff811115611fc8575f80fd5b5f8060408385031215612241575f80fd5b823567ffffffffffffffff811115612257575f80fd5b8301601f81018513612267575f80fd5b803561227561206a8261202a565b8082825260208201915060208360051b850101925087831115612296575f80fd5b6020840193505b828410156122c15783356122b081611e42565b82526020938401939091019061229d565b9450505050602083013567ffffffffffffffff8111156122df575f80fd5b6122eb8582860161204d565b9150509250929050565b5f8151808452602084019350602083015f5b82811015612325578151865260209586019590910190600101612307565b5093949350505050565b602081525f610a7a60208301846122f5565b5f60608284031215611f1a575f80fd5b5f805f805f6101408688031215612366575f80fd5b853561237181611e42565b94506123808760208801611f0a565b935061238f8760c08801612341565b925061012086013567ffffffffffffffff811115611fc8575f80fd5b5f805f805f805f6101a0888a0312156123c2575f80fd5b87356123cd81611e42565b96506123dc8960208a01611f0a565b95506123eb8960c08a01611f20565b94506101408801359350610160880135925061018088013567ffffffffffffffff811115612417575f80fd5b6124238a828b01611f30565b989b979a50959850939692959293505050565b8035600281900b8114612447575f80fd5b919050565b8015158114611e56575f80fd5b5f805f80610100858703121561246d575f80fd5b6124778686611f0a565b935061248560a08601612436565b925060c08501356124958161244c565b9396929550929360e00135925050565b5f80602083850312156124b6575f80fd5b823567ffffffffffffffff8111156124cc575f80fd5b6124d885828601611f30565b90969095509350505050565b5f805f60e084860312156124f6575f80fd5b6125008585611f0a565b925061250e60a08501612436565b915060c084013561251e8161244c565b809150509250925092565b5f806040838503121561253a575f80fd5b823561254581611e42565b915060208301356125558161244c565b809150509250929050565b5f805f60608486031215612572575f80fd5b8335925061258260208501612436565b9150604084013561251e8161244c565b5f805f805f8061012087890312156125a8575f80fd5b86356125b381611e42565b95506125c28860208901611f0a565b945060c08701356125d281611e42565b93506125e060e08801612436565b925061010087013567ffffffffffffffff8111156125fc575f80fd5b61260889828a01611f30565b979a9699509497509295939492505050565b5f805f805f806101608789031215612630575f80fd5b863561263b81611e42565b955061264a8860208901611f0a565b94506126598860c08901612341565b9350610120870135925061014087013567ffffffffffffffff8111156125fc575f80fd5b5f805f805f806101208789031215612693575f80fd5b863561269e81611e42565b95506126ad8860208901611f0a565b945060c0870135935060e0870135925061010087013567ffffffffffffffff8111156125fc575f80fd5b8151151581526101c0810160208301516126f5602084018215159052565b506040830151612709604084018215159052565b50606083015161271d606084018215159052565b506080830151612731608084018215159052565b5060a083015161274560a084018215159052565b5060c083015161275960c084018215159052565b5060e083015161276d60e084018215159052565b5061010083015161278361010084018215159052565b5061012083015161279961012084018215159052565b506101408301516127af61014084018215159052565b506101608301516127c561016084018215159052565b506101808301516127db61018084018215159052565b506101a08301516127f16101a084018215159052565b5092915050565b5f8060408385031215612809575f80fd5b823561281481611e42565b9150602083013561255581611e42565b5f805f805f60a08688031215612838575f80fd5b853561284381611e42565b9450602086013561285381611e42565b93506040860135925060608601359150608086013567ffffffffffffffff8111156121bd575f80fd5b600181811c9082168061289057607f821691505b602082108103611f1a57634e487b7160e01b5f52602260045260245ffd5b634e487b7160e01b5f52603260045260245ffd5b5f602082840312156128d2575f80fd5b610a7a82612436565b803562ffffff81168114612447575f80fd5b5f60a08284031280156128fe575f80fd5b5060405160a0810167ffffffffffffffff8111828210171561292257612922611fe5565b604052823561293081611e42565b8152602083013561294081611e42565b6020820152612951604084016128db565b604082015261296260608401612436565b6060820152608083013561297581611e42565b60808201529392505050565b634e487b7160e01b5f52601160045260245ffd5b8082018082111561062357610623612981565b5f602082840312156129b8575f80fd5b8135610a7a81611e42565b5f602082840312156129d3575f80fd5b8151610a7a8161244c565b8181038181111561062357610623612981565b5f60208284031215612a01575f80fd5b8135610a7a8161244c565b634e487b7160e01b5f52601260045260245ffd5b5f8160020b8360020b80612a3657612a36612a0c565b627fffff1982145f1982141615612a4f57612a4f612981565b90059392505050565b5f8260020b80612a6a57612a6a612a0c565b808360020b0791505092915050565b5f8160020b627fffff198103612a9157612a91612981565b5f190192915050565b5f8260020b8260020b028060020b91508082146127f1576127f1612981565b818382375f9101908152919050565b600281810b9083900b01627fffff8113627fffff198212171561062357610623612981565b600282810b9082900b03627fffff198112627fffff8213171561062357610623612981565b5f60208284031215612b22575f80fd5b5051919050565b5f600160ff1b8201612b3d57612b3d612981565b505f0390565b6001600160a01b03828116828216039081111561062357610623612981565b6001600160a01b03818116838216019081111561062357610623612981565b604081525f612b9360408301856122f5565b8281036020840152612ba581856122f5565b95945050505050565b6001600160a01b03861681526001600160a01b038516602082015283604082015282606082015260a060808201525f612bea60a0830184611eca565b979650505050505050565b5f60208284031215612c05575f80fd5b8151610a7a81611e83565b6001600160a01b03861681526001600160a01b038516602082015260a060408201525f612c4060a08301866122f5565b8281036060840152612c5281866122f5565b90508281036080840152612c668185611eca565b98975050505050505050565b5f8335612c7e81611e42565b6001600160a01b031682526020840135612c9781611e42565b6001600160a01b0316602083015262ffffff612cb5604086016128db565b166040830152612cc760608501612436565b60020b60608301526080840135612cdd81611e42565b6001600160a01b0390811660808401528351151560a0840152602084015160c084015260408401511660e0830152610120610100830152610f6461012083015f815260200190565b5f81600f0b6f7fffffffffffffffffffffffffffffff198103612d4a57612d4a612981565b5f039291505056fea26469706673582212202e5b39fcdccf4d5047622f1058e7fbaa35f8133fb449a4e26931d38e5f7361fb64736f6c634300081a0033",
        "sourceMap": "843:15240:108:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2247:132:27;;;;;;:::i;:::-;;:::i;:::-;;;691:25:110;;;679:2;664:18;2247:132:27;;;;;;;;1380:305;;;;;;:::i;:::-;;:::i;:::-;;;1374:14:110;;1367:22;1349:41;;1337:2;1322:18;1380:305:27;1209:187:110;2084:103:27;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;3122:235:107:-;;;;;;:::i;:::-;;:::i;:::-;;;-1:-1:-1;;;;;;3977:33:110;;;3959:52;;3947:2;3932:18;3122:235:107;3815:202:110;4014:429:27;;;;;;:::i;:::-;;:::i;:::-;;2455:156:107;;;;;;:::i;11535:91:108:-;;;;;;:::i;:::-;;;;;;;;;;;;;;2536:552:27;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;4037:228:107:-;;;;;;:::i;:::-;;:::i;:::-;;;;-1:-1:-1;;;;;;10958:33:110;;;10940:52;;11023:2;11008:18;;11001:34;;;;11083:8;11071:21;11051:18;;;11044:49;10928:2;10913:18;4037:228:107;10706:393:110;3712:292:107;;;;;;:::i;:::-;;:::i;:::-;;;;-1:-1:-1;;;;;;12471:33:110;;;12453:52;;12536:2;12521:18;;12514:34;;;;12426:18;3712:292:107;12248:306:110;9090:1097:108;;;;;;:::i;:::-;;:::i;:::-;;;13585:1:110;13574:21;;;;13556:40;;13544:2;13529:18;9090:1097:108;13414:188:110;1018:138:106;;;;;;:::i;:::-;;:::i;10422:1107:108:-;;;;;;:::i;:::-;;:::i;3156:144:27:-;;;;;;:::i;:::-;;:::i;10193:133:108:-;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2692:283;;;;;;:::i;:::-;;:::i;2981:1530::-;;;;;;:::i;:::-;;:::i;:::-;;;;-1:-1:-1;;;;;;17587:33:110;;;17569:52;;17668:2;17657:22;;;;17652:2;17637:18;;17630:50;17542:18;2981:1530:108;17399:287:110;10332:84:108;;;;;;:::i;:::-;;;;;;;;;;;;;;4555:189:107;;;;;;:::i;1808:788:108:-;;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1959:630:108;;;;;;;;-1:-1:-1;1959:630:108;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1808:788;;;;;;;;:::i;354:41:105:-;;;;;;;;-1:-1:-1;;;;;20603:55:110;;;20585:74;;20573:2;20558:18;354:41:105;20417:248:110;11632:1647:108;;;;;;:::i;:::-;;:::i;2629:57::-;;;;;;:::i;:::-;;;;;;;;;;;;;;;;3367:157:27;;;;;;:::i;:::-;-1:-1:-1;;;;;3480:27:27;;;3457:4;3480:27;;;:18;:27;;;;;;;;:37;;;;;;;;;;;;;;;3367:157;3591:351;;;;;;:::i;:::-;;:::i;8866:218:108:-;;;;;;:::i;:::-;;:::i;2247:132:27:-;2324:7;2350:13;;;;;;;;;;;-1:-1:-1;;;;;2350:22:27;;;;;;;;;;2247:132;;;;;:::o;1380:305::-;1482:4;-1:-1:-1;;;;;;1517:41:27;;-1:-1:-1;;;1517:41:27;;:109;;-1:-1:-1;;;;;;;1574:52:27;;-1:-1:-1;;;1574:52:27;1517:109;:161;;;-1:-1:-1;;;;;;;;;;861:40:35;;;1642:36:27;762:146:35;2084:103:27;2144:13;2176:4;2169:11;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2084:103;;;:::o;3122:235:107:-;3305:6;3330:20;;-1:-1:-1;;;3330:20:107;;;;;;;;;;;4014:429:27;735:10:33;-1:-1:-1;;;;;4251:14:27;;;;;;;:49;;-1:-1:-1;;;;;;3480:27:27;;;3457:4;3480:27;;;:18;:27;;;;;;;;:37;;;;;;;;;;;;4269:31;4251:49;4247:129;;;4323:42;;-1:-1:-1;;;4323:42:27;;-1:-1:-1;;;;;22742:55:110;;;4323:42:27;;;22724:74:110;22834:55;;22814:18;;;22807:83;22697:18;;4323:42:27;;;;;;;;4247:129;4385:51;4408:4;4414:2;4418:3;4423:6;4431:4;4385:22;:51::i;:::-;4198:245;4014:429;;;;;:::o;2536:552::-;2660:16;2711:3;:10;2692:8;:15;:29;2688:121;;2770:10;;2782:15;;2744:54;;-1:-1:-1;;;2744:54:27;;;;;23075:25:110;;;;23116:18;;;23109:34;23048:18;;2744:54:27;22901:248:110;2688:121:27;2819:30;2866:8;:15;2852:30;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2852:30:27;;2819:63;;2898:9;2893:158;2917:8;:15;2913:1;:19;2893:158;;;4777:4:32;4768:14;;;4748:35;;;4742:42;2972:68:27;;4777:4:32;4768:14;;;4748:35;;;4742:42;2247:132:27;:::i;2972:68::-;2953:13;2967:1;2953:16;;;;;;;;:::i;:::-;;;;;;;;;;:87;2934:3;;2893:158;;;-1:-1:-1;3068:13:27;2536:552;-1:-1:-1;;;2536:552:27:o;4037:228:107:-;4184:6;4192:15;4209:6;4238:20;;-1:-1:-1;;;4238:20:107;;;;;;;;;;;3712:292;3938:6;3946:12;3977:20;;-1:-1:-1;;;3977:20:107;;;;;;;;;;;9090:1097:108;9246:5;;9339:49;9358:12;9372:15;;;;;;;;:::i;:::-;9339:18;:49::i;:::-;9326:62;-1:-1:-1;9479:11:108;9432:13;:25;9446:10;:8;;;;;;;:3;:8;:::i;:::-;515:4:97;496:24;;;271:265;9446:10:108;9432:25;;;;;;;;;;;;;;-1:-1:-1;9432:25:108;;;:31;;;;;;;;;;;:43;;;;;;;;;;:58;;:43;;-1:-1:-1;9432:58:108;;;;;:::i;:::-;;;;-1:-1:-1;9567:18:108;;-1:-1:-1;9588:36:108;9602:3;9607:4;9613:10;9588:13;:36::i;:::-;9567:57;;9667:11;9634:17;:29;9652:10;9634:29;;;;;;;;;;;;:44;;;;;;;:::i;:::-;;;;;;;;9688:46;9694:10;9706;9718:11;9688:46;;;;;;;;;;;;:5;:46::i;:::-;9892:17;9912:10;:100;;9998:13;;;;;;;;:::i;:::-;9912:100;;;9953:13;;;;:3;:13;:::i;:::-;10022:70;;-1:-1:-1;;;10022:70:108;;10053:10;10022:70;;;25376:74:110;10073:4:108;25466:18:110;;;25459:83;25558:18;;;25551:34;;;9892:120:108;;-1:-1:-1;;;;;;10022:30:108;;;;;25349:18:110;;10022:70:108;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;10176:4:108;;9090:1097;-1:-1:-1;;;;;;;9090:1097:108:o;1018:138:106:-;1097:12;784:10;-1:-1:-1;;;;;806:11:106;784:34;;780:63;;827:16;;-1:-1:-1;;;827:16:106;;;;;;;;;;;780:63;1128:21:::1;1144:4;;1128:15;:21::i;:::-;1121:28:::0;1018:138;-1:-1:-1;;;1018:138:106:o;10422:1107:108:-;10609:10;10622:49;10641:12;10655:15;;;;;;;;:::i;10622:49::-;10609:62;;10681:18;10702:36;10716:3;10721:4;10727:10;10702:13;:36::i;:::-;10681:57;;10816:22;10841:33;10851:10;10863;10841:9;:33::i;:::-;10816:58;;10888:14;10906:1;10888:19;10884:46;;10916:14;;-1:-1:-1;;;10916:14:108;;;;;;;;;;;10884:46;11171:14;11124:13;:25;11138:10;:8;;;;;;;:3;:8;:::i;:10::-;11124:25;;;;;;;;;;;;;;-1:-1:-1;11124:25:108;;;:31;;;;;;;;;;;:43;;;;;;;;;;:61;;:43;;-1:-1:-1;11124:61:108;;;;;:::i;:::-;;;;-1:-1:-1;;11259:29:108;;;;:17;:29;;;;;:47;;11292:14;;11259:29;:47;;11292:14;;11259:47;:::i;:::-;;;;-1:-1:-1;11316:45:108;;-1:-1:-1;11322:10:108;11334;11346:14;11316:5;:45::i;:::-;11411:14;11428:10;:42;;11457:13;;;;;;;;:::i;:::-;11428:42;;;11441:13;;;;:3;:13;:::i;:::-;11411:59;-1:-1:-1;11480:42:108;-1:-1:-1;;;;;11480:14:108;;11495:10;11507:14;11480;:42::i;:::-;10541:988;;;;10422:1107;;;:::o;3156:144:27:-;3241:52;735:10:33;3274:8:27;3284;3241:18;:52::i;:::-;3156:144;;:::o;2692:283:108:-;2876:6;2918:4;2894:9:::1;2876:6:::0;2904:10:::1;:8;;::::0;;::::1;::::0;::::1;:3:::0;:8:::1;:::i;:10::-;2894:21:::0;;::::1;::::0;::::1;::::0;;;;;;-1:-1:-1;2894:21:108;:28;;-1:-1:-1;;2894:28:108::1;;::::0;;;;;;;::::1;::::0;;-1:-1:-1;;;;2939:29:108;2692:283;-1:-1:-1;;;;;;2692:283:108:o;2981:1530::-;3200:6;;3414:4:::1;-1:-1:-1::0;;;;;3396:23:108;::::1;::::0;3392:64:::1;;-1:-1:-1::0;;;;3429:23:108;-1:-1:-1;3454:1:108::1;3421:35;;3392:64;3550:4;3535:12;3592:718;3599:7;3592:718;;;4210:89;4246:3:::0;4268:17:::1;;::::0;::::1;:6:::0;:17:::1;:::i;:::-;4267:18;4210;:89::i;:::-;4185:114:::0;;-1:-1:-1;4185:114:108;-1:-1:-1;3592:718:108::1;;;4448:11:::0;4424:9:::1;:21;4434:10;:8;;::::0;;::::1;::::0;::::1;:3:::0;:8:::1;:::i;:10::-;4424:21:::0;;::::1;::::0;::::1;::::0;;;;;;-1:-1:-1;4424:21:108;;;:35;;-1:-1:-1;;4424:35:108::1;;::::0;;;;;;;::::1;::::0;;;-1:-1:-1;;;4477:23:108;-1:-1:-1;;;;;1768:1:108::1;2981:1530:::0;;;;;;;;;:::o;11632:1647::-;11853:10;11866:49;11885:12;11899:15;;;;;;;;:::i;11866:49::-;11853:62;;11925:18;11946:36;11960:3;11965:4;11971:10;11946:13;:36::i;:::-;12100:33;;;;:21;:33;;;;;;11925:57;;-1:-1:-1;12100:38:108;12096:67;;12147:16;;-1:-1:-1;;;12147:16:108;;;;;;;;;;;12096:67;12238:22;12263:33;12273:10;12285;12263:9;:33::i;:::-;12238:58;;12327:21;12310:14;:38;12306:69;;;12357:18;;-1:-1:-1;;;12357:18:108;;;;;;;;;;;12306:69;12386:33;12422;;;:21;:33;;;;;;;;;12503:17;:29;;;;;;12422:33;;12676:122;:21;12422:33;12503:29;12676:32;:122::i;:::-;12653:145;;12980:12;12943:21;:33;12965:10;12943:33;;;;;;;;;;;;:49;;;;;;;:::i;:::-;;;;-1:-1:-1;;13002:29:108;;;;:17;:29;;;;;:54;;13035:21;;13002:29;:54;;13035:21;;13002:54;:::i;:::-;;;;-1:-1:-1;13066:52:108;;-1:-1:-1;13072:10:108;13084;13096:21;13066:5;:52::i;:::-;13163:14;13180:10;:42;;13209:13;;;;:3;:13;:::i;:::-;13180:42;;;13193:13;;;;;;;;:::i;:::-;13163:59;-1:-1:-1;13232:40:108;-1:-1:-1;;;;;13232:14:108;;13247:10;13259:12;13232:14;:40::i;:::-;11785:1494;;;;;;;11632:1647;;;;:::o;3591:351:27:-;735:10:33;-1:-1:-1;;;;;3757:14:27;;;;;;;:49;;-1:-1:-1;;;;;;3480:27:27;;;3457:4;3480:27;;;:18;:27;;;;;;;;:37;;;;;;;;;;;;3775:31;3757:49;3753:129;;;3829:42;;-1:-1:-1;;;3829:42:27;;-1:-1:-1;;;;;22742:55:110;;;3829:42:27;;;22724:74:110;22834:55;;22814:18;;;22807:83;22697:18;;3829:42:27;22550:346:110;3753:129:27;3891:44;3909:4;3915:2;3919;3923:5;3930:4;3891:17;:44::i;8866:218:108:-;8991:7;9046:10;:8;;;;;;;:3;:8;:::i;:10::-;9035:40;;;;;;26445:25:110;;;;26517:1;26506:21;;;26486:18;;;26479:49;26571:14;;26564:22;26544:18;;;26537:50;26418:18;;9035:40:108;;;-1:-1:-1;;9035:40:108;;;;;;;;;9025:51;;9035:40;9025:51;;;;;8866:218;-1:-1:-1;;;;8866:218:108:o;9015:445:27:-;-1:-1:-1;;;;;9208:16:27;;9204:88;;9247:34;;-1:-1:-1;;;9247:34:27;;9278:1;9247:34;;;20585:74:110;20558:18;;9247:34:27;20417:248:110;9204:88:27;-1:-1:-1;;;;;9305:18:27;;9301:88;;9346:32;;-1:-1:-1;;;9346:32:27;;9375:1;9346:32;;;20585:74:110;20558:18;;9346:32:27;20417:248:110;9301:88:27;9398:55;9425:4;9431:2;9435:3;9440:6;9448:4;9398:26;:55::i;:::-;9015:445;;;;;:::o;8192:668:108:-;8295:5;;8489:18;8496:11;8489:4;:18;:::i;:::-;8471:36;;8641:1;8634:4;:8;;;:35;;;;-1:-1:-1;8646:18:108;8653:11;8646:4;:18;:::i;:::-;:23;;;;8634:35;8630:52;;;8671:11;;;;:::i;:::-;;;;8630:52;8830:23;8842:11;8830:9;:23;:::i;:::-;8823:30;8192:668;-1:-1:-1;;;;8192:668:108:o;10746:346:27:-;-1:-1:-1;;;;;10842:16:27;;10838:88;;10881:34;;-1:-1:-1;;;10881:34:27;;10912:1;10881:34;;;20585:74:110;20558:18;;10881:34:27;20417:248:110;10838:88:27;16374:4;16368:11;;16444:1;16429:17;;;16575:4;16563:17;;16556:35;;;16692:17;;;16722;;;16188:23;16759:17;;16752:35;;;16895:17;;;16882:31;;;16368:11;11024:61;-1:-1:-1;11063:2:27;16368:11;16692:17;11080:4;11024:26;:61::i;1990:432:107:-;2071:12;2096;2110:23;2145:4;-1:-1:-1;;;;;2137:18:107;2156:4;;2137:24;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2095:66;;;;2175:7;2171:30;;;2191:10;-1:-1:-1;2184:17:107;;-1:-1:-1;2184:17:107;2171:30;2215:10;:17;2236:1;2215:22;2211:48;;2246:13;;-1:-1:-1;;;2246:13:107;;;;;;;;;;;2211:48;2394:10;2388:17;2383:2;2371:10;2367:19;2360:46;12099:329:27;-1:-1:-1;;;;;12178:18:27;;12174:88;;12219:32;;-1:-1:-1;;;12219:32:27;;12248:1;12219:32;;;20585:74:110;20558:18;;12219:32:27;20417:248:110;12174:88:27;16374:4;16368:11;;16444:1;16429:17;;;16575:4;16563:17;;16556:35;;;16692:17;;;16722;;;16188:23;16759:17;;16752:35;;;12360:61;;;;;;-1:-1:-1;16895:17:27;;;12360:61;;;16368:11;;16692:17;12360:61;;12387:4;;16368:11;;16692:17;;12360:26;:61::i;1594:2711:96:-;1865:12;-1:-1:-1;;;;;1891:22:96;;1887:2412;;2078:1;2075;2072;2069;2061:6;2057:2;2050:5;2045:35;2034:46;;2208:7;2203:75;;2217:61;-1:-1:-1;;;2275:2:96;2217:57;:61::i;:::-;1887:2412;;;2423:4;2417:11;-1:-1:-1;;;2554:3:96;2547:79;-1:-1:-1;;;;;2667:2:96;2663:51;2659:1;2654:3;2650:11;2643:72;2791:6;2786:2;2781:3;2777:12;2770:28;3720:2;3717:1;3713:2;3708:3;3705:1;3695:8;3688:5;3683:40;3212:16;3205:24;3199:2;3181:16;3178:24;3174:1;3170;3164:8;3161:15;3157:46;3154:76;2930:815;2899:846;;3823:1;3818:3;3811:14;3924:1;3917:4;3912:3;3908:14;3901:25;4027:1;4020:4;4015:3;4011:14;4004:25;;4196:7;4191:97;;4205:83;-1:-1:-1;;;4278:8:96;4205:56;:83::i;:::-;1668:2637;1594:2711;;;:::o;13268:315:27:-;-1:-1:-1;;;;;13375:22:27;;13371:94;;13420:34;;-1:-1:-1;;;13420:34:27;;13451:1;13420:34;;;20585:74:110;20558:18;;13420:34:27;20417:248:110;13371:94:27;-1:-1:-1;;;;;13474:25:27;;;;;;;:18;:25;;;;;;;;:35;;;;;;;;;;;;;:46;;-1:-1:-1;;13474:46:27;;;;;;;;;;13535:41;;1349::110;;;13535::27;;1322:18:110;13535:41:27;;;;;;;13268:315;;;:::o;4517:3669:108:-;4631:12;;;4698:32;4719:10;:8;;;;;;;:3;:8;:::i;:10::-;-1:-1:-1;;;;;4698:11:108;:20;;;:32::i;:::-;4670:60;;;;;4740:14;4757:9;:21;4767:10;:3;:8;;;;;;;;;;:::i;:10::-;4757:21;;;;;;;;;;;-1:-1:-1;4757:21:108;;;;;;;-1:-1:-1;5646:22:108;;;;-1:-1:-1;5642:2363:108;;;5854:8;5819:942;5888:11;5880:19;;:4;:19;;;5819:942;;5973:19;5995:13;5973:19;6009:10;:8;;;;;;;:3;:8;:::i;:10::-;5995:25;;;;;;;;;;;;;;-1:-1:-1;5995:25:108;;;:31;;;;;;;;;;;:88;;;;;;;;;;;;-1:-1:-1;6105:15:108;;6101:646;;6380:55;6393:3;6398:4;6404:17;6423:11;6380:12;:55::i;:::-;6710:4;6716:11;6702:26;;;;;;;;;;6101:646;-1:-1:-1;5925:15:108;;;;;;;;:::i;:::-;5917:23;;;;:::i;:::-;;;5819:942;;;;5642:2363;;;7569:8;7534:461;7603:11;7595:19;;:4;:19;;;7534:461;;7688:19;7710:13;7688:19;7724:10;:8;;;;;;;:3;:8;:::i;:10::-;7710:25;;;;;;;;;;;;;;-1:-1:-1;7710:25:108;;;:31;;;;;;;;;;;:88;;;;;;;;;;;;-1:-1:-1;7820:15:108;;7816:165;;7859:55;7872:3;7877:4;7883:17;7902:11;7859:12;:55::i;7816:165::-;-1:-1:-1;7640:15:108;;;;;;;;:::i;:::-;7632:23;;;;:::i;:::-;;;7534:461;;;;5642:2363;-1:-1:-1;8160:5:108;;-1:-1:-1;8167:11:108;-1:-1:-1;4517:3669:108;;;;;;:::o;1564:526:41:-;1680:9;1928:1;-1:-1:-1;;1911:19:41;1908:1;1905:26;1902:1;1898:34;1891:42;1878:11;1874:60;1864:116;;1964:1;1961;1954:12;1864:116;-1:-1:-1;2051:9:41;;2047:27;;1564:526::o;8151:463:27:-;-1:-1:-1;;;;;8273:16:27;;8269:88;;8312:34;;-1:-1:-1;;;8312:34:27;;8343:1;8312:34;;;20585:74:110;20558:18;;8312:34:27;20417:248:110;8269:88:27;-1:-1:-1;;;;;8370:18:27;;8366:88;;8411:32;;-1:-1:-1;;;8411:32:27;;8440:1;8411:32;;;20585:74:110;20558:18;;8411:32:27;20417:248:110;8366:88:27;16374:4;16368:11;;16444:1;16429:17;;;16575:4;16563:17;;16556:35;;;16692:17;;;16722;;;16188:23;16759:17;;16752:35;;;16895:17;;;16882:31;;;16368:11;8552:55;8579:4;8585:2;16368:11;16692:17;8602:4;7004:690;7205:30;7213:4;7219:2;7223:3;7228:6;7205:7;:30::i;:::-;-1:-1:-1;;;;;7249:16:27;;;7245:443;;7330:10;;735::33;;7344:1:27;7330:15;7326:352;;4777:4:32;4748:35;;;4742:42;4748:35;;;4742:42;7483:67:27;7514:8;7524:4;7530:2;4742:42:32;;7545:4:27;7483:30;:67::i;:::-;7347:218;;7326:352;;;7589:74;7625:8;7635:4;7641:2;7645:3;7650:6;7658:4;7589:35;:74::i;3422:643:62:-;3559:16;3605:4;3599:11;3696:8;3691:3;3684:21;3741:4;3734;3729:3;3725:14;3718:28;3782:4;3775;3770:3;3766:14;3759:28;3823:4;3816;3811:3;3807:14;3800:28;3875:4;3872:1;3865:4;3860:3;3856:14;3841:39;4008:2;4003;3998;3992:4;3988:13;3984:22;3980:31;3974:4;3970:42;3951:61;;4037:11;4032:3;4025:24;1580:996:77;1682:20;1704:10;1716:18;1736:12;1821:17;1841:25;1859:6;1841:17;:25::i;:::-;1892:27;;-1:-1:-1;;;1892:27:77;;;;;691:25:110;;;1821:45:77;;-1:-1:-1;1877:12:77;;-1:-1:-1;;;;;1892:16:77;;;;;664:18:110;;1892:27:77;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1877:42;;-1:-1:-1;;;;;2245:4:77;2241:53;2225:69;;2374:4;2369:3;2365:14;2362:1;2351:29;2343:37;;2464:8;2457:4;2452:3;2448:14;2444:29;2429:44;;2551:8;2544:4;2539:3;2535:14;2531:29;2522:38;;2172:398;;1580:996;;;;;;;:::o;14858:1223:108:-;15063:18;15084:505;15119:3;15136:443;;;;;;;;15190:10;15136:443;;;;;;15339:11;15331:20;;;:::i;:::-;15136:443;;;;15454:10;:110;;15537:27;15563:1;2055:49:80;15537:27:108;:::i;:::-;15454:110;;;15487:27;1875:10:80;15513:1:108;15487:27;:::i;:::-;-1:-1:-1;;;;;15136:443:108;;;15084:21;:505::i;:::-;15063:526;-1:-1:-1;15709:11:108;15662:13;:25;15676:10;:8;;;;;;;:3;:8;:::i;:10::-;15662:25;;;;;;;;;;;;;;-1:-1:-1;15662:25:108;;;:31;;;;;;;;;;;:43;;;;;;;;;;:58;;:43;;-1:-1:-1;15662:58:108;;;;;:::i;:::-;;;;-1:-1:-1;15730:18:108;;-1:-1:-1;15751:36:108;15765:3;15770:4;15776:10;15751:13;:36::i;:::-;15730:57;;15797:20;15820:10;:104;;15907:15;:5;2107:3:94;2103:22;;1958:183;15907:15:108;15900:23;;15820:104;;;15860:15;:5;2303:2:94;2292:28;;2147:189;15860:15:108;15853:23;;15820:104;15797:127;;16062:12;16025:21;:33;16047:10;16025:33;;;;;;;;;;;;:49;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;;;;;14858:1223:108:o;5144:1281:27:-;5279:6;:13;5265:3;:10;:27;5261:117;;5341:10;;5353:13;;5315:52;;-1:-1:-1;;;5315:52:27;;;;;23075:25:110;;;;23116:18;;;23109:34;23048:18;;5315:52:27;22901:248:110;5261:117:27;735:10:33;5388:16:27;5430:691;5454:3;:10;5450:1;:14;5430:691;;;4777:4:32;4768:14;;;4748:35;;;;;4742:42;4748:35;;;;;;4742:42;-1:-1:-1;;;;;5600:18:27;;;5596:420;;5638:19;5660:13;;;;;;;;;;;-1:-1:-1;;;;;5660:19:27;;;;;;;;;;5701;;;5697:129;;;5751:56;;-1:-1:-1;;;5751:56:27;;-1:-1:-1;;;;;29821:55:110;;5751:56:27;;;29803:74:110;29893:18;;;29886:34;;;29936:18;;;29929:34;;;29979:18;;;29972:34;;;29775:19;;5751:56:27;29572:440:110;5697:129:27;5942:9;:13;;;;;;;;;;;-1:-1:-1;;;;;5942:19:27;;;;;;;;;5964;;;;5942:41;;5596:420;-1:-1:-1;;;;;6034:16:27;;;6030:81;;6070:9;:13;;;;;;;;;;;-1:-1:-1;;;;;6070:17:27;;;;;;;;;:26;;6091:5;;6070:9;:26;;6091:5;;6070:26;:::i;:::-;;;;-1:-1:-1;;6030:81:27;-1:-1:-1;;5466:3:27;;5430:691;;;;6135:3;:10;6149:1;6135:15;6131:288;;4777:4:32;4748:35;;4742:42;6166:10:27;;4777:4:32;4748:35;;4742:42;6166:38:27;;-1:-1:-1;6312:2:27;-1:-1:-1;;;;;6281:45:27;6306:4;-1:-1:-1;;;;;6281:45:27;6296:8;-1:-1:-1;;;;;6281:45:27;;6316:2;6320:5;6281:45;;;;;;23075:25:110;;;23131:2;23116:18;;23109:34;23063:2;23048:18;;22901:248;6281:45:27;;;;;;;;6152:185;;6131:288;;;6392:2;-1:-1:-1;;;;;6362:46:27;6386:4;-1:-1:-1;;;;;6362:46:27;6376:8;-1:-1:-1;;;;;6362:46:27;;6396:3;6401:6;6362:46;;;;;;;:::i;:::-;;;;;;;;5251:1174;5144:1281;;;;:::o;13761:974::-;-1:-1:-1;;;;;13967:14:27;;;:18;13963:766;;14005:71;;-1:-1:-1;;;14005:71:27;;-1:-1:-1;;;;;14005:38:27;;;;;:71;;14044:8;;14054:4;;14060:2;;14064:5;;14071:4;;14005:71;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;-1:-1:-1;14005:71:27;;;;;;;;-1:-1:-1;;14005:71:27;;;;;;;;;;;;:::i;:::-;;;14001:718;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;14360:6;:13;14377:1;14360:18;14356:349;;14464:26;;-1:-1:-1;;;14464:26:27;;-1:-1:-1;;;;;20603:55:110;;14464:26:27;;;20585:74:110;20558:18;;14464:26:27;20417:248:110;14356:349:27;14657:6;14651:13;14642:6;14638:2;14634:15;14627:38;14001:718;-1:-1:-1;;;;;;14125:55:27;;-1:-1:-1;;;14125:55:27;14121:174;;14250:26;;-1:-1:-1;;;14250:26:27;;-1:-1:-1;;;;;20603:55:110;;14250:26:27;;;20585:74:110;20558:18;;14250:26:27;20417:248:110;14923:1041:27;-1:-1:-1;;;;;15154:14:27;;;:18;15150:808;;15192:78;;-1:-1:-1;;;15192:78:27;;-1:-1:-1;;;;;15192:43:27;;;;;:78;;15236:8;;15246:4;;15252:3;;15257:6;;15265:4;;15192:78;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;-1:-1:-1;15192:78:27;;;;;;;;-1:-1:-1;;15192:78:27;;;;;;;;;;;;:::i;:::-;;;15188:760;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;15349:60:27;;-1:-1:-1;;;15349:60:27;15345:179;;15479:26;;-1:-1:-1;;;15479:26:27;;-1:-1:-1;;;;;20603:55:110;;15479:26:27;;;20585:74:110;20558:18;;15479:26:27;20417:248:110;14553:160:77;14654:51;;14618:7;;14654:51;;14685:6;;414:1;;14654:51;;32380:19:110;;;32424:2;32415:12;;32408:28;32461:2;32452:12;;32223:247;14654:51:77;;;;;;;;;;;;;14644:62;;;;;;14637:69;;14553:160;;;:::o;13285:1136:108:-;13417:12;13493:18;13514:11;-1:-1:-1;;;;;13514:16:108;;13531:3;13536:6;13514:33;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;13676:17;;13493:54;;-1:-1:-1;13672:720:108;;;13831:1;13813:15;:5;2107:3:94;2103:22;;1958:183;13813:15:108;:19;;;13809:107;;;13852:49;13860:13;;;;:3;:13;:::i;:::-;13884:15;:5;2107:3:94;2103:22;;1958:183;13884:15:108;13883:16;;;:::i;:::-;13852:7;:49::i;:::-;14045:1;14027:15;:5;2303:2:94;2292:28;;2147:189;14027:15:108;:19;;;14023:104;;;14066:46;14072:13;;;;;;;;:::i;:::-;14095:15;:5;2303:2:94;2292:28;;2147:189;14095:15:108;14066:5;:46::i;:::-;13672:720;;;14179:1;14161:15;:5;2303:2:94;2292:28;;2147:189;14161:15:108;:19;;;14157:107;;;14200:49;14208:13;;;;;;;;:::i;:::-;14232:15;:5;2303:2:94;2292:28;;2147:189;14200:49:108;14300:1;14282:15;:5;2107:3:94;2103:22;;1958:183;14282:15:108;:19;;;14278:104;;;14321:46;14327:13;;;;:3;:13;:::i;:::-;14350:15;:5;2107:3:94;2103:22;;1958:183;14427:240:108;14547:26;;-1:-1:-1;;;14547:26:108;;-1:-1:-1;;;;;20603:55:110;;;14547:26:108;;;20585:74:110;14547:11:108;:16;;;;20558:18:110;;14547:26:108;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;14583:47:108;;-1:-1:-1;;;;;;;;14583:17:108;;14609:11;14583:47;;;:17;:47::i;:::-;14640:11;-1:-1:-1;;;;;14640:18:108;;:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;14427:240;;:::o;14673:179::-;14796:49;;-1:-1:-1;;;14796:49:108;;-1:-1:-1;;;;;35153:55:110;;;14796:49:108;;;35135:74:110;14831:4:108;35225:18:110;;;35218:83;35349:34;35337:47;;35317:18;;;35310:75;14796:11:108;:16;;;;35108:18:110;;14796:49:108;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;14:154:110;-1:-1:-1;;;;;93:5:110;89:54;82:5;79:65;69:93;;158:1;155;148:12;69:93;14:154;:::o;173:367::-;241:6;249;302:2;290:9;281:7;277:23;273:32;270:52;;;318:1;315;308:12;270:52;357:9;344:23;376:31;401:5;376:31;:::i;:::-;426:5;504:2;489:18;;;;476:32;;-1:-1:-1;;;173:367:110:o;727:131::-;-1:-1:-1;;;;;;801:32:110;;791:43;;781:71;;848:1;845;838:12;863:245;921:6;974:2;962:9;953:7;949:23;945:32;942:52;;;990:1;987;980:12;942:52;1029:9;1016:23;1048:30;1072:5;1048:30;:::i;1401:226::-;1460:6;1513:2;1501:9;1492:7;1488:23;1484:32;1481:52;;;1529:1;1526;1519:12;1481:52;-1:-1:-1;1574:23:110;;1401:226;-1:-1:-1;1401:226:110:o;1774:289::-;1816:3;1854:5;1848:12;1881:6;1876:3;1869:19;1937:6;1930:4;1923:5;1919:16;1912:4;1907:3;1903:14;1897:47;1989:1;1982:4;1973:6;1968:3;1964:16;1960:27;1953:38;2052:4;2045:2;2041:7;2036:2;2028:6;2024:15;2020:29;2015:3;2011:39;2007:50;2000:57;;;1774:289;;;;:::o;2068:220::-;2217:2;2206:9;2199:21;2180:4;2237:45;2278:2;2267:9;2263:18;2255:6;2237:45;:::i;2293:156::-;2353:5;2398:3;2389:6;2384:3;2380:16;2376:26;2373:46;;;2415:1;2412;2405:12;2373:46;-1:-1:-1;2437:6:110;2293:156;-1:-1:-1;2293:156:110:o;2454:170::-;2528:5;2573:3;2564:6;2559:3;2555:16;2551:26;2548:46;;;2590:1;2587;2580:12;2629:347;2680:8;2690:6;2744:3;2737:4;2729:6;2725:17;2721:27;2711:55;;2762:1;2759;2752:12;2711:55;-1:-1:-1;2785:20:110;;2828:18;2817:30;;2814:50;;;2860:1;2857;2850:12;2814:50;2897:4;2889:6;2885:17;2873:29;;2949:3;2942:4;2933:6;2925;2921:19;2917:30;2914:39;2911:59;;;2966:1;2963;2956:12;2981:829;3148:6;3156;3164;3172;3180;3233:3;3221:9;3212:7;3208:23;3204:33;3201:53;;;3250:1;3247;3240:12;3201:53;3289:9;3276:23;3308:31;3333:5;3308:31;:::i;:::-;3358:5;-1:-1:-1;3382:63:110;3437:7;3432:2;3417:18;;3382:63;:::i;:::-;3372:73;;3464:78;3534:7;3528:3;3517:9;3513:19;3464:78;:::i;:::-;3454:88;;3593:3;3582:9;3578:19;3565:33;3621:18;3613:6;3610:30;3607:50;;;3653:1;3650;3643:12;3607:50;3692:58;3742:7;3733:6;3722:9;3718:22;3692:58;:::i;:::-;2981:829;;;;-1:-1:-1;2981:829:110;;-1:-1:-1;3769:8:110;;3666:84;2981:829;-1:-1:-1;;;2981:829:110:o;4022:127::-;4083:10;4078:3;4074:20;4071:1;4064:31;4114:4;4111:1;4104:15;4138:4;4135:1;4128:15;4154:275;4225:2;4219:9;4290:2;4271:13;;-1:-1:-1;;4267:27:110;4255:40;;4325:18;4310:34;;4346:22;;;4307:62;4304:88;;;4372:18;;:::i;:::-;4408:2;4401:22;4154:275;;-1:-1:-1;4154:275:110:o;4434:183::-;4494:4;4527:18;4519:6;4516:30;4513:56;;;4549:18;;:::i;:::-;-1:-1:-1;4594:1:110;4590:14;4606:4;4586:25;;4434:183::o;4622:723::-;4676:5;4729:3;4722:4;4714:6;4710:17;4706:27;4696:55;;4747:1;4744;4737:12;4696:55;4787:6;4774:20;4814:64;4830:47;4870:6;4830:47;:::i;:::-;4814:64;:::i;:::-;4902:3;4926:6;4921:3;4914:19;4958:4;4953:3;4949:14;4942:21;;5019:4;5009:6;5006:1;5002:14;4994:6;4990:27;4986:38;4972:52;;5047:3;5039:6;5036:15;5033:35;;;5064:1;5061;5054:12;5033:35;5100:4;5092:6;5088:17;5114:200;5130:6;5125:3;5122:15;5114:200;;;5222:17;;5252:18;;5299:4;5290:14;;;;5147;5114:200;;;-1:-1:-1;5332:7:110;4622:723;-1:-1:-1;;;;;4622:723:110:o;5350:558::-;5392:5;5445:3;5438:4;5430:6;5426:17;5422:27;5412:55;;5463:1;5460;5453:12;5412:55;5503:6;5490:20;5533:18;5525:6;5522:30;5519:56;;;5555:18;;:::i;:::-;5599:59;5646:2;5623:17;;-1:-1:-1;;5619:31:110;5652:4;5615:42;5599:59;:::i;:::-;5683:6;5674:7;5667:23;5737:3;5730:4;5721:6;5713;5709:19;5705:30;5702:39;5699:59;;;5754:1;5751;5744:12;5699:59;5819:6;5812:4;5804:6;5800:17;5793:4;5784:7;5780:18;5767:59;5875:1;5846:20;;;5868:4;5842:31;5835:42;;;;5850:7;5350:558;-1:-1:-1;;;5350:558:110:o;5913:1082::-;6067:6;6075;6083;6091;6099;6152:3;6140:9;6131:7;6127:23;6123:33;6120:53;;;6169:1;6166;6159:12;6120:53;6208:9;6195:23;6227:31;6252:5;6227:31;:::i;:::-;6277:5;-1:-1:-1;6334:2:110;6319:18;;6306:32;6347:33;6306:32;6347:33;:::i;:::-;6399:7;-1:-1:-1;6457:2:110;6442:18;;6429:32;6484:18;6473:30;;6470:50;;;6516:1;6513;6506:12;6470:50;6539:61;6592:7;6583:6;6572:9;6568:22;6539:61;:::i;:::-;6529:71;;;6653:2;6642:9;6638:18;6625:32;6682:18;6672:8;6669:32;6666:52;;;6714:1;6711;6704:12;6666:52;6737:63;6792:7;6781:8;6770:9;6766:24;6737:63;:::i;:::-;6727:73;;;6853:3;6842:9;6838:19;6825:33;6883:18;6873:8;6870:32;6867:52;;;6915:1;6912;6905:12;6867:52;6938:51;6981:7;6970:8;6959:9;6955:24;6938:51;:::i;:::-;6928:61;;;5913:1082;;;;;;;;:::o;7000:815::-;7125:6;7133;7141;7149;7157;7210:3;7198:9;7189:7;7185:23;7181:33;7178:53;;;7227:1;7224;7217:12;7178:53;7266:9;7253:23;7285:31;7310:5;7285:31;:::i;:::-;7335:5;-1:-1:-1;7359:63:110;7414:7;7409:2;7394:18;;7359:63;:::i;:::-;7349:73;;7474:3;7463:9;7459:19;7446:33;7488;7513:7;7488:33;:::i;:::-;7540:7;-1:-1:-1;7598:3:110;7583:19;;7570:33;7626:18;7615:30;;7612:50;;;7658:1;7655;7648:12;7820:1215;7938:6;7946;7999:2;7987:9;7978:7;7974:23;7970:32;7967:52;;;8015:1;8012;8005:12;7967:52;8055:9;8042:23;8088:18;8080:6;8077:30;8074:50;;;8120:1;8117;8110:12;8074:50;8143:22;;8196:4;8188:13;;8184:27;-1:-1:-1;8174:55:110;;8225:1;8222;8215:12;8174:55;8265:2;8252:16;8288:64;8304:47;8344:6;8304:47;:::i;8288:64::-;8374:3;8398:6;8393:3;8386:19;8430:4;8425:3;8421:14;8414:21;;8487:4;8477:6;8474:1;8470:14;8466:2;8462:23;8458:34;8444:48;;8515:7;8507:6;8504:19;8501:39;;;8536:1;8533;8526:12;8501:39;8568:4;8564:2;8560:13;8549:24;;8582:221;8598:6;8593:3;8590:15;8582:221;;;8680:3;8667:17;8697:31;8722:5;8697:31;:::i;:::-;8741:18;;8788:4;8615:14;;;;8779;;;;8582:221;;;8822:5;-1:-1:-1;;;;8880:4:110;8865:20;;8852:34;8911:18;8898:32;;8895:52;;;8943:1;8940;8933:12;8895:52;8966:63;9021:7;9010:8;8999:9;8995:24;8966:63;:::i;:::-;8956:73;;;7820:1215;;;;;:::o;9040:420::-;9093:3;9131:5;9125:12;9158:6;9153:3;9146:19;9190:4;9185:3;9181:14;9174:21;;9229:4;9222:5;9218:16;9252:1;9262:173;9276:6;9273:1;9270:13;9262:173;;;9337:13;;9325:26;;9380:4;9371:14;;;;9408:17;;;;9298:1;9291:9;9262:173;;;-1:-1:-1;9451:3:110;;9040:420;-1:-1:-1;;;;9040:420:110:o;9465:261::-;9644:2;9633:9;9626:21;9607:4;9664:56;9716:2;9705:9;9701:18;9693:6;9664:56;:::i;9731:158::-;9794:5;9839:2;9830:6;9825:3;9821:16;9817:25;9814:45;;;9855:1;9852;9845:12;9894:807;10050:6;10058;10066;10074;10082;10135:3;10123:9;10114:7;10110:23;10106:33;10103:53;;;10152:1;10149;10142:12;10103:53;10191:9;10178:23;10210:31;10235:5;10210:31;:::i;:::-;10260:5;-1:-1:-1;10284:63:110;10339:7;10334:2;10319:18;;10284:63;:::i;:::-;10274:73;;10366:67;10425:7;10419:3;10408:9;10404:19;10366:67;:::i;:::-;10356:77;;10484:3;10473:9;10469:19;10456:33;10512:18;10504:6;10501:30;10498:50;;;10544:1;10541;10534:12;11104:1139;11357:6;11365;11373;11381;11389;11397;11405;11458:3;11446:9;11437:7;11433:23;11429:33;11426:53;;;11475:1;11472;11465:12;11426:53;11514:9;11501:23;11533:31;11558:5;11533:31;:::i;:::-;11583:5;-1:-1:-1;11607:63:110;11662:7;11657:2;11642:18;;11607:63;:::i;:::-;11597:73;;11689:78;11759:7;11753:3;11742:9;11738:19;11689:78;:::i;:::-;11679:88;-1:-1:-1;11840:3:110;11825:19;;11812:33;;-1:-1:-1;11944:3:110;11929:19;;11916:33;;-1:-1:-1;12026:3:110;12011:19;;11998:33;12054:18;12043:30;;12040:50;;;12086:1;12083;12076:12;12040:50;12125:58;12175:7;12166:6;12155:9;12151:22;12125:58;:::i;:::-;11104:1139;;;;-1:-1:-1;11104:1139:110;;-1:-1:-1;11104:1139:110;;;;12099:84;;-1:-1:-1;;;11104:1139:110:o;12559:160::-;12625:20;;12685:1;12674:20;;;12664:31;;12654:59;;12709:1;12706;12699:12;12654:59;12559:160;;;:::o;12724:118::-;12810:5;12803:13;12796:21;12789:5;12786:32;12776:60;;12832:1;12829;12822:12;12847:562;12956:6;12964;12972;12980;13033:3;13021:9;13012:7;13008:23;13004:33;13001:53;;;13050:1;13047;13040:12;13001:53;13073:54;13119:7;13108:9;13073:54;:::i;:::-;13063:64;;13146:37;13178:3;13167:9;13163:19;13146:37;:::i;:::-;13136:47;;13233:3;13222:9;13218:19;13205:33;13247:28;13269:5;13247:28;:::i;:::-;12847:562;;;;-1:-1:-1;13294:5:110;;13372:3;13357:19;13344:33;;-1:-1:-1;;12847:562:110:o;13607:409::-;13677:6;13685;13738:2;13726:9;13717:7;13713:23;13709:32;13706:52;;;13754:1;13751;13744:12;13706:52;13794:9;13781:23;13827:18;13819:6;13816:30;13813:50;;;13859:1;13856;13849:12;13813:50;13898:58;13948:7;13939:6;13928:9;13924:22;13898:58;:::i;:::-;13975:8;;13872:84;;-1:-1:-1;13607:409:110;-1:-1:-1;;;;13607:409:110:o;14244:441::-;14344:6;14352;14360;14413:3;14401:9;14392:7;14388:23;14384:33;14381:53;;;14430:1;14427;14420:12;14381:53;14453:54;14499:7;14488:9;14453:54;:::i;:::-;14443:64;;14526:37;14558:3;14547:9;14543:19;14526:37;:::i;:::-;14516:47;;14613:3;14602:9;14598:19;14585:33;14627:28;14649:5;14627:28;:::i;:::-;14674:5;14664:15;;;14244:441;;;;;:::o;14690:382::-;14755:6;14763;14816:2;14804:9;14795:7;14791:23;14787:32;14784:52;;;14832:1;14829;14822:12;14784:52;14871:9;14858:23;14890:31;14915:5;14890:31;:::i;:::-;14940:5;-1:-1:-1;14997:2:110;14982:18;;14969:32;15010:30;14969:32;15010:30;:::i;:::-;15059:7;15049:17;;;14690:382;;;;;:::o;15077:459::-;15177:6;15185;15193;15246:2;15234:9;15225:7;15221:23;15217:32;15214:52;;;15262:1;15259;15252:12;15214:52;15307:23;;;-1:-1:-1;15373:36:110;15405:2;15390:18;;15373:36;:::i;:::-;15363:46;;15461:2;15450:9;15446:18;15433:32;15474:30;15496:7;15474:30;:::i;15541:886::-;15673:6;15681;15689;15697;15705;15713;15766:3;15754:9;15745:7;15741:23;15737:33;15734:53;;;15783:1;15780;15773:12;15734:53;15822:9;15809:23;15841:31;15866:5;15841:31;:::i;:::-;15891:5;-1:-1:-1;15915:63:110;15970:7;15965:2;15950:18;;15915:63;:::i;:::-;15905:73;;16030:3;16019:9;16015:19;16002:33;16044;16069:7;16044:33;:::i;:::-;16096:7;-1:-1:-1;16122:37:110;16154:3;16139:19;;16122:37;:::i;:::-;16112:47;;16210:3;16199:9;16195:19;16182:33;16238:18;16230:6;16227:30;16224:50;;;16270:1;16267;16260:12;16224:50;16309:58;16359:7;16350:6;16339:9;16335:22;16309:58;:::i;:::-;15541:886;;;;-1:-1:-1;15541:886:110;;-1:-1:-1;15541:886:110;;16386:8;;15541:886;-1:-1:-1;;;15541:886:110:o;16432:962::-;16631:6;16639;16647;16655;16663;16671;16724:3;16712:9;16703:7;16699:23;16695:33;16692:53;;;16741:1;16738;16731:12;16692:53;16780:9;16767:23;16799:31;16824:5;16799:31;:::i;:::-;16849:5;-1:-1:-1;16873:63:110;16928:7;16923:2;16908:18;;16873:63;:::i;:::-;16863:73;;16955:67;17014:7;17008:3;16997:9;16993:19;16955:67;:::i;:::-;16945:77;-1:-1:-1;17095:3:110;17080:19;;17067:33;;-1:-1:-1;17177:3:110;17162:19;;17149:33;17205:18;17194:30;;17191:50;;;17237:1;17234;17227:12;17691:915;17825:6;17833;17841;17849;17857;17865;17918:3;17906:9;17897:7;17893:23;17889:33;17886:53;;;17935:1;17932;17925:12;17886:53;17974:9;17961:23;17993:31;18018:5;17993:31;:::i;:::-;18043:5;-1:-1:-1;18067:63:110;18122:7;18117:2;18102:18;;18067:63;:::i;:::-;18057:73;-1:-1:-1;18203:3:110;18188:19;;18175:33;;-1:-1:-1;18307:3:110;18292:19;;18279:33;;-1:-1:-1;18389:3:110;18374:19;;18361:33;18417:18;18406:30;;18403:50;;;18449:1;18446;18439:12;18611:1801;18834:13;;1183;1176:21;1164:34;;18805:3;18790:19;;18906:4;18898:6;18894:17;18888:24;18921:51;18966:4;18955:9;18951:20;18937:12;1183:13;1176:21;1164:34;;1113:91;18921:51;;19021:4;19013:6;19009:17;19003:24;19036:53;19083:4;19072:9;19068:20;19052:14;1183:13;1176:21;1164:34;;1113:91;19036:53;;19138:4;19130:6;19126:17;19120:24;19153:53;19200:4;19189:9;19185:20;19169:14;1183:13;1176:21;1164:34;;1113:91;19153:53;;19255:4;19247:6;19243:17;19237:24;19270:53;19317:4;19306:9;19302:20;19286:14;1183:13;1176:21;1164:34;;1113:91;19270:53;;19372:4;19364:6;19360:17;19354:24;19387:53;19434:4;19423:9;19419:20;19403:14;1183:13;1176:21;1164:34;;1113:91;19387:53;;19489:4;19481:6;19477:17;19471:24;19504:53;19551:4;19540:9;19536:20;19520:14;1183:13;1176:21;1164:34;;1113:91;19504:53;;19606:4;19598:6;19594:17;19588:24;19621:53;19668:4;19657:9;19653:20;19637:14;1183:13;1176:21;1164:34;;1113:91;19621:53;;19723:6;19715;19711:19;19705:26;19740:55;19787:6;19776:9;19772:22;19756:14;1183:13;1176:21;1164:34;;1113:91;19740:55;;19844:6;19836;19832:19;19826:26;19861:55;19908:6;19897:9;19893:22;19877:14;1183:13;1176:21;1164:34;;1113:91;19861:55;;19965:6;19957;19953:19;19947:26;19982:55;20029:6;20018:9;20014:22;19998:14;1183:13;1176:21;1164:34;;1113:91;19982:55;;20087:6;20079;20075:19;20069:26;20104:56;20152:6;20141:9;20137:22;20120:15;1183:13;1176:21;1164:34;;1113:91;20104:56;;20210:6;20202;20198:19;20192:26;20227:56;20275:6;20264:9;20260:22;20243:15;1183:13;1176:21;1164:34;;1113:91;20227:56;;20333:6;20325;20321:19;20315:26;20350:56;20398:6;20387:9;20383:22;20366:15;1183:13;1176:21;1164:34;;1113:91;20350:56;;18611:1801;;;;:::o;20929:388::-;20997:6;21005;21058:2;21046:9;21037:7;21033:23;21029:32;21026:52;;;21074:1;21071;21064:12;21026:52;21113:9;21100:23;21132:31;21157:5;21132:31;:::i;:::-;21182:5;-1:-1:-1;21239:2:110;21224:18;;21211:32;21252:33;21211:32;21252:33;:::i;21322:838::-;21426:6;21434;21442;21450;21458;21511:3;21499:9;21490:7;21486:23;21482:33;21479:53;;;21528:1;21525;21518:12;21479:53;21567:9;21554:23;21586:31;21611:5;21586:31;:::i;:::-;21636:5;-1:-1:-1;21693:2:110;21678:18;;21665:32;21706:33;21665:32;21706:33;:::i;:::-;21758:7;-1:-1:-1;21838:2:110;21823:18;;21810:32;;-1:-1:-1;21941:2:110;21926:18;;21913:32;;-1:-1:-1;22022:3:110;22007:19;;21994:33;22050:18;22039:30;;22036:50;;;22082:1;22079;22072:12;22165:380;22244:1;22240:12;;;;22287;;;22308:61;;22362:4;22354:6;22350:17;22340:27;;22308:61;22415:2;22407:6;22404:14;22384:18;22381:38;22378:161;;22461:10;22456:3;22452:20;22449:1;22442:31;22496:4;22493:1;22486:15;22524:4;22521:1;22514:15;23154:127;23215:10;23210:3;23206:20;23203:1;23196:31;23246:4;23243:1;23236:15;23270:4;23267:1;23260:15;23286:182;23343:6;23396:2;23384:9;23375:7;23371:23;23367:32;23364:52;;;23412:1;23409;23402:12;23364:52;23435:27;23452:9;23435:27;:::i;23473:161::-;23540:20;;23600:8;23589:20;;23579:31;;23569:59;;23624:1;23621;23614:12;23639:986;23724:6;23784:3;23772:9;23763:7;23759:23;23755:33;23800:2;23797:22;;;23815:1;23812;23805:12;23797:22;-1:-1:-1;23884:2:110;23878:9;23926:3;23914:16;;23960:18;23945:34;;23981:22;;;23942:62;23939:88;;;24007:18;;:::i;:::-;24043:2;24036:22;24080:23;;24112:31;24080:23;24112:31;:::i;:::-;24152:21;;24225:2;24210:18;;24197:32;24238:33;24197:32;24238:33;:::i;:::-;24299:2;24287:15;;24280:32;24345:37;24378:2;24363:18;;24345:37;:::i;:::-;24340:2;24332:6;24328:15;24321:62;24416:36;24448:2;24437:9;24433:18;24416:36;:::i;:::-;24411:2;24403:6;24399:15;24392:61;24505:3;24494:9;24490:19;24477:33;24519;24544:7;24519:33;:::i;:::-;24580:3;24568:16;;24561:33;24572:6;23639:986;-1:-1:-1;;;23639:986:110:o;24630:127::-;24691:10;24686:3;24682:20;24679:1;24672:31;24722:4;24719:1;24712:15;24746:4;24743:1;24736:15;24762:125;24827:9;;;24848:10;;;24845:36;;;24861:18;;:::i;24892:277::-;24981:6;25034:2;25022:9;25013:7;25009:23;25005:32;25002:52;;;25050:1;25047;25040:12;25002:52;25089:9;25076:23;25108:31;25133:5;25108:31;:::i;25596:245::-;25663:6;25716:2;25704:9;25695:7;25691:23;25687:32;25684:52;;;25732:1;25729;25722:12;25684:52;25764:9;25758:16;25783:28;25805:5;25783:28;:::i;25846:128::-;25913:9;;;25934:11;;;25931:37;;;25948:18;;:::i;25979:241::-;26035:6;26088:2;26076:9;26067:7;26063:23;26059:32;26056:52;;;26104:1;26101;26094:12;26056:52;26143:9;26130:23;26162:28;26184:5;26162:28;:::i;26829:127::-;26890:10;26885:3;26881:20;26878:1;26871:31;26921:4;26918:1;26911:15;26945:4;26942:1;26935:15;26961:275;26999:1;27040;27037;27026:16;27076:1;27073;27062:16;27097:3;27087:37;;27104:18;;:::i;:::-;-1:-1:-1;;27140:21:110;;-1:-1:-1;;27163:15:110;;27136:43;27133:69;;;27182:18;;:::i;:::-;27216:14;;;26961:275;-1:-1:-1;;;26961:275:110:o;27241:166::-;27271:1;27312;27309;27298:16;27333:3;27323:37;;27340:18;;:::i;:::-;27397:3;27393:1;27390;27379:16;27374:27;27369:32;;;27241:166;;;;:::o;27412:192::-;27449:3;27496:5;27493:1;27482:20;27530:7;27526:12;27517:7;27514:25;27511:51;;27542:18;;:::i;:::-;-1:-1:-1;;27578:20:110;;27412:192;-1:-1:-1;;27412:192:110:o;27609:237::-;27647:7;27724:1;27721;27710:16;27706:1;27703;27692:16;27688:39;27761:11;27758:1;27747:26;27736:37;;27804:11;27795:7;27792:24;27782:58;;27820:18;;:::i;27851:271::-;28034:6;28026;28021:3;28008:33;27990:3;28060:16;;28085:13;;;28060:16;27851:271;-1:-1:-1;27851:271:110:o;28127:189::-;28223:1;28194:16;;;28212;;;;28190:39;28277:7;28244:18;;-1:-1:-1;;28264:22:110;;28241:46;28238:72;;;28290:18;;:::i;28321:193::-;28419:1;28408:16;;;28390;;;;28386:39;-1:-1:-1;;28440:23:110;;28475:8;28465:19;;28437:48;28434:74;;;28488:18;;:::i;28701:184::-;28771:6;28824:2;28812:9;28803:7;28799:23;28795:32;28792:52;;;28840:1;28837;28830:12;28792:52;-1:-1:-1;28863:16:110;;28701:184;-1:-1:-1;28701:184:110:o;28890:136::-;28925:3;-1:-1:-1;;;28946:22:110;;28943:48;;28971:18;;:::i;:::-;-1:-1:-1;29011:1:110;29007:13;;28890:136::o;29031:267::-;-1:-1:-1;;;;;29154:50:110;;;29102;;;29098:107;;29217:52;;29214:78;;;29272:18;;:::i;29303:264::-;-1:-1:-1;;;;;29372:50:110;;;29424;;;29368:107;;29487:51;;29484:77;;;29541:18;;:::i;30017:465::-;30274:2;30263:9;30256:21;30237:4;30300:56;30352:2;30341:9;30337:18;30329:6;30300:56;:::i;:::-;30404:9;30396:6;30392:22;30387:2;30376:9;30372:18;30365:50;30432:44;30469:6;30461;30432:44;:::i;:::-;30424:52;30017:465;-1:-1:-1;;;;;30017:465:110:o;30487:603::-;-1:-1:-1;;;;;30750:6:110;30746:55;30735:9;30728:74;-1:-1:-1;;;;;30842:6:110;30838:55;30833:2;30822:9;30818:18;30811:83;30930:6;30925:2;30914:9;30910:18;30903:34;30973:6;30968:2;30957:9;30953:18;30946:34;31017:3;31011;31000:9;30996:19;30989:32;30709:4;31038:46;31079:3;31068:9;31064:19;31056:6;31038:46;:::i;:::-;31030:54;30487:603;-1:-1:-1;;;;;;;30487:603:110:o;31095:249::-;31164:6;31217:2;31205:9;31196:7;31192:23;31188:32;31185:52;;;31233:1;31230;31223:12;31185:52;31265:9;31259:16;31284:30;31308:5;31284:30;:::i;31349:869::-;-1:-1:-1;;;;;31712:6:110;31708:55;31697:9;31690:74;-1:-1:-1;;;;;31804:6:110;31800:55;31795:2;31784:9;31780:18;31773:83;31892:3;31887:2;31876:9;31872:18;31865:31;31671:4;31919:57;31971:3;31960:9;31956:19;31948:6;31919:57;:::i;:::-;32024:9;32016:6;32012:22;32007:2;31996:9;31992:18;31985:50;32058:44;32095:6;32087;32058:44;:::i;:::-;32044:58;;32151:9;32143:6;32139:22;32133:3;32122:9;32118:19;32111:51;32179:33;32205:6;32197;32179:33;:::i;:::-;32171:41;31349:869;-1:-1:-1;;;;;;;;31349:869:110:o;32752:1255::-;33084:4;33129:6;33116:20;33145:31;33170:5;33145:31;:::i;:::-;-1:-1:-1;;;;;33203:54:110;33185:73;;33307:4;33295:17;;33282:31;33322:33;33282:31;33322:33;:::i;:::-;-1:-1:-1;;;;;33393:56:110;33386:4;33371:20;;33364:86;33530:8;33492:36;33522:4;33510:17;;33492:36;:::i;:::-;33488:51;33481:4;33470:9;33466:20;33459:81;33592:35;33621:4;33613:6;33609:17;33592:35;:::i;:::-;33589:1;33578:50;33571:4;33560:9;33556:20;33549:80;33678:4;33670:6;33666:17;33653:31;33693:33;33718:7;33693:33;:::i;:::-;-1:-1:-1;;;;;33764:56:110;;;33757:4;33742:20;;33735:86;32565:12;;32558:20;32551:28;33882:3;33867:19;;32539:41;32629:4;32618:16;;32612:23;32596:14;;;32589:47;32689:4;32678:16;;32672:23;32668:72;32652:14;;;32645:96;33924:3;33918;33907:9;33903:19;33896:32;33945:56;33996:3;33985:9;33981:19;1723:1;1711:14;;1758:4;1749:14;;1632:137;34235:213;34270:3;34318:5;34314:2;34303:21;34352:34;34348:39;34339:7;34336:52;34333:78;;34391:18;;:::i;:::-;34431:1;34427:15;;34235:213;-1:-1:-1;;34235:213:110:o",
        "linkReferences": {},
        "immutableReferences": {
            "58929": [
                {
                    "start": 1330,
                    "length": 32
                },
                {
                    "start": 2610,
                    "length": 32
                },
                {
                    "start": 4632,
                    "length": 32
                },
                {
                    "start": 6915,
                    "length": 32
                },
                {
                    "start": 7310,
                    "length": 32
                },
                {
                    "start": 7413,
                    "length": 32
                },
                {
                    "start": 7470,
                    "length": 32
                },
                {
                    "start": 7663,
                    "length": 32
                }
            ]
        }
    },
    "methodIdentifiers": {
        "afterAddLiquidity(address,(address,address,uint24,int24,address),(int24,int24,int256,bytes32),int256,int256,bytes)": "9f063efc",
        "afterDonate(address,(address,address,uint24,int24,address),uint256,uint256,bytes)": "e1b4af69",
        "afterInitialize(address,(address,address,uint24,int24,address),uint160,int24,bytes)": "a910f80f",
        "afterRemoveLiquidity(address,(address,address,uint24,int24,address),(int24,int24,int256,bytes32),int256,int256,bytes)": "6c2bbe7e",
        "afterSwap(address,(address,address,uint24,int24,address),(bool,int256,uint160),int256,bytes)": "b47b2fb1",
        "balanceOf(address,uint256)": "00fdd58e",
        "balanceOfBatch(address[],uint256[])": "4e1273f4",
        "beforeAddLiquidity(address,(address,address,uint24,int24,address),(int24,int24,int256,bytes32),bytes)": "259982e5",
        "beforeDonate(address,(address,address,uint24,int24,address),uint256,uint256,bytes)": "b6a8b0fa",
        "beforeInitialize(address,(address,address,uint24,int24,address),uint160,bytes)": "3440d820",
        "beforeRemoveLiquidity(address,(address,address,uint24,int24,address),(int24,int24,int256,bytes32),bytes)": "21d0ee70",
        "beforeSwap(address,(address,address,uint24,int24,address),(bool,int256,uint160),bytes)": "575e24b4",
        "cancelOrder((address,address,uint24,int24,address),int24,bool)": "a0dc3f99",
        "claimTokensSupply(uint256)": "b5a33914",
        "claimableOutputTokens(uint256)": "3bb76cc1",
        "getHookPermissions()": "c4e833ce",
        "getPositionId((address,address,uint24,int24,address),int24,bool)": "fa59cb0c",
        "isApprovedForAll(address,address)": "e985e9c5",
        "lastTicks(bytes32)": "e4cbfea5",
        "pendingOrders(bytes32,int24,bool)": "a2dc31b2",
        "placeOrder((address,address,uint24,int24,address),int24,bool,uint256)": "7e8941af",
        "poolManager()": "dc4c90d3",
        "redeem((address,address,uint24,int24,address),int24,bool,uint256)": "dd02c964",
        "safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": "2eb2c2d6",
        "safeTransferFrom(address,address,uint256,uint256,bytes)": "f242432a",
        "setApprovalForAll(address,bool)": "a22cb465",
        "supportsInterface(bytes4)": "01ffc9a7",
        "unlockCallback(bytes)": "91dd7346",
        "uri(uint256)": "0e89341c"
    },
    "rawMetadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract IPoolManager\",\"name\":\"_manager\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"_uri\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"HookNotImplemented\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidOrder\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidPool\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"LockFailure\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotEnoughToClaim\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotPoolManager\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotSelf\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NothingToClaim\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"}],\"name\":\"TransferBatch\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"TransferSingle\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"value\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"URI\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"Currency\",\"name\":\"currency0\",\"type\":\"address\"},{\"internalType\":\"Currency\",\"name\":\"currency1\",\"type\":\"address\"},{\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"},{\"internalType\":\"int24\",\"name\":\"tickSpacing\",\"type\":\"int24\"},{\"internalType\":\"contract IHooks\",\"name\":\"hooks\",\"type\":\"address\"}],\"internalType\":\"struct PoolKey\",\"name\":\"\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"},{\"internalType\":\"int256\",\"name\":\"liquidityDelta\",\"type\":\"int256\"},{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"}],\"internalType\":\"struct IPoolManager.ModifyLiquidityParams\",\"name\":\"\",\"type\":\"tuple\"},{\"internalType\":\"BalanceDelta\",\"name\":\"\",\"type\":\"int256\"},{\"internalType\":\"BalanceDelta\",\"name\":\"\",\"type\":\"int256\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"afterAddLiquidity\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"},{\"internalType\":\"BalanceDelta\",\"name\":\"\",\"type\":\"int256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"Currency\",\"name\":\"currency0\",\"type\":\"address\"},{\"internalType\":\"Currency\",\"name\":\"currency1\",\"type\":\"address\"},{\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"},{\"internalType\":\"int24\",\"name\":\"tickSpacing\",\"type\":\"int24\"},{\"internalType\":\"contract IHooks\",\"name\":\"hooks\",\"type\":\"address\"}],\"internalType\":\"struct PoolKey\",\"name\":\"\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"afterDonate\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"Currency\",\"name\":\"currency0\",\"type\":\"address\"},{\"internalType\":\"Currency\",\"name\":\"currency1\",\"type\":\"address\"},{\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"},{\"internalType\":\"int24\",\"name\":\"tickSpacing\",\"type\":\"int24\"},{\"internalType\":\"contract IHooks\",\"name\":\"hooks\",\"type\":\"address\"}],\"internalType\":\"struct PoolKey\",\"name\":\"key\",\"type\":\"tuple\"},{\"internalType\":\"uint160\",\"name\":\"\",\"type\":\"uint160\"},{\"internalType\":\"int24\",\"name\":\"tick\",\"type\":\"int24\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"afterInitialize\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"Currency\",\"name\":\"currency0\",\"type\":\"address\"},{\"internalType\":\"Currency\",\"name\":\"currency1\",\"type\":\"address\"},{\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"},{\"internalType\":\"int24\",\"name\":\"tickSpacing\",\"type\":\"int24\"},{\"internalType\":\"contract IHooks\",\"name\":\"hooks\",\"type\":\"address\"}],\"internalType\":\"struct PoolKey\",\"name\":\"\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"},{\"internalType\":\"int256\",\"name\":\"liquidityDelta\",\"type\":\"int256\"},{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"}],\"internalType\":\"struct IPoolManager.ModifyLiquidityParams\",\"name\":\"\",\"type\":\"tuple\"},{\"internalType\":\"BalanceDelta\",\"name\":\"\",\"type\":\"int256\"},{\"internalType\":\"BalanceDelta\",\"name\":\"\",\"type\":\"int256\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"afterRemoveLiquidity\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"},{\"internalType\":\"BalanceDelta\",\"name\":\"\",\"type\":\"int256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"Currency\",\"name\":\"currency0\",\"type\":\"address\"},{\"internalType\":\"Currency\",\"name\":\"currency1\",\"type\":\"address\"},{\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"},{\"internalType\":\"int24\",\"name\":\"tickSpacing\",\"type\":\"int24\"},{\"internalType\":\"contract IHooks\",\"name\":\"hooks\",\"type\":\"address\"}],\"internalType\":\"struct PoolKey\",\"name\":\"key\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"bool\",\"name\":\"zeroForOne\",\"type\":\"bool\"},{\"internalType\":\"int256\",\"name\":\"amountSpecified\",\"type\":\"int256\"},{\"internalType\":\"uint160\",\"name\":\"sqrtPriceLimitX96\",\"type\":\"uint160\"}],\"internalType\":\"struct IPoolManager.SwapParams\",\"name\":\"params\",\"type\":\"tuple\"},{\"internalType\":\"BalanceDelta\",\"name\":\"\",\"type\":\"int256\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"afterSwap\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"},{\"internalType\":\"int128\",\"name\":\"\",\"type\":\"int128\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"accounts\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"}],\"name\":\"balanceOfBatch\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"Currency\",\"name\":\"currency0\",\"type\":\"address\"},{\"internalType\":\"Currency\",\"name\":\"currency1\",\"type\":\"address\"},{\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"},{\"internalType\":\"int24\",\"name\":\"tickSpacing\",\"type\":\"int24\"},{\"internalType\":\"contract IHooks\",\"name\":\"hooks\",\"type\":\"address\"}],\"internalType\":\"struct PoolKey\",\"name\":\"\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"},{\"internalType\":\"int256\",\"name\":\"liquidityDelta\",\"type\":\"int256\"},{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"}],\"internalType\":\"struct IPoolManager.ModifyLiquidityParams\",\"name\":\"\",\"type\":\"tuple\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"beforeAddLiquidity\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"Currency\",\"name\":\"currency0\",\"type\":\"address\"},{\"internalType\":\"Currency\",\"name\":\"currency1\",\"type\":\"address\"},{\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"},{\"internalType\":\"int24\",\"name\":\"tickSpacing\",\"type\":\"int24\"},{\"internalType\":\"contract IHooks\",\"name\":\"hooks\",\"type\":\"address\"}],\"internalType\":\"struct PoolKey\",\"name\":\"\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"beforeDonate\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"Currency\",\"name\":\"currency0\",\"type\":\"address\"},{\"internalType\":\"Currency\",\"name\":\"currency1\",\"type\":\"address\"},{\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"},{\"internalType\":\"int24\",\"name\":\"tickSpacing\",\"type\":\"int24\"},{\"internalType\":\"contract IHooks\",\"name\":\"hooks\",\"type\":\"address\"}],\"internalType\":\"struct PoolKey\",\"name\":\"\",\"type\":\"tuple\"},{\"internalType\":\"uint160\",\"name\":\"\",\"type\":\"uint160\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"beforeInitialize\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"Currency\",\"name\":\"currency0\",\"type\":\"address\"},{\"internalType\":\"Currency\",\"name\":\"currency1\",\"type\":\"address\"},{\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"},{\"internalType\":\"int24\",\"name\":\"tickSpacing\",\"type\":\"int24\"},{\"internalType\":\"contract IHooks\",\"name\":\"hooks\",\"type\":\"address\"}],\"internalType\":\"struct PoolKey\",\"name\":\"\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"},{\"internalType\":\"int256\",\"name\":\"liquidityDelta\",\"type\":\"int256\"},{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"}],\"internalType\":\"struct IPoolManager.ModifyLiquidityParams\",\"name\":\"\",\"type\":\"tuple\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"beforeRemoveLiquidity\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"Currency\",\"name\":\"currency0\",\"type\":\"address\"},{\"internalType\":\"Currency\",\"name\":\"currency1\",\"type\":\"address\"},{\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"},{\"internalType\":\"int24\",\"name\":\"tickSpacing\",\"type\":\"int24\"},{\"internalType\":\"contract IHooks\",\"name\":\"hooks\",\"type\":\"address\"}],\"internalType\":\"struct PoolKey\",\"name\":\"\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"bool\",\"name\":\"zeroForOne\",\"type\":\"bool\"},{\"internalType\":\"int256\",\"name\":\"amountSpecified\",\"type\":\"int256\"},{\"internalType\":\"uint160\",\"name\":\"sqrtPriceLimitX96\",\"type\":\"uint160\"}],\"internalType\":\"struct IPoolManager.SwapParams\",\"name\":\"\",\"type\":\"tuple\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"beforeSwap\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"},{\"internalType\":\"BeforeSwapDelta\",\"name\":\"\",\"type\":\"int256\"},{\"internalType\":\"uint24\",\"name\":\"\",\"type\":\"uint24\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"Currency\",\"name\":\"currency0\",\"type\":\"address\"},{\"internalType\":\"Currency\",\"name\":\"currency1\",\"type\":\"address\"},{\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"},{\"internalType\":\"int24\",\"name\":\"tickSpacing\",\"type\":\"int24\"},{\"internalType\":\"contract IHooks\",\"name\":\"hooks\",\"type\":\"address\"}],\"internalType\":\"struct PoolKey\",\"name\":\"key\",\"type\":\"tuple\"},{\"internalType\":\"int24\",\"name\":\"tickToSellAt\",\"type\":\"int24\"},{\"internalType\":\"bool\",\"name\":\"zeroForOne\",\"type\":\"bool\"}],\"name\":\"cancelOrder\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"positionId\",\"type\":\"uint256\"}],\"name\":\"claimTokensSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"claimsSupply\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"positionId\",\"type\":\"uint256\"}],\"name\":\"claimableOutputTokens\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"outputClaimable\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getHookPermissions\",\"outputs\":[{\"components\":[{\"internalType\":\"bool\",\"name\":\"beforeInitialize\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"afterInitialize\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"beforeAddLiquidity\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"afterAddLiquidity\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"beforeRemoveLiquidity\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"afterRemoveLiquidity\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"beforeSwap\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"afterSwap\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"beforeDonate\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"afterDonate\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"beforeSwapReturnDelta\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"afterSwapReturnDelta\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"afterAddLiquidityReturnDelta\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"afterRemoveLiquidityReturnDelta\",\"type\":\"bool\"}],\"internalType\":\"struct Hooks.Permissions\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"Currency\",\"name\":\"currency0\",\"type\":\"address\"},{\"internalType\":\"Currency\",\"name\":\"currency1\",\"type\":\"address\"},{\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"},{\"internalType\":\"int24\",\"name\":\"tickSpacing\",\"type\":\"int24\"},{\"internalType\":\"contract IHooks\",\"name\":\"hooks\",\"type\":\"address\"}],\"internalType\":\"struct PoolKey\",\"name\":\"key\",\"type\":\"tuple\"},{\"internalType\":\"int24\",\"name\":\"tick\",\"type\":\"int24\"},{\"internalType\":\"bool\",\"name\":\"zeroForOne\",\"type\":\"bool\"}],\"name\":\"getPositionId\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"PoolId\",\"name\":\"poolId\",\"type\":\"bytes32\"}],\"name\":\"lastTicks\",\"outputs\":[{\"internalType\":\"int24\",\"name\":\"lastTick\",\"type\":\"int24\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"PoolId\",\"name\":\"poolId\",\"type\":\"bytes32\"},{\"internalType\":\"int24\",\"name\":\"tickToSellAt\",\"type\":\"int24\"},{\"internalType\":\"bool\",\"name\":\"zeroForOne\",\"type\":\"bool\"}],\"name\":\"pendingOrders\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"inputAmount\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"Currency\",\"name\":\"currency0\",\"type\":\"address\"},{\"internalType\":\"Currency\",\"name\":\"currency1\",\"type\":\"address\"},{\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"},{\"internalType\":\"int24\",\"name\":\"tickSpacing\",\"type\":\"int24\"},{\"internalType\":\"contract IHooks\",\"name\":\"hooks\",\"type\":\"address\"}],\"internalType\":\"struct PoolKey\",\"name\":\"key\",\"type\":\"tuple\"},{\"internalType\":\"int24\",\"name\":\"tickToSellAt\",\"type\":\"int24\"},{\"internalType\":\"bool\",\"name\":\"zeroForOne\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"inputAmount\",\"type\":\"uint256\"}],\"name\":\"placeOrder\",\"outputs\":[{\"internalType\":\"int24\",\"name\":\"\",\"type\":\"int24\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"poolManager\",\"outputs\":[{\"internalType\":\"contract IPoolManager\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"Currency\",\"name\":\"currency0\",\"type\":\"address\"},{\"internalType\":\"Currency\",\"name\":\"currency1\",\"type\":\"address\"},{\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"},{\"internalType\":\"int24\",\"name\":\"tickSpacing\",\"type\":\"int24\"},{\"internalType\":\"contract IHooks\",\"name\":\"hooks\",\"type\":\"address\"}],\"internalType\":\"struct PoolKey\",\"name\":\"key\",\"type\":\"tuple\"},{\"internalType\":\"int24\",\"name\":\"tickToSellAt\",\"type\":\"int24\"},{\"internalType\":\"bool\",\"name\":\"zeroForOne\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"inputAmountToClaimFor\",\"type\":\"uint256\"}],\"name\":\"redeem\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeBatchTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"unlockCallback\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"uri\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"events\":{\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to `approved`.\"},\"TransferBatch(address,address,address,uint256[],uint256[])\":{\"details\":\"Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all transfers.\"},\"TransferSingle(address,address,address,uint256,uint256)\":{\"details\":\"Emitted when `value` amount of tokens of type `id` are transferred from `from` to `to` by `operator`.\"},\"URI(string,uint256)\":{\"details\":\"Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI. If an {URI} event was emitted for `id`, the standard https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value returned by {IERC1155MetadataURI-uri}.\"}},\"kind\":\"dev\",\"methods\":{\"afterAddLiquidity(address,(address,address,uint24,int24,address),(int24,int24,int256,bytes32),int256,int256,bytes)\":{\"params\":{\"delta\":\"The caller's balance delta after adding liquidity; the sum of principal delta, fees accrued, and hook delta\",\"feesAccrued\":\"The fees accrued since the last time fees were collected from this position\",\"hookData\":\"Arbitrary data handed into the PoolManager by the liquidity provider to be passed on to the hook\",\"key\":\"The key for the pool\",\"params\":\"The parameters for adding liquidity\",\"sender\":\"The initial msg.sender for the add liquidity call\"},\"returns\":{\"_0\":\"bytes4 The function selector for the hook\",\"_1\":\"BalanceDelta The hook's delta in token0 and token1. Positive: the hook is owed/took currency, negative: the hook owes/sent currency\"}},\"afterDonate(address,(address,address,uint24,int24,address),uint256,uint256,bytes)\":{\"params\":{\"amount0\":\"The amount of token0 being donated\",\"amount1\":\"The amount of token1 being donated\",\"hookData\":\"Arbitrary data handed into the PoolManager by the donor to be be passed on to the hook\",\"key\":\"The key for the pool\",\"sender\":\"The initial msg.sender for the donate call\"},\"returns\":{\"_0\":\"bytes4 The function selector for the hook\"}},\"afterRemoveLiquidity(address,(address,address,uint24,int24,address),(int24,int24,int256,bytes32),int256,int256,bytes)\":{\"params\":{\"delta\":\"The caller's balance delta after adding liquidity; the sum of principal delta, fees accrued, and hook delta\",\"feesAccrued\":\"The fees accrued since the last time fees were collected from this position\",\"hookData\":\"Arbitrary data handed into the PoolManager by the liquidity provider to be be passed on to the hook\",\"key\":\"The key for the pool\",\"params\":\"The parameters for removing liquidity\",\"sender\":\"The initial msg.sender for the remove liquidity call\"},\"returns\":{\"_0\":\"bytes4 The function selector for the hook\",\"_1\":\"BalanceDelta The hook's delta in token0 and token1. Positive: the hook is owed/took currency, negative: the hook owes/sent currency\"}},\"balanceOf(address,uint256)\":{\"details\":\"See {IERC1155-balanceOf}.\"},\"balanceOfBatch(address[],uint256[])\":{\"details\":\"See {IERC1155-balanceOfBatch}. Requirements: - `accounts` and `ids` must have the same length.\"},\"beforeAddLiquidity(address,(address,address,uint24,int24,address),(int24,int24,int256,bytes32),bytes)\":{\"params\":{\"hookData\":\"Arbitrary data handed into the PoolManager by the liquidity provider to be passed on to the hook\",\"key\":\"The key for the pool\",\"params\":\"The parameters for adding liquidity\",\"sender\":\"The initial msg.sender for the add liquidity call\"},\"returns\":{\"_0\":\"bytes4 The function selector for the hook\"}},\"beforeDonate(address,(address,address,uint24,int24,address),uint256,uint256,bytes)\":{\"params\":{\"amount0\":\"The amount of token0 being donated\",\"amount1\":\"The amount of token1 being donated\",\"hookData\":\"Arbitrary data handed into the PoolManager by the donor to be be passed on to the hook\",\"key\":\"The key for the pool\",\"sender\":\"The initial msg.sender for the donate call\"},\"returns\":{\"_0\":\"bytes4 The function selector for the hook\"}},\"beforeInitialize(address,(address,address,uint24,int24,address),uint160,bytes)\":{\"params\":{\"hookData\":\"Arbitrary data handed into the PoolManager by the initializer to be be passed on to the hook\",\"key\":\"The key for the pool being initialized\",\"sender\":\"The initial msg.sender for the initialize call\",\"sqrtPriceX96\":\"The sqrt(price) of the pool as a Q64.96\"},\"returns\":{\"_0\":\"bytes4 The function selector for the hook\"}},\"beforeRemoveLiquidity(address,(address,address,uint24,int24,address),(int24,int24,int256,bytes32),bytes)\":{\"params\":{\"hookData\":\"Arbitrary data handed into the PoolManager by the liquidity provider to be be passed on to the hook\",\"key\":\"The key for the pool\",\"params\":\"The parameters for removing liquidity\",\"sender\":\"The initial msg.sender for the remove liquidity call\"},\"returns\":{\"_0\":\"bytes4 The function selector for the hook\"}},\"beforeSwap(address,(address,address,uint24,int24,address),(bool,int256,uint160),bytes)\":{\"params\":{\"hookData\":\"Arbitrary data handed into the PoolManager by the swapper to be be passed on to the hook\",\"key\":\"The key for the pool\",\"params\":\"The parameters for the swap\",\"sender\":\"The initial msg.sender for the swap call\"},\"returns\":{\"_0\":\"bytes4 The function selector for the hook\",\"_1\":\"BeforeSwapDelta The hook's delta in specified and unspecified currencies. Positive: the hook is owed/took currency, negative: the hook owes/sent currency\",\"_2\":\"uint24 Optionally override the lp fee, only used if three conditions are met: 1. the Pool has a dynamic fee, 2. the value's 2nd highest bit is set (23rd bit, 0x400000), and 3. the value is less than or equal to the maximum fee (1 million)\"}},\"getHookPermissions()\":{\"details\":\"Used at deployment to validate the address correctly represents the expected permissions\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC1155-isApprovedForAll}.\"},\"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)\":{\"details\":\"See {IERC1155-safeBatchTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,uint256,bytes)\":{\"details\":\"See {IERC1155-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC1155-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"unlockCallback(bytes)\":{\"details\":\"We force the onlyPoolManager modifier by exposing a virtual function after the onlyPoolManager check.\",\"params\":{\"data\":\"The data that was passed to the call to unlock\"},\"returns\":{\"_0\":\"Any data that you want to be returned from the unlock call\"}},\"uri(uint256)\":{\"details\":\"See {IERC1155MetadataURI-uri}. This implementation returns the same URI for *all* token types. It relies on the token type ID substitution mechanism https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the EIP]. Clients calling this function must replace the `\\\\{id\\\\}` substring with the actual token type ID.\"}},\"version\":1},\"userdoc\":{\"errors\":{\"NotPoolManager()\":[{\"notice\":\"Thrown when calling unlockCallback where the caller is not PoolManager\"}]},\"kind\":\"user\",\"methods\":{\"afterAddLiquidity(address,(address,address,uint24,int24,address),(int24,int24,int256,bytes32),int256,int256,bytes)\":{\"notice\":\"The hook called after liquidity is added\"},\"afterDonate(address,(address,address,uint24,int24,address),uint256,uint256,bytes)\":{\"notice\":\"The hook called after donate\"},\"afterRemoveLiquidity(address,(address,address,uint24,int24,address),(int24,int24,int256,bytes32),int256,int256,bytes)\":{\"notice\":\"The hook called after liquidity is removed\"},\"beforeAddLiquidity(address,(address,address,uint24,int24,address),(int24,int24,int256,bytes32),bytes)\":{\"notice\":\"The hook called before liquidity is added\"},\"beforeDonate(address,(address,address,uint24,int24,address),uint256,uint256,bytes)\":{\"notice\":\"The hook called before donate\"},\"beforeInitialize(address,(address,address,uint24,int24,address),uint160,bytes)\":{\"notice\":\"The hook called before the state of a pool is initialized\"},\"beforeRemoveLiquidity(address,(address,address,uint24,int24,address),(int24,int24,int256,bytes32),bytes)\":{\"notice\":\"The hook called before liquidity is removed\"},\"beforeSwap(address,(address,address,uint24,int24,address),(bool,int256,uint160),bytes)\":{\"notice\":\"The hook called before a swap\"},\"getHookPermissions()\":{\"notice\":\"Returns a struct of permissions to signal which hook functions are to be implemented\"},\"poolManager()\":{\"notice\":\"The Uniswap v4 PoolManager contract\"},\"unlockCallback(bytes)\":{\"notice\":\"Called by the pool manager on `msg.sender` when the manager is unlocked\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/TakeProfitsHook.sol\":\"TakeProfitsHook\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":800},\"remappings\":[\":@ensdomains/=lib/v4-periphery/lib/v4-core/node_modules/@ensdomains/\",\":@openzeppelin/=lib/v4-periphery/lib/v4-core/lib/openzeppelin-contracts/\",\":@openzeppelin/contracts/=lib/v4-periphery/lib/v4-core/lib/openzeppelin-contracts/contracts/\",\":@uniswap/v4-core/=lib/v4-periphery/lib/v4-core/\",\":ds-test/=lib/v4-periphery/lib/v4-core/lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/v4-periphery/lib/v4-core/lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-gas-snapshot/=lib/v4-periphery/lib/v4-core/lib/forge-gas-snapshot/src/\",\":forge-std/=lib/forge-std/src/\",\":hardhat/=lib/v4-periphery/lib/v4-core/node_modules/hardhat/\",\":openzeppelin-contracts/=lib/v4-periphery/lib/v4-core/lib/openzeppelin-contracts/\",\":permit2/=lib/v4-periphery/lib/permit2/\",\":solmate/=lib/v4-periphery/lib/v4-core/lib/solmate/\",\":v4-core/=lib/v4-periphery/lib/v4-core/src/\",\":v4-periphery/=lib/v4-periphery/\"]},\"sources\":{\"lib/v4-periphery/lib/v4-core/lib/openzeppelin-contracts/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]},\"lib/v4-periphery/lib/v4-core/lib/openzeppelin-contracts/contracts/token/ERC1155/ERC1155.sol\":{\"keccak256\":\"0xd9b0b8ee1ac6dfee14eb1ad4383a4739dbaa0f2036594bb3a16f0408085dadde\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6309805132e519162d1134c67df22dd963323a9208b4f41344a4c13ed63c1026\",\"dweb:/ipfs/QmTBPHnf6qbtAD4NVnKVFmubUHRqMDPLkseR6apxTUpsQo\"]},\"lib/v4-periphery/lib/v4-core/lib/openzeppelin-contracts/contracts/token/ERC1155/IERC1155.sol\":{\"keccak256\":\"0x6caffc9cfdc623eca9f87a686071708af5d5c17454d65022843fdddbc53c0cce\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ecf8c7ed1f8ff443c181f64496ae380ee02e61dcd2ed120e1e997837a926f182\",\"dweb:/ipfs/QmWASYTrZPF2MrcpC3EBmxx6RgtZ5Fr4jwrsmB7ZF7qhDC\"]},\"lib/v4-periphery/lib/v4-core/lib/openzeppelin-contracts/contracts/token/ERC1155/IERC1155Receiver.sol\":{\"keccak256\":\"0xb69597a63b202e28401128bed6a6d259e8730191274471af7303eafb247881a3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://25addbda49a578b3318130585601344c5149a5549d749adf88e9685349a46b23\",\"dweb:/ipfs/Qme2DuD8gpsve1ZvaSMQpBwMdpU7yAtekDwr7gUp8dX4zX\"]},\"lib/v4-periphery/lib/v4-core/lib/openzeppelin-contracts/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol\":{\"keccak256\":\"0xe92b5e199b963d108ad6e06feeede151ba23849e0d064956535489ff967ffe68\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://280e17738a67b06dae02fec32982bd48a8ab71d8df95e9975ae03532634bc522\",\"dweb:/ipfs/QmecjsNcFgy2mMjuNfRDkLpAYMRWnh5o73fw1Bj2rCso2z\"]},\"lib/v4-periphery/lib/v4-core/lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"lib/v4-periphery/lib/v4-core/lib/openzeppelin-contracts/contracts/utils/Arrays.sol\":{\"keccak256\":\"0x8806d620b6571932b662cfd48fbd518d4f70df1f88a23b5724cacde64a77bda1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8043304c8f9e1c1dc4a41935efa067daa77ad7abbae1fda41f015d53fbf327a5\",\"dweb:/ipfs/QmTrF2hSkRZoN9EEu8zdEhBpGNZ7RxzCdXf9ydzc2HQ3tM\"]},\"lib/v4-periphery/lib/v4-core/lib/openzeppelin-contracts/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"lib/v4-periphery/lib/v4-core/lib/openzeppelin-contracts/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0x32ba59b4b7299237c8ba56319110989d7978a039faf754793064e967e5894418\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1ae50c8b562427df610cc4540c9bf104acca7ef8e2dcae567ae7e52272281e9c\",\"dweb:/ipfs/QmTHiadFCSJUPpRjNegc5SahmeU8bAoY8i9Aq6tVscbcKR\"]},\"lib/v4-periphery/lib/v4-core/lib/openzeppelin-contracts/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x9e8778b14317ba9e256c30a76fd6c32b960af621987f56069e1e819c77c6a133\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1777404f1dcd0fac188e55a288724ec3c67b45288e49cc64723e95e702b49ab8\",\"dweb:/ipfs/QmZFdC626GButBApwDUvvTnUzdinevC3B24d7yyh57XkiA\"]},\"lib/v4-periphery/lib/v4-core/lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]},\"lib/v4-periphery/lib/v4-core/lib/openzeppelin-contracts/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]},\"lib/v4-periphery/lib/v4-core/lib/solmate/src/utils/FixedPointMathLib.sol\":{\"keccak256\":\"0x1b62af9baf5b8e991ed7531bc87f45550ba9d61e8dbff5caf237ccaf3a3fd843\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://b7b38b977c5305b18ceefbeed4c9ceaaaefa419b520de62de6604ea661f8c0a9\",\"dweb:/ipfs/QmecMRzgfMyDVa2pvBqMMDLYBappaj7Aa3qcMoQYEQrhWi\"]},\"lib/v4-periphery/lib/v4-core/src/interfaces/IExtsload.sol\":{\"keccak256\":\"0x80b53ca4907d6f0088c3b931f2b72cad1dc4615a95094d96bd0fb8dff8d5ba43\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://375c69148622aab7a3537d5fd37d373a8e9731022c8d87bdaee46233b0a99fe1\",\"dweb:/ipfs/QmXFjdoYRxsA5B1kyuxEXgNf3FBoL1zPvy26Qy8EtpdFRN\"]},\"lib/v4-periphery/lib/v4-core/src/interfaces/IExttload.sol\":{\"keccak256\":\"0xc6b68283ebd8d1c789df536756726eed51c589134bb20821b236a0d22a135937\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://294394f72dfc219689209f4130d85601dfd0d63c8d47578050d312db70f9b6c8\",\"dweb:/ipfs/QmTDMQ3oxCGHgEBU48a3Lp4S1rRjc8vVCxkhE5ZNej1bsY\"]},\"lib/v4-periphery/lib/v4-core/src/interfaces/IHooks.sol\":{\"keccak256\":\"0x2ed03c5c22b1b81490788f54599beb3b26b834e608f6351166f60069f5655671\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://aabb296e1109ccc792e444c63d96c04f75f74275fbd917083b65aa18cc9eb662\",\"dweb:/ipfs/QmWjVWjC831FM6W9yk7ys8vmMesmHb3XrskvTzkFM8q7pK\"]},\"lib/v4-periphery/lib/v4-core/src/interfaces/IPoolManager.sol\":{\"keccak256\":\"0x859e8c7794fc04a72e53d4e9d2b89ae5517f71409a667fc2f4db054c9d121168\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://690097a7065d05ba5641b4a12c91a561c566209313307b5d74d989bcc00c3221\",\"dweb:/ipfs/QmbxiRHURJhcUMJ5NfZg3V1BgVowPQQ263UH43De4DvEBj\"]},\"lib/v4-periphery/lib/v4-core/src/interfaces/IProtocolFeeController.sol\":{\"keccak256\":\"0xc2d7f3605da9767e36cf25d4d4fa9b95663a6659e26ce28cf29b8b88acb79a4c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c7a43cda35b8a9254ed3e46cfd8649361f09121d17ef554bd3d190b9a8d57cc6\",\"dweb:/ipfs/QmRBDQoqCWddH5hY1JdxMyYtY8jMZhWAwtuFJBc3r8V31G\"]},\"lib/v4-periphery/lib/v4-core/src/interfaces/IProtocolFees.sol\":{\"keccak256\":\"0x6274aeb7a4f03734502f3b1b5494f7738d3f3adfa3a15aebf383ce1d2698e971\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ed366e17dc42f9b230b8b7bb27e2c304ea71b7edb11b5738f75a1090f34648f4\",\"dweb:/ipfs/QmVqZbCQ46B5huP8LsDcxbquqCdd74uvhe3F47KqRLAGeq\"]},\"lib/v4-periphery/lib/v4-core/src/interfaces/callback/IUnlockCallback.sol\":{\"keccak256\":\"0x58c82f2bd9d7c097ed09bd0991fedc403b0ec270eb3d0158bfb095c06a03d719\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://91168ca26a10980df2cdc3fbfe8ddf372c002b7ef19e3c59a0c9870d64198f1b\",\"dweb:/ipfs/QmUSpaM825vd1SwvF38esgbdLgYiPwefKaFERTWvUi6uSK\"]},\"lib/v4-periphery/lib/v4-core/src/interfaces/external/IERC20Minimal.sol\":{\"keccak256\":\"0xc1c23330c1511ecfd45c67a683962b4e2555b82f1dacd40cc8b46ae5a6e250e7\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://5ce10b7970482a65f9e9a365b810eeb154a5d4a8229a26653028d84b9622a410\",\"dweb:/ipfs/QmTSwXxZ2FTkM5duBZgbpFs8SRVDR5NPAnW4YimeDhb1s8\"]},\"lib/v4-periphery/lib/v4-core/src/interfaces/external/IERC6909Claims.sol\":{\"keccak256\":\"0xa586f345739e52b0488a0fe40b6e375cce67fdd25758408b0efcb5133ad96a48\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e8c557b7e52abdbbd82e415a1acc27921446a7fd090b7d4877e52be72619547f\",\"dweb:/ipfs/QmXE2KNPbXmGX8BQF3ei6zhzRTnhoTQg39XmqMnkhbr6QK\"]},\"lib/v4-periphery/lib/v4-core/src/libraries/BitMath.sol\":{\"keccak256\":\"0x148c274b48f5f4becfe0d8aee257fe8b5d87a902b5bcfb6b3e64b4d5a574aa50\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://b5db898b4aa8805cb599c51c5d218ba5bec476673c3851131c3b4f73565e8c8b\",\"dweb:/ipfs/QmdLGs2xPSRTCs76o1aMsBVZDwG8wTEmKGeRvghk7k2TZ2\"]},\"lib/v4-periphery/lib/v4-core/src/libraries/CustomRevert.sol\":{\"keccak256\":\"0x745ca9c258d00fae52f293af065471f1bc1099de1bea4ceb52e312240ac52895\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://71eee0aa4e395f2c7fce16760d6547c6a12a6fd3dc56b94f4d44480fed538495\",\"dweb:/ipfs/QmPfJBiHzeVe9sx3PZ27jWrzJqF9atvevpYBC9j3Ekz9TG\"]},\"lib/v4-periphery/lib/v4-core/src/libraries/FixedPoint128.sol\":{\"keccak256\":\"0xc7e80dc41f28887d0d915a75c0b2783ae659e5384dd1a3ed1251a42e058d8835\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://2df62bf1d9d4349236fd0bc7a96b3a3be95f4c049603e4a20c8473cca9402b4d\",\"dweb:/ipfs/QmVR5dmMkoypmhaBeBj8cGegHpJycbofUDg59dHm42i9MT\"]},\"lib/v4-periphery/lib/v4-core/src/libraries/FullMath.sol\":{\"keccak256\":\"0x4fc73a00817193fd3cac1cc03d8167d21af97d75f1815a070ee31a90c702b4c2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c3b2d66d36b1ad56b1ab6e2eb8a816740877b40b461c93f125e88621c8378e52\",\"dweb:/ipfs/QmPGvMZzKQvNiWKd8aRzzdW7oAizwrMgcMtnaworDkVHFC\"]},\"lib/v4-periphery/lib/v4-core/src/libraries/Hooks.sol\":{\"keccak256\":\"0x33b963d98de5eadd5b42a4d323ce5d25d87432d8ed538096ecca8d0b77e0d088\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ef49b43fe2fa6a2c6e44a1f8d7712ce4e13c7656da5ec35e73eb644707e5ed1\",\"dweb:/ipfs/QmZCisxCf9a1zxZvZADk1EN8JyFXZ1XZ4B8s1PpwEMugJX\"]},\"lib/v4-periphery/lib/v4-core/src/libraries/LPFeeLibrary.sol\":{\"keccak256\":\"0x9cb794c60d4c867732b20a6cd14b965bf3a63df1161eb3cd28e2c9d0447db46f\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://3d987ee5738f74c3fb091db503b44ad6651e4e47554623182e0ecbe696bd7382\",\"dweb:/ipfs/QmW7Rt5qjD4mmRnvYcT2Fj7VPzBm1eT9w15WUHtfWmKEPh\"]},\"lib/v4-periphery/lib/v4-core/src/libraries/LiquidityMath.sol\":{\"keccak256\":\"0x4a04b9383e2fb943c2c3ae7d0c9071b58dd97b6dac0a409fe1c79c3ca897bbcf\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://0b33cf0ff936f62aa7f3b82922fa0ac52ac24471561e87fbf7ab8372607f6dfc\",\"dweb:/ipfs/Qmcr6omwzJjQPu6HQ8E9vFXaTgrtqfb2KbfxbuQavfUzFa\"]},\"lib/v4-periphery/lib/v4-core/src/libraries/ParseBytes.sol\":{\"keccak256\":\"0xf0795198d1e651b0b33fd1708d80a14f501bb2a1486905676d35f364e880f579\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://5aea527fcec51d7274f0c189dc2479a6aa708fc91857187a4d7db46bb1d6c7a8\",\"dweb:/ipfs/QmUTrwTPSZ7EHBaTyfAA78rZVP17iQzmAmvDcQ8GhDRAEf\"]},\"lib/v4-periphery/lib/v4-core/src/libraries/Position.sol\":{\"keccak256\":\"0xddab2a831f1befb6abf5567e77c4582169ca8156cf69eb4f22d8e87f7226a3f9\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://c79fe61b50f3b70cff503abfa6f5643fcbefb9b794855bee1019b1e6d9c083b2\",\"dweb:/ipfs/QmbKmYNQesaMz8bo1b7TMHQcAwaDd3eDPrE5pAdPPZTtk5\"]},\"lib/v4-periphery/lib/v4-core/src/libraries/SafeCast.sol\":{\"keccak256\":\"0x8060d21c4d54a431113f9a594b860e6a9bf1f346d0c7c02dfafe9847dd8a0591\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://e7f71b73d82965d1d949f388060f6f0daab7cd14718e260682918ec6fa0253b9\",\"dweb:/ipfs/QmP85jtFrCeV6Y8zuJfrrgiMy1shX3tHWs2wX7DMAB7Lft\"]},\"lib/v4-periphery/lib/v4-core/src/libraries/StateLibrary.sol\":{\"keccak256\":\"0x4bbb1e816dd67fd4e958518ef50d216fcdab19912ab98c28d4c5279890c48c2c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://eab2611adf69904cb0f326dbd82cdd6d1a09630dacace7f741e29c76836e41e8\",\"dweb:/ipfs/QmcCR78dZ8C7pF3DSDoWyYobX7aXkBNxbCmgenkqpgRrbT\"]},\"lib/v4-periphery/lib/v4-core/src/libraries/TickMath.sol\":{\"keccak256\":\"0x39b33c48e9632a6b330027121cffef80916ce11b729b8296b640e22dd1cd1c2f\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://62264b1fa20aa6f87a4f722d33a9e84d0c8f5a34f904e5a25ba007512202f4dd\",\"dweb:/ipfs/QmYsF6j9caz4V6GqGoBmfVDS3EioexZQQ8p6xfDZbk3owM\"]},\"lib/v4-periphery/lib/v4-core/src/types/BalanceDelta.sol\":{\"keccak256\":\"0xa719c8fe51e0a9524280178f19f6851bcc3b3b60e73618f3d60905d35ae5569f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7436928dc9de35c6c7c5c636cb51adaf295cfd590da83b19a004ae33cbec9ef9\",\"dweb:/ipfs/QmRJ9yZkUpzk4433GX3LgVVL8jwpbSYSUwXcucKisf3v4H\"]},\"lib/v4-periphery/lib/v4-core/src/types/BeforeSwapDelta.sol\":{\"keccak256\":\"0x2a774312d91285313d569da1a718c909655da5432310417692097a1d4dc83a78\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a2c7a0379955cff9c17ab9e61f95e42909aa5947c22740f86ce940d09856f782\",\"dweb:/ipfs/QmaAuo8UBYXsGrVuKh8iRoAAdqwtg1jDq515cW1ZRP5m9K\"]},\"lib/v4-periphery/lib/v4-core/src/types/Currency.sol\":{\"keccak256\":\"0x35c74eae038ecfbbae48b0e13f2b9a43ac6d8da4847ffa0f1482e4e2d455ee74\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cadb54f9c89b6970583148e503a23c7b654aff1f3e6a0da57705c54e5b03b39f\",\"dweb:/ipfs/Qma3CKKwyzGwzHN4Z9HDJ4Q7J5VfbN594i8F2DTGWTMWcB\"]},\"lib/v4-periphery/lib/v4-core/src/types/PoolId.sol\":{\"keccak256\":\"0x308311916ea0f5c2fd878b6a2751eb223d170a69e33f601fae56dfe3c5d392af\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://669c2cd7ac17690b5d8831e0bda72822376c3a04b36afed6d31df4d75fe60918\",\"dweb:/ipfs/QmT6EpkxqU8VF3WsgrZ66F3s1cCQRffR95z1HDYZz7ph6y\"]},\"lib/v4-periphery/lib/v4-core/src/types/PoolKey.sol\":{\"keccak256\":\"0xf89856e0580d7a4856d3187a76858377ccee9d59702d230c338d84388221b786\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6f3118fa189025695c37fdf0bdd1190f085ad097484d3c88cf4c56d1db65f639\",\"dweb:/ipfs/QmamXpgtB8GV1CaFLvqefPWSoikLDhMk1yU4heBnVzU8gi\"]},\"lib/v4-periphery/src/base/ImmutableState.sol\":{\"keccak256\":\"0x12b175e4ed6d31da545e3b6c9930901568c99d153b1e51044d32e88f42b9b633\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://f4347899e0b3bfd66e8d79652b1a14a62a02d16bfece63a40c6efe0e5656c384\",\"dweb:/ipfs/QmSbbT8fefHstA72BqF7SDooDtmhs79dR8T6pWv8LxKU2L\"]},\"lib/v4-periphery/src/base/SafeCallback.sol\":{\"keccak256\":\"0x6284bd1d1fbe78a901e63dc70720e2bf19de6758347b050f8ba2b155e73325c5\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://3afb423a3c0f8b5f6436680ff3cde9247924d442a9720dc39b2b07a352607187\",\"dweb:/ipfs/QmaT5bMwiiqkp8KWUnHjWJz55Ah9vbpASzJagg9riHbpTf\"]},\"lib/v4-periphery/src/base/hooks/BaseHook.sol\":{\"keccak256\":\"0xe6522a26dfe7b86aea6a84670b502890ede1e96302d641f231906897b2172f2f\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://19d2d2678ca32e81af3419bc4640833fc40e155b6757bb87edb0182f181c7fe7\",\"dweb:/ipfs/QmPGpN6p78SrRW79hX16sM572uD4Fb2hJF6Bv58M9LYNpQ\"]},\"src/TakeProfitsHook.sol\":{\"keccak256\":\"0x0ec4f10375b38548281c3db405daff3b7ce8bf294d7a6cc839080bf0edeb2093\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://0c466234679450c1d9dadfd1492232a4b836be52223092dd295fb9b4f6e67d25\",\"dweb:/ipfs/QmPoudLMp8JoSJGXKymeTz4rYHqEm3ystHSriKgcqitCXo\"]}},\"version\":1}",
    "metadata": {
        "compiler": {
            "version": "0.8.26+commit.8a97fa7a"
        },
        "language": "Solidity",
        "output": {
            "abi": [
                {
                    "inputs": [
                        {
                            "internalType": "contract IPoolManager",
                            "name": "_manager",
                            "type": "address"
                        },
                        {
                            "internalType": "string",
                            "name": "_uri",
                            "type": "string"
                        }
                    ],
                    "stateMutability": "nonpayable",
                    "type": "constructor"
                },
                {
                    "inputs": [
                        {
                            "internalType": "address",
                            "name": "sender",
                            "type": "address"
                        },
                        {
                            "internalType": "uint256",
                            "name": "balance",
                            "type": "uint256"
                        },
                        {
                            "internalType": "uint256",
                            "name": "needed",
                            "type": "uint256"
                        },
                        {
                            "internalType": "uint256",
                            "name": "tokenId",
                            "type": "uint256"
                        }
                    ],
                    "type": "error",
                    "name": "ERC1155InsufficientBalance"
                },
                {
                    "inputs": [
                        {
                            "internalType": "address",
                            "name": "approver",
                            "type": "address"
                        }
                    ],
                    "type": "error",
                    "name": "ERC1155InvalidApprover"
                },
                {
                    "inputs": [
                        {
                            "internalType": "uint256",
                            "name": "idsLength",
                            "type": "uint256"
                        },
                        {
                            "internalType": "uint256",
                            "name": "valuesLength",
                            "type": "uint256"
                        }
                    ],
                    "type": "error",
                    "name": "ERC1155InvalidArrayLength"
                },
                {
                    "inputs": [
                        {
                            "internalType": "address",
                            "name": "operator",
                            "type": "address"
                        }
                    ],
                    "type": "error",
                    "name": "ERC1155InvalidOperator"
                },
                {
                    "inputs": [
                        {
                            "internalType": "address",
                            "name": "receiver",
                            "type": "address"
                        }
                    ],
                    "type": "error",
                    "name": "ERC1155InvalidReceiver"
                },
                {
                    "inputs": [
                        {
                            "internalType": "address",
                            "name": "sender",
                            "type": "address"
                        }
                    ],
                    "type": "error",
                    "name": "ERC1155InvalidSender"
                },
                {
                    "inputs": [
                        {
                            "internalType": "address",
                            "name": "operator",
                            "type": "address"
                        },
                        {
                            "internalType": "address",
                            "name": "owner",
                            "type": "address"
                        }
                    ],
                    "type": "error",
                    "name": "ERC1155MissingApprovalForAll"
                },
                {
                    "inputs": [],
                    "type": "error",
                    "name": "HookNotImplemented"
                },
                {
                    "inputs": [],
                    "type": "error",
                    "name": "InvalidOrder"
                },
                {
                    "inputs": [],
                    "type": "error",
                    "name": "InvalidPool"
                },
                {
                    "inputs": [],
                    "type": "error",
                    "name": "LockFailure"
                },
                {
                    "inputs": [],
                    "type": "error",
                    "name": "NotEnoughToClaim"
                },
                {
                    "inputs": [],
                    "type": "error",
                    "name": "NotPoolManager"
                },
                {
                    "inputs": [],
                    "type": "error",
                    "name": "NotSelf"
                },
                {
                    "inputs": [],
                    "type": "error",
                    "name": "NothingToClaim"
                },
                {
                    "inputs": [
                        {
                            "internalType": "address",
                            "name": "account",
                            "type": "address",
                            "indexed": true
                        },
                        {
                            "internalType": "address",
                            "name": "operator",
                            "type": "address",
                            "indexed": true
                        },
                        {
                            "internalType": "bool",
                            "name": "approved",
                            "type": "bool",
                            "indexed": false
                        }
                    ],
                    "type": "event",
                    "name": "ApprovalForAll",
                    "anonymous": false
                },
                {
                    "inputs": [
                        {
                            "internalType": "address",
                            "name": "operator",
                            "type": "address",
                            "indexed": true
                        },
                        {
                            "internalType": "address",
                            "name": "from",
                            "type": "address",
                            "indexed": true
                        },
                        {
                            "internalType": "address",
                            "name": "to",
                            "type": "address",
                            "indexed": true
                        },
                        {
                            "internalType": "uint256[]",
                            "name": "ids",
                            "type": "uint256[]",
                            "indexed": false
                        },
                        {
                            "internalType": "uint256[]",
                            "name": "values",
                            "type": "uint256[]",
                            "indexed": false
                        }
                    ],
                    "type": "event",
                    "name": "TransferBatch",
                    "anonymous": false
                },
                {
                    "inputs": [
                        {
                            "internalType": "address",
                            "name": "operator",
                            "type": "address",
                            "indexed": true
                        },
                        {
                            "internalType": "address",
                            "name": "from",
                            "type": "address",
                            "indexed": true
                        },
                        {
                            "internalType": "address",
                            "name": "to",
                            "type": "address",
                            "indexed": true
                        },
                        {
                            "internalType": "uint256",
                            "name": "id",
                            "type": "uint256",
                            "indexed": false
                        },
                        {
                            "internalType": "uint256",
                            "name": "value",
                            "type": "uint256",
                            "indexed": false
                        }
                    ],
                    "type": "event",
                    "name": "TransferSingle",
                    "anonymous": false
                },
                {
                    "inputs": [
                        {
                            "internalType": "string",
                            "name": "value",
                            "type": "string",
                            "indexed": false
                        },
                        {
                            "internalType": "uint256",
                            "name": "id",
                            "type": "uint256",
                            "indexed": true
                        }
                    ],
                    "type": "event",
                    "name": "URI",
                    "anonymous": false
                },
                {
                    "inputs": [
                        {
                            "internalType": "address",
                            "name": "",
                            "type": "address"
                        },
                        {
                            "internalType": "struct PoolKey",
                            "name": "",
                            "type": "tuple",
                            "components": [
                                {
                                    "internalType": "Currency",
                                    "name": "currency0",
                                    "type": "address"
                                },
                                {
                                    "internalType": "Currency",
                                    "name": "currency1",
                                    "type": "address"
                                },
                                {
                                    "internalType": "uint24",
                                    "name": "fee",
                                    "type": "uint24"
                                },
                                {
                                    "internalType": "int24",
                                    "name": "tickSpacing",
                                    "type": "int24"
                                },
                                {
                                    "internalType": "contract IHooks",
                                    "name": "hooks",
                                    "type": "address"
                                }
                            ]
                        },
                        {
                            "internalType": "struct IPoolManager.ModifyLiquidityParams",
                            "name": "",
                            "type": "tuple",
                            "components": [
                                {
                                    "internalType": "int24",
                                    "name": "tickLower",
                                    "type": "int24"
                                },
                                {
                                    "internalType": "int24",
                                    "name": "tickUpper",
                                    "type": "int24"
                                },
                                {
                                    "internalType": "int256",
                                    "name": "liquidityDelta",
                                    "type": "int256"
                                },
                                {
                                    "internalType": "bytes32",
                                    "name": "salt",
                                    "type": "bytes32"
                                }
                            ]
                        },
                        {
                            "internalType": "BalanceDelta",
                            "name": "",
                            "type": "int256"
                        },
                        {
                            "internalType": "BalanceDelta",
                            "name": "",
                            "type": "int256"
                        },
                        {
                            "internalType": "bytes",
                            "name": "",
                            "type": "bytes"
                        }
                    ],
                    "stateMutability": "nonpayable",
                    "type": "function",
                    "name": "afterAddLiquidity",
                    "outputs": [
                        {
                            "internalType": "bytes4",
                            "name": "",
                            "type": "bytes4"
                        },
                        {
                            "internalType": "BalanceDelta",
                            "name": "",
                            "type": "int256"
                        }
                    ]
                },
                {
                    "inputs": [
                        {
                            "internalType": "address",
                            "name": "",
                            "type": "address"
                        },
                        {
                            "internalType": "struct PoolKey",
                            "name": "",
                            "type": "tuple",
                            "components": [
                                {
                                    "internalType": "Currency",
                                    "name": "currency0",
                                    "type": "address"
                                },
                                {
                                    "internalType": "Currency",
                                    "name": "currency1",
                                    "type": "address"
                                },
                                {
                                    "internalType": "uint24",
                                    "name": "fee",
                                    "type": "uint24"
                                },
                                {
                                    "internalType": "int24",
                                    "name": "tickSpacing",
                                    "type": "int24"
                                },
                                {
                                    "internalType": "contract IHooks",
                                    "name": "hooks",
                                    "type": "address"
                                }
                            ]
                        },
                        {
                            "internalType": "uint256",
                            "name": "",
                            "type": "uint256"
                        },
                        {
                            "internalType": "uint256",
                            "name": "",
                            "type": "uint256"
                        },
                        {
                            "internalType": "bytes",
                            "name": "",
                            "type": "bytes"
                        }
                    ],
                    "stateMutability": "nonpayable",
                    "type": "function",
                    "name": "afterDonate",
                    "outputs": [
                        {
                            "internalType": "bytes4",
                            "name": "",
                            "type": "bytes4"
                        }
                    ]
                },
                {
                    "inputs": [
                        {
                            "internalType": "address",
                            "name": "",
                            "type": "address"
                        },
                        {
                            "internalType": "struct PoolKey",
                            "name": "key",
                            "type": "tuple",
                            "components": [
                                {
                                    "internalType": "Currency",
                                    "name": "currency0",
                                    "type": "address"
                                },
                                {
                                    "internalType": "Currency",
                                    "name": "currency1",
                                    "type": "address"
                                },
                                {
                                    "internalType": "uint24",
                                    "name": "fee",
                                    "type": "uint24"
                                },
                                {
                                    "internalType": "int24",
                                    "name": "tickSpacing",
                                    "type": "int24"
                                },
                                {
                                    "internalType": "contract IHooks",
                                    "name": "hooks",
                                    "type": "address"
                                }
                            ]
                        },
                        {
                            "internalType": "uint160",
                            "name": "",
                            "type": "uint160"
                        },
                        {
                            "internalType": "int24",
                            "name": "tick",
                            "type": "int24"
                        },
                        {
                            "internalType": "bytes",
                            "name": "",
                            "type": "bytes"
                        }
                    ],
                    "stateMutability": "nonpayable",
                    "type": "function",
                    "name": "afterInitialize",
                    "outputs": [
                        {
                            "internalType": "bytes4",
                            "name": "",
                            "type": "bytes4"
                        }
                    ]
                },
                {
                    "inputs": [
                        {
                            "internalType": "address",
                            "name": "",
                            "type": "address"
                        },
                        {
                            "internalType": "struct PoolKey",
                            "name": "",
                            "type": "tuple",
                            "components": [
                                {
                                    "internalType": "Currency",
                                    "name": "currency0",
                                    "type": "address"
                                },
                                {
                                    "internalType": "Currency",
                                    "name": "currency1",
                                    "type": "address"
                                },
                                {
                                    "internalType": "uint24",
                                    "name": "fee",
                                    "type": "uint24"
                                },
                                {
                                    "internalType": "int24",
                                    "name": "tickSpacing",
                                    "type": "int24"
                                },
                                {
                                    "internalType": "contract IHooks",
                                    "name": "hooks",
                                    "type": "address"
                                }
                            ]
                        },
                        {
                            "internalType": "struct IPoolManager.ModifyLiquidityParams",
                            "name": "",
                            "type": "tuple",
                            "components": [
                                {
                                    "internalType": "int24",
                                    "name": "tickLower",
                                    "type": "int24"
                                },
                                {
                                    "internalType": "int24",
                                    "name": "tickUpper",
                                    "type": "int24"
                                },
                                {
                                    "internalType": "int256",
                                    "name": "liquidityDelta",
                                    "type": "int256"
                                },
                                {
                                    "internalType": "bytes32",
                                    "name": "salt",
                                    "type": "bytes32"
                                }
                            ]
                        },
                        {
                            "internalType": "BalanceDelta",
                            "name": "",
                            "type": "int256"
                        },
                        {
                            "internalType": "BalanceDelta",
                            "name": "",
                            "type": "int256"
                        },
                        {
                            "internalType": "bytes",
                            "name": "",
                            "type": "bytes"
                        }
                    ],
                    "stateMutability": "nonpayable",
                    "type": "function",
                    "name": "afterRemoveLiquidity",
                    "outputs": [
                        {
                            "internalType": "bytes4",
                            "name": "",
                            "type": "bytes4"
                        },
                        {
                            "internalType": "BalanceDelta",
                            "name": "",
                            "type": "int256"
                        }
                    ]
                },
                {
                    "inputs": [
                        {
                            "internalType": "address",
                            "name": "sender",
                            "type": "address"
                        },
                        {
                            "internalType": "struct PoolKey",
                            "name": "key",
                            "type": "tuple",
                            "components": [
                                {
                                    "internalType": "Currency",
                                    "name": "currency0",
                                    "type": "address"
                                },
                                {
                                    "internalType": "Currency",
                                    "name": "currency1",
                                    "type": "address"
                                },
                                {
                                    "internalType": "uint24",
                                    "name": "fee",
                                    "type": "uint24"
                                },
                                {
                                    "internalType": "int24",
                                    "name": "tickSpacing",
                                    "type": "int24"
                                },
                                {
                                    "internalType": "contract IHooks",
                                    "name": "hooks",
                                    "type": "address"
                                }
                            ]
                        },
                        {
                            "internalType": "struct IPoolManager.SwapParams",
                            "name": "params",
                            "type": "tuple",
                            "components": [
                                {
                                    "internalType": "bool",
                                    "name": "zeroForOne",
                                    "type": "bool"
                                },
                                {
                                    "internalType": "int256",
                                    "name": "amountSpecified",
                                    "type": "int256"
                                },
                                {
                                    "internalType": "uint160",
                                    "name": "sqrtPriceLimitX96",
                                    "type": "uint160"
                                }
                            ]
                        },
                        {
                            "internalType": "BalanceDelta",
                            "name": "",
                            "type": "int256"
                        },
                        {
                            "internalType": "bytes",
                            "name": "",
                            "type": "bytes"
                        }
                    ],
                    "stateMutability": "nonpayable",
                    "type": "function",
                    "name": "afterSwap",
                    "outputs": [
                        {
                            "internalType": "bytes4",
                            "name": "",
                            "type": "bytes4"
                        },
                        {
                            "internalType": "int128",
                            "name": "",
                            "type": "int128"
                        }
                    ]
                },
                {
                    "inputs": [
                        {
                            "internalType": "address",
                            "name": "account",
                            "type": "address"
                        },
                        {
                            "internalType": "uint256",
                            "name": "id",
                            "type": "uint256"
                        }
                    ],
                    "stateMutability": "view",
                    "type": "function",
                    "name": "balanceOf",
                    "outputs": [
                        {
                            "internalType": "uint256",
                            "name": "",
                            "type": "uint256"
                        }
                    ]
                },
                {
                    "inputs": [
                        {
                            "internalType": "address[]",
                            "name": "accounts",
                            "type": "address[]"
                        },
                        {
                            "internalType": "uint256[]",
                            "name": "ids",
                            "type": "uint256[]"
                        }
                    ],
                    "stateMutability": "view",
                    "type": "function",
                    "name": "balanceOfBatch",
                    "outputs": [
                        {
                            "internalType": "uint256[]",
                            "name": "",
                            "type": "uint256[]"
                        }
                    ]
                },
                {
                    "inputs": [
                        {
                            "internalType": "address",
                            "name": "",
                            "type": "address"
                        },
                        {
                            "internalType": "struct PoolKey",
                            "name": "",
                            "type": "tuple",
                            "components": [
                                {
                                    "internalType": "Currency",
                                    "name": "currency0",
                                    "type": "address"
                                },
                                {
                                    "internalType": "Currency",
                                    "name": "currency1",
                                    "type": "address"
                                },
                                {
                                    "internalType": "uint24",
                                    "name": "fee",
                                    "type": "uint24"
                                },
                                {
                                    "internalType": "int24",
                                    "name": "tickSpacing",
                                    "type": "int24"
                                },
                                {
                                    "internalType": "contract IHooks",
                                    "name": "hooks",
                                    "type": "address"
                                }
                            ]
                        },
                        {
                            "internalType": "struct IPoolManager.ModifyLiquidityParams",
                            "name": "",
                            "type": "tuple",
                            "components": [
                                {
                                    "internalType": "int24",
                                    "name": "tickLower",
                                    "type": "int24"
                                },
                                {
                                    "internalType": "int24",
                                    "name": "tickUpper",
                                    "type": "int24"
                                },
                                {
                                    "internalType": "int256",
                                    "name": "liquidityDelta",
                                    "type": "int256"
                                },
                                {
                                    "internalType": "bytes32",
                                    "name": "salt",
                                    "type": "bytes32"
                                }
                            ]
                        },
                        {
                            "internalType": "bytes",
                            "name": "",
                            "type": "bytes"
                        }
                    ],
                    "stateMutability": "nonpayable",
                    "type": "function",
                    "name": "beforeAddLiquidity",
                    "outputs": [
                        {
                            "internalType": "bytes4",
                            "name": "",
                            "type": "bytes4"
                        }
                    ]
                },
                {
                    "inputs": [
                        {
                            "internalType": "address",
                            "name": "",
                            "type": "address"
                        },
                        {
                            "internalType": "struct PoolKey",
                            "name": "",
                            "type": "tuple",
                            "components": [
                                {
                                    "internalType": "Currency",
                                    "name": "currency0",
                                    "type": "address"
                                },
                                {
                                    "internalType": "Currency",
                                    "name": "currency1",
                                    "type": "address"
                                },
                                {
                                    "internalType": "uint24",
                                    "name": "fee",
                                    "type": "uint24"
                                },
                                {
                                    "internalType": "int24",
                                    "name": "tickSpacing",
                                    "type": "int24"
                                },
                                {
                                    "internalType": "contract IHooks",
                                    "name": "hooks",
                                    "type": "address"
                                }
                            ]
                        },
                        {
                            "internalType": "uint256",
                            "name": "",
                            "type": "uint256"
                        },
                        {
                            "internalType": "uint256",
                            "name": "",
                            "type": "uint256"
                        },
                        {
                            "internalType": "bytes",
                            "name": "",
                            "type": "bytes"
                        }
                    ],
                    "stateMutability": "nonpayable",
                    "type": "function",
                    "name": "beforeDonate",
                    "outputs": [
                        {
                            "internalType": "bytes4",
                            "name": "",
                            "type": "bytes4"
                        }
                    ]
                },
                {
                    "inputs": [
                        {
                            "internalType": "address",
                            "name": "",
                            "type": "address"
                        },
                        {
                            "internalType": "struct PoolKey",
                            "name": "",
                            "type": "tuple",
                            "components": [
                                {
                                    "internalType": "Currency",
                                    "name": "currency0",
                                    "type": "address"
                                },
                                {
                                    "internalType": "Currency",
                                    "name": "currency1",
                                    "type": "address"
                                },
                                {
                                    "internalType": "uint24",
                                    "name": "fee",
                                    "type": "uint24"
                                },
                                {
                                    "internalType": "int24",
                                    "name": "tickSpacing",
                                    "type": "int24"
                                },
                                {
                                    "internalType": "contract IHooks",
                                    "name": "hooks",
                                    "type": "address"
                                }
                            ]
                        },
                        {
                            "internalType": "uint160",
                            "name": "",
                            "type": "uint160"
                        },
                        {
                            "internalType": "bytes",
                            "name": "",
                            "type": "bytes"
                        }
                    ],
                    "stateMutability": "nonpayable",
                    "type": "function",
                    "name": "beforeInitialize",
                    "outputs": [
                        {
                            "internalType": "bytes4",
                            "name": "",
                            "type": "bytes4"
                        }
                    ]
                },
                {
                    "inputs": [
                        {
                            "internalType": "address",
                            "name": "",
                            "type": "address"
                        },
                        {
                            "internalType": "struct PoolKey",
                            "name": "",
                            "type": "tuple",
                            "components": [
                                {
                                    "internalType": "Currency",
                                    "name": "currency0",
                                    "type": "address"
                                },
                                {
                                    "internalType": "Currency",
                                    "name": "currency1",
                                    "type": "address"
                                },
                                {
                                    "internalType": "uint24",
                                    "name": "fee",
                                    "type": "uint24"
                                },
                                {
                                    "internalType": "int24",
                                    "name": "tickSpacing",
                                    "type": "int24"
                                },
                                {
                                    "internalType": "contract IHooks",
                                    "name": "hooks",
                                    "type": "address"
                                }
                            ]
                        },
                        {
                            "internalType": "struct IPoolManager.ModifyLiquidityParams",
                            "name": "",
                            "type": "tuple",
                            "components": [
                                {
                                    "internalType": "int24",
                                    "name": "tickLower",
                                    "type": "int24"
                                },
                                {
                                    "internalType": "int24",
                                    "name": "tickUpper",
                                    "type": "int24"
                                },
                                {
                                    "internalType": "int256",
                                    "name": "liquidityDelta",
                                    "type": "int256"
                                },
                                {
                                    "internalType": "bytes32",
                                    "name": "salt",
                                    "type": "bytes32"
                                }
                            ]
                        },
                        {
                            "internalType": "bytes",
                            "name": "",
                            "type": "bytes"
                        }
                    ],
                    "stateMutability": "nonpayable",
                    "type": "function",
                    "name": "beforeRemoveLiquidity",
                    "outputs": [
                        {
                            "internalType": "bytes4",
                            "name": "",
                            "type": "bytes4"
                        }
                    ]
                },
                {
                    "inputs": [
                        {
                            "internalType": "address",
                            "name": "",
                            "type": "address"
                        },
                        {
                            "internalType": "struct PoolKey",
                            "name": "",
                            "type": "tuple",
                            "components": [
                                {
                                    "internalType": "Currency",
                                    "name": "currency0",
                                    "type": "address"
                                },
                                {
                                    "internalType": "Currency",
                                    "name": "currency1",
                                    "type": "address"
                                },
                                {
                                    "internalType": "uint24",
                                    "name": "fee",
                                    "type": "uint24"
                                },
                                {
                                    "internalType": "int24",
                                    "name": "tickSpacing",
                                    "type": "int24"
                                },
                                {
                                    "internalType": "contract IHooks",
                                    "name": "hooks",
                                    "type": "address"
                                }
                            ]
                        },
                        {
                            "internalType": "struct IPoolManager.SwapParams",
                            "name": "",
                            "type": "tuple",
                            "components": [
                                {
                                    "internalType": "bool",
                                    "name": "zeroForOne",
                                    "type": "bool"
                                },
                                {
                                    "internalType": "int256",
                                    "name": "amountSpecified",
                                    "type": "int256"
                                },
                                {
                                    "internalType": "uint160",
                                    "name": "sqrtPriceLimitX96",
                                    "type": "uint160"
                                }
                            ]
                        },
                        {
                            "internalType": "bytes",
                            "name": "",
                            "type": "bytes"
                        }
                    ],
                    "stateMutability": "nonpayable",
                    "type": "function",
                    "name": "beforeSwap",
                    "outputs": [
                        {
                            "internalType": "bytes4",
                            "name": "",
                            "type": "bytes4"
                        },
                        {
                            "internalType": "BeforeSwapDelta",
                            "name": "",
                            "type": "int256"
                        },
                        {
                            "internalType": "uint24",
                            "name": "",
                            "type": "uint24"
                        }
                    ]
                },
                {
                    "inputs": [
                        {
                            "internalType": "struct PoolKey",
                            "name": "key",
                            "type": "tuple",
                            "components": [
                                {
                                    "internalType": "Currency",
                                    "name": "currency0",
                                    "type": "address"
                                },
                                {
                                    "internalType": "Currency",
                                    "name": "currency1",
                                    "type": "address"
                                },
                                {
                                    "internalType": "uint24",
                                    "name": "fee",
                                    "type": "uint24"
                                },
                                {
                                    "internalType": "int24",
                                    "name": "tickSpacing",
                                    "type": "int24"
                                },
                                {
                                    "internalType": "contract IHooks",
                                    "name": "hooks",
                                    "type": "address"
                                }
                            ]
                        },
                        {
                            "internalType": "int24",
                            "name": "tickToSellAt",
                            "type": "int24"
                        },
                        {
                            "internalType": "bool",
                            "name": "zeroForOne",
                            "type": "bool"
                        }
                    ],
                    "stateMutability": "nonpayable",
                    "type": "function",
                    "name": "cancelOrder"
                },
                {
                    "inputs": [
                        {
                            "internalType": "uint256",
                            "name": "positionId",
                            "type": "uint256"
                        }
                    ],
                    "stateMutability": "view",
                    "type": "function",
                    "name": "claimTokensSupply",
                    "outputs": [
                        {
                            "internalType": "uint256",
                            "name": "claimsSupply",
                            "type": "uint256"
                        }
                    ]
                },
                {
                    "inputs": [
                        {
                            "internalType": "uint256",
                            "name": "positionId",
                            "type": "uint256"
                        }
                    ],
                    "stateMutability": "view",
                    "type": "function",
                    "name": "claimableOutputTokens",
                    "outputs": [
                        {
                            "internalType": "uint256",
                            "name": "outputClaimable",
                            "type": "uint256"
                        }
                    ]
                },
                {
                    "inputs": [],
                    "stateMutability": "pure",
                    "type": "function",
                    "name": "getHookPermissions",
                    "outputs": [
                        {
                            "internalType": "struct Hooks.Permissions",
                            "name": "",
                            "type": "tuple",
                            "components": [
                                {
                                    "internalType": "bool",
                                    "name": "beforeInitialize",
                                    "type": "bool"
                                },
                                {
                                    "internalType": "bool",
                                    "name": "afterInitialize",
                                    "type": "bool"
                                },
                                {
                                    "internalType": "bool",
                                    "name": "beforeAddLiquidity",
                                    "type": "bool"
                                },
                                {
                                    "internalType": "bool",
                                    "name": "afterAddLiquidity",
                                    "type": "bool"
                                },
                                {
                                    "internalType": "bool",
                                    "name": "beforeRemoveLiquidity",
                                    "type": "bool"
                                },
                                {
                                    "internalType": "bool",
                                    "name": "afterRemoveLiquidity",
                                    "type": "bool"
                                },
                                {
                                    "internalType": "bool",
                                    "name": "beforeSwap",
                                    "type": "bool"
                                },
                                {
                                    "internalType": "bool",
                                    "name": "afterSwap",
                                    "type": "bool"
                                },
                                {
                                    "internalType": "bool",
                                    "name": "beforeDonate",
                                    "type": "bool"
                                },
                                {
                                    "internalType": "bool",
                                    "name": "afterDonate",
                                    "type": "bool"
                                },
                                {
                                    "internalType": "bool",
                                    "name": "beforeSwapReturnDelta",
                                    "type": "bool"
                                },
                                {
                                    "internalType": "bool",
                                    "name": "afterSwapReturnDelta",
                                    "type": "bool"
                                },
                                {
                                    "internalType": "bool",
                                    "name": "afterAddLiquidityReturnDelta",
                                    "type": "bool"
                                },
                                {
                                    "internalType": "bool",
                                    "name": "afterRemoveLiquidityReturnDelta",
                                    "type": "bool"
                                }
                            ]
                        }
                    ]
                },
                {
                    "inputs": [
                        {
                            "internalType": "struct PoolKey",
                            "name": "key",
                            "type": "tuple",
                            "components": [
                                {
                                    "internalType": "Currency",
                                    "name": "currency0",
                                    "type": "address"
                                },
                                {
                                    "internalType": "Currency",
                                    "name": "currency1",
                                    "type": "address"
                                },
                                {
                                    "internalType": "uint24",
                                    "name": "fee",
                                    "type": "uint24"
                                },
                                {
                                    "internalType": "int24",
                                    "name": "tickSpacing",
                                    "type": "int24"
                                },
                                {
                                    "internalType": "contract IHooks",
                                    "name": "hooks",
                                    "type": "address"
                                }
                            ]
                        },
                        {
                            "internalType": "int24",
                            "name": "tick",
                            "type": "int24"
                        },
                        {
                            "internalType": "bool",
                            "name": "zeroForOne",
                            "type": "bool"
                        }
                    ],
                    "stateMutability": "pure",
                    "type": "function",
                    "name": "getPositionId",
                    "outputs": [
                        {
                            "internalType": "uint256",
                            "name": "",
                            "type": "uint256"
                        }
                    ]
                },
                {
                    "inputs": [
                        {
                            "internalType": "address",
                            "name": "account",
                            "type": "address"
                        },
                        {
                            "internalType": "address",
                            "name": "operator",
                            "type": "address"
                        }
                    ],
                    "stateMutability": "view",
                    "type": "function",
                    "name": "isApprovedForAll",
                    "outputs": [
                        {
                            "internalType": "bool",
                            "name": "",
                            "type": "bool"
                        }
                    ]
                },
                {
                    "inputs": [
                        {
                            "internalType": "PoolId",
                            "name": "poolId",
                            "type": "bytes32"
                        }
                    ],
                    "stateMutability": "view",
                    "type": "function",
                    "name": "lastTicks",
                    "outputs": [
                        {
                            "internalType": "int24",
                            "name": "lastTick",
                            "type": "int24"
                        }
                    ]
                },
                {
                    "inputs": [
                        {
                            "internalType": "PoolId",
                            "name": "poolId",
                            "type": "bytes32"
                        },
                        {
                            "internalType": "int24",
                            "name": "tickToSellAt",
                            "type": "int24"
                        },
                        {
                            "internalType": "bool",
                            "name": "zeroForOne",
                            "type": "bool"
                        }
                    ],
                    "stateMutability": "view",
                    "type": "function",
                    "name": "pendingOrders",
                    "outputs": [
                        {
                            "internalType": "uint256",
                            "name": "inputAmount",
                            "type": "uint256"
                        }
                    ]
                },
                {
                    "inputs": [
                        {
                            "internalType": "struct PoolKey",
                            "name": "key",
                            "type": "tuple",
                            "components": [
                                {
                                    "internalType": "Currency",
                                    "name": "currency0",
                                    "type": "address"
                                },
                                {
                                    "internalType": "Currency",
                                    "name": "currency1",
                                    "type": "address"
                                },
                                {
                                    "internalType": "uint24",
                                    "name": "fee",
                                    "type": "uint24"
                                },
                                {
                                    "internalType": "int24",
                                    "name": "tickSpacing",
                                    "type": "int24"
                                },
                                {
                                    "internalType": "contract IHooks",
                                    "name": "hooks",
                                    "type": "address"
                                }
                            ]
                        },
                        {
                            "internalType": "int24",
                            "name": "tickToSellAt",
                            "type": "int24"
                        },
                        {
                            "internalType": "bool",
                            "name": "zeroForOne",
                            "type": "bool"
                        },
                        {
                            "internalType": "uint256",
                            "name": "inputAmount",
                            "type": "uint256"
                        }
                    ],
                    "stateMutability": "nonpayable",
                    "type": "function",
                    "name": "placeOrder",
                    "outputs": [
                        {
                            "internalType": "int24",
                            "name": "",
                            "type": "int24"
                        }
                    ]
                },
                {
                    "inputs": [],
                    "stateMutability": "view",
                    "type": "function",
                    "name": "poolManager",
                    "outputs": [
                        {
                            "internalType": "contract IPoolManager",
                            "name": "",
                            "type": "address"
                        }
                    ]
                },
                {
                    "inputs": [
                        {
                            "internalType": "struct PoolKey",
                            "name": "key",
                            "type": "tuple",
                            "components": [
                                {
                                    "internalType": "Currency",
                                    "name": "currency0",
                                    "type": "address"
                                },
                                {
                                    "internalType": "Currency",
                                    "name": "currency1",
                                    "type": "address"
                                },
                                {
                                    "internalType": "uint24",
                                    "name": "fee",
                                    "type": "uint24"
                                },
                                {
                                    "internalType": "int24",
                                    "name": "tickSpacing",
                                    "type": "int24"
                                },
                                {
                                    "internalType": "contract IHooks",
                                    "name": "hooks",
                                    "type": "address"
                                }
                            ]
                        },
                        {
                            "internalType": "int24",
                            "name": "tickToSellAt",
                            "type": "int24"
                        },
                        {
                            "internalType": "bool",
                            "name": "zeroForOne",
                            "type": "bool"
                        },
                        {
                            "internalType": "uint256",
                            "name": "inputAmountToClaimFor",
                            "type": "uint256"
                        }
                    ],
                    "stateMutability": "nonpayable",
                    "type": "function",
                    "name": "redeem"
                },
                {
                    "inputs": [
                        {
                            "internalType": "address",
                            "name": "from",
                            "type": "address"
                        },
                        {
                            "internalType": "address",
                            "name": "to",
                            "type": "address"
                        },
                        {
                            "internalType": "uint256[]",
                            "name": "ids",
                            "type": "uint256[]"
                        },
                        {
                            "internalType": "uint256[]",
                            "name": "values",
                            "type": "uint256[]"
                        },
                        {
                            "internalType": "bytes",
                            "name": "data",
                            "type": "bytes"
                        }
                    ],
                    "stateMutability": "nonpayable",
                    "type": "function",
                    "name": "safeBatchTransferFrom"
                },
                {
                    "inputs": [
                        {
                            "internalType": "address",
                            "name": "from",
                            "type": "address"
                        },
                        {
                            "internalType": "address",
                            "name": "to",
                            "type": "address"
                        },
                        {
                            "internalType": "uint256",
                            "name": "id",
                            "type": "uint256"
                        },
                        {
                            "internalType": "uint256",
                            "name": "value",
                            "type": "uint256"
                        },
                        {
                            "internalType": "bytes",
                            "name": "data",
                            "type": "bytes"
                        }
                    ],
                    "stateMutability": "nonpayable",
                    "type": "function",
                    "name": "safeTransferFrom"
                },
                {
                    "inputs": [
                        {
                            "internalType": "address",
                            "name": "operator",
                            "type": "address"
                        },
                        {
                            "internalType": "bool",
                            "name": "approved",
                            "type": "bool"
                        }
                    ],
                    "stateMutability": "nonpayable",
                    "type": "function",
                    "name": "setApprovalForAll"
                },
                {
                    "inputs": [
                        {
                            "internalType": "bytes4",
                            "name": "interfaceId",
                            "type": "bytes4"
                        }
                    ],
                    "stateMutability": "view",
                    "type": "function",
                    "name": "supportsInterface",
                    "outputs": [
                        {
                            "internalType": "bool",
                            "name": "",
                            "type": "bool"
                        }
                    ]
                },
                {
                    "inputs": [
                        {
                            "internalType": "bytes",
                            "name": "data",
                            "type": "bytes"
                        }
                    ],
                    "stateMutability": "nonpayable",
                    "type": "function",
                    "name": "unlockCallback",
                    "outputs": [
                        {
                            "internalType": "bytes",
                            "name": "",
                            "type": "bytes"
                        }
                    ]
                },
                {
                    "inputs": [
                        {
                            "internalType": "uint256",
                            "name": "",
                            "type": "uint256"
                        }
                    ],
                    "stateMutability": "view",
                    "type": "function",
                    "name": "uri",
                    "outputs": [
                        {
                            "internalType": "string",
                            "name": "",
                            "type": "string"
                        }
                    ]
                }
            ],
            "devdoc": {
                "kind": "dev",
                "methods": {
                    "afterAddLiquidity(address,(address,address,uint24,int24,address),(int24,int24,int256,bytes32),int256,int256,bytes)": {
                        "params": {
                            "delta": "The caller's balance delta after adding liquidity; the sum of principal delta, fees accrued, and hook delta",
                            "feesAccrued": "The fees accrued since the last time fees were collected from this position",
                            "hookData": "Arbitrary data handed into the PoolManager by the liquidity provider to be passed on to the hook",
                            "key": "The key for the pool",
                            "params": "The parameters for adding liquidity",
                            "sender": "The initial msg.sender for the add liquidity call"
                        },
                        "returns": {
                            "_0": "bytes4 The function selector for the hook",
                            "_1": "BalanceDelta The hook's delta in token0 and token1. Positive: the hook is owed/took currency, negative: the hook owes/sent currency"
                        }
                    },
                    "afterDonate(address,(address,address,uint24,int24,address),uint256,uint256,bytes)": {
                        "params": {
                            "amount0": "The amount of token0 being donated",
                            "amount1": "The amount of token1 being donated",
                            "hookData": "Arbitrary data handed into the PoolManager by the donor to be be passed on to the hook",
                            "key": "The key for the pool",
                            "sender": "The initial msg.sender for the donate call"
                        },
                        "returns": {
                            "_0": "bytes4 The function selector for the hook"
                        }
                    },
                    "afterRemoveLiquidity(address,(address,address,uint24,int24,address),(int24,int24,int256,bytes32),int256,int256,bytes)": {
                        "params": {
                            "delta": "The caller's balance delta after adding liquidity; the sum of principal delta, fees accrued, and hook delta",
                            "feesAccrued": "The fees accrued since the last time fees were collected from this position",
                            "hookData": "Arbitrary data handed into the PoolManager by the liquidity provider to be be passed on to the hook",
                            "key": "The key for the pool",
                            "params": "The parameters for removing liquidity",
                            "sender": "The initial msg.sender for the remove liquidity call"
                        },
                        "returns": {
                            "_0": "bytes4 The function selector for the hook",
                            "_1": "BalanceDelta The hook's delta in token0 and token1. Positive: the hook is owed/took currency, negative: the hook owes/sent currency"
                        }
                    },
                    "balanceOf(address,uint256)": {
                        "details": "See {IERC1155-balanceOf}."
                    },
                    "balanceOfBatch(address[],uint256[])": {
                        "details": "See {IERC1155-balanceOfBatch}. Requirements: - `accounts` and `ids` must have the same length."
                    },
                    "beforeAddLiquidity(address,(address,address,uint24,int24,address),(int24,int24,int256,bytes32),bytes)": {
                        "params": {
                            "hookData": "Arbitrary data handed into the PoolManager by the liquidity provider to be passed on to the hook",
                            "key": "The key for the pool",
                            "params": "The parameters for adding liquidity",
                            "sender": "The initial msg.sender for the add liquidity call"
                        },
                        "returns": {
                            "_0": "bytes4 The function selector for the hook"
                        }
                    },
                    "beforeDonate(address,(address,address,uint24,int24,address),uint256,uint256,bytes)": {
                        "params": {
                            "amount0": "The amount of token0 being donated",
                            "amount1": "The amount of token1 being donated",
                            "hookData": "Arbitrary data handed into the PoolManager by the donor to be be passed on to the hook",
                            "key": "The key for the pool",
                            "sender": "The initial msg.sender for the donate call"
                        },
                        "returns": {
                            "_0": "bytes4 The function selector for the hook"
                        }
                    },
                    "beforeInitialize(address,(address,address,uint24,int24,address),uint160,bytes)": {
                        "params": {
                            "hookData": "Arbitrary data handed into the PoolManager by the initializer to be be passed on to the hook",
                            "key": "The key for the pool being initialized",
                            "sender": "The initial msg.sender for the initialize call",
                            "sqrtPriceX96": "The sqrt(price) of the pool as a Q64.96"
                        },
                        "returns": {
                            "_0": "bytes4 The function selector for the hook"
                        }
                    },
                    "beforeRemoveLiquidity(address,(address,address,uint24,int24,address),(int24,int24,int256,bytes32),bytes)": {
                        "params": {
                            "hookData": "Arbitrary data handed into the PoolManager by the liquidity provider to be be passed on to the hook",
                            "key": "The key for the pool",
                            "params": "The parameters for removing liquidity",
                            "sender": "The initial msg.sender for the remove liquidity call"
                        },
                        "returns": {
                            "_0": "bytes4 The function selector for the hook"
                        }
                    },
                    "beforeSwap(address,(address,address,uint24,int24,address),(bool,int256,uint160),bytes)": {
                        "params": {
                            "hookData": "Arbitrary data handed into the PoolManager by the swapper to be be passed on to the hook",
                            "key": "The key for the pool",
                            "params": "The parameters for the swap",
                            "sender": "The initial msg.sender for the swap call"
                        },
                        "returns": {
                            "_0": "bytes4 The function selector for the hook",
                            "_1": "BeforeSwapDelta The hook's delta in specified and unspecified currencies. Positive: the hook is owed/took currency, negative: the hook owes/sent currency",
                            "_2": "uint24 Optionally override the lp fee, only used if three conditions are met: 1. the Pool has a dynamic fee, 2. the value's 2nd highest bit is set (23rd bit, 0x400000), and 3. the value is less than or equal to the maximum fee (1 million)"
                        }
                    },
                    "getHookPermissions()": {
                        "details": "Used at deployment to validate the address correctly represents the expected permissions"
                    },
                    "isApprovedForAll(address,address)": {
                        "details": "See {IERC1155-isApprovedForAll}."
                    },
                    "safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": {
                        "details": "See {IERC1155-safeBatchTransferFrom}."
                    },
                    "safeTransferFrom(address,address,uint256,uint256,bytes)": {
                        "details": "See {IERC1155-safeTransferFrom}."
                    },
                    "setApprovalForAll(address,bool)": {
                        "details": "See {IERC1155-setApprovalForAll}."
                    },
                    "supportsInterface(bytes4)": {
                        "details": "See {IERC165-supportsInterface}."
                    },
                    "unlockCallback(bytes)": {
                        "details": "We force the onlyPoolManager modifier by exposing a virtual function after the onlyPoolManager check.",
                        "params": {
                            "data": "The data that was passed to the call to unlock"
                        },
                        "returns": {
                            "_0": "Any data that you want to be returned from the unlock call"
                        }
                    },
                    "uri(uint256)": {
                        "details": "See {IERC1155MetadataURI-uri}. This implementation returns the same URI for *all* token types. It relies on the token type ID substitution mechanism https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the EIP]. Clients calling this function must replace the `\\{id\\}` substring with the actual token type ID."
                    }
                },
                "version": 1
            },
            "userdoc": {
                "kind": "user",
                "methods": {
                    "afterAddLiquidity(address,(address,address,uint24,int24,address),(int24,int24,int256,bytes32),int256,int256,bytes)": {
                        "notice": "The hook called after liquidity is added"
                    },
                    "afterDonate(address,(address,address,uint24,int24,address),uint256,uint256,bytes)": {
                        "notice": "The hook called after donate"
                    },
                    "afterRemoveLiquidity(address,(address,address,uint24,int24,address),(int24,int24,int256,bytes32),int256,int256,bytes)": {
                        "notice": "The hook called after liquidity is removed"
                    },
                    "beforeAddLiquidity(address,(address,address,uint24,int24,address),(int24,int24,int256,bytes32),bytes)": {
                        "notice": "The hook called before liquidity is added"
                    },
                    "beforeDonate(address,(address,address,uint24,int24,address),uint256,uint256,bytes)": {
                        "notice": "The hook called before donate"
                    },
                    "beforeInitialize(address,(address,address,uint24,int24,address),uint160,bytes)": {
                        "notice": "The hook called before the state of a pool is initialized"
                    },
                    "beforeRemoveLiquidity(address,(address,address,uint24,int24,address),(int24,int24,int256,bytes32),bytes)": {
                        "notice": "The hook called before liquidity is removed"
                    },
                    "beforeSwap(address,(address,address,uint24,int24,address),(bool,int256,uint160),bytes)": {
                        "notice": "The hook called before a swap"
                    },
                    "getHookPermissions()": {
                        "notice": "Returns a struct of permissions to signal which hook functions are to be implemented"
                    },
                    "poolManager()": {
                        "notice": "The Uniswap v4 PoolManager contract"
                    },
                    "unlockCallback(bytes)": {
                        "notice": "Called by the pool manager on `msg.sender` when the manager is unlocked"
                    }
                },
                "version": 1
            }
        },
        "settings": {
            "remappings": [
                "@ensdomains/=lib/v4-periphery/lib/v4-core/node_modules/@ensdomains/",
                "@openzeppelin/=lib/v4-periphery/lib/v4-core/lib/openzeppelin-contracts/",
                "@openzeppelin/contracts/=lib/v4-periphery/lib/v4-core/lib/openzeppelin-contracts/contracts/",
                "@uniswap/v4-core/=lib/v4-periphery/lib/v4-core/",
                "ds-test/=lib/v4-periphery/lib/v4-core/lib/forge-std/lib/ds-test/src/",
                "erc4626-tests/=lib/v4-periphery/lib/v4-core/lib/openzeppelin-contracts/lib/erc4626-tests/",
                "forge-gas-snapshot/=lib/v4-periphery/lib/v4-core/lib/forge-gas-snapshot/src/",
                "forge-std/=lib/forge-std/src/",
                "hardhat/=lib/v4-periphery/lib/v4-core/node_modules/hardhat/",
                "openzeppelin-contracts/=lib/v4-periphery/lib/v4-core/lib/openzeppelin-contracts/",
                "permit2/=lib/v4-periphery/lib/permit2/",
                "solmate/=lib/v4-periphery/lib/v4-core/lib/solmate/",
                "v4-core/=lib/v4-periphery/lib/v4-core/src/",
                "v4-periphery/=lib/v4-periphery/"
            ],
            "optimizer": {
                "enabled": true,
                "runs": 800
            },
            "metadata": {
                "bytecodeHash": "ipfs"
            },
            "compilationTarget": {
                "src/TakeProfitsHook.sol": "TakeProfitsHook"
            },
            "evmVersion": "cancun",
            "libraries": {}
        },
        "sources": {
            "lib/v4-periphery/lib/v4-core/lib/openzeppelin-contracts/contracts/interfaces/draft-IERC6093.sol": {
                "keccak256": "0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7",
                "urls": [
                    "bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f",
                    "dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt"
                ],
                "license": "MIT"
            },
            "lib/v4-periphery/lib/v4-core/lib/openzeppelin-contracts/contracts/token/ERC1155/ERC1155.sol": {
                "keccak256": "0xd9b0b8ee1ac6dfee14eb1ad4383a4739dbaa0f2036594bb3a16f0408085dadde",
                "urls": [
                    "bzz-raw://6309805132e519162d1134c67df22dd963323a9208b4f41344a4c13ed63c1026",
                    "dweb:/ipfs/QmTBPHnf6qbtAD4NVnKVFmubUHRqMDPLkseR6apxTUpsQo"
                ],
                "license": "MIT"
            },
            "lib/v4-periphery/lib/v4-core/lib/openzeppelin-contracts/contracts/token/ERC1155/IERC1155.sol": {
                "keccak256": "0x6caffc9cfdc623eca9f87a686071708af5d5c17454d65022843fdddbc53c0cce",
                "urls": [
                    "bzz-raw://ecf8c7ed1f8ff443c181f64496ae380ee02e61dcd2ed120e1e997837a926f182",
                    "dweb:/ipfs/QmWASYTrZPF2MrcpC3EBmxx6RgtZ5Fr4jwrsmB7ZF7qhDC"
                ],
                "license": "MIT"
            },
            "lib/v4-periphery/lib/v4-core/lib/openzeppelin-contracts/contracts/token/ERC1155/IERC1155Receiver.sol": {
                "keccak256": "0xb69597a63b202e28401128bed6a6d259e8730191274471af7303eafb247881a3",
                "urls": [
                    "bzz-raw://25addbda49a578b3318130585601344c5149a5549d749adf88e9685349a46b23",
                    "dweb:/ipfs/Qme2DuD8gpsve1ZvaSMQpBwMdpU7yAtekDwr7gUp8dX4zX"
                ],
                "license": "MIT"
            },
            "lib/v4-periphery/lib/v4-core/lib/openzeppelin-contracts/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol": {
                "keccak256": "0xe92b5e199b963d108ad6e06feeede151ba23849e0d064956535489ff967ffe68",
                "urls": [
                    "bzz-raw://280e17738a67b06dae02fec32982bd48a8ab71d8df95e9975ae03532634bc522",
                    "dweb:/ipfs/QmecjsNcFgy2mMjuNfRDkLpAYMRWnh5o73fw1Bj2rCso2z"
                ],
                "license": "MIT"
            },
            "lib/v4-periphery/lib/v4-core/lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol": {
                "keccak256": "0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70",
                "urls": [
                    "bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c",
                    "dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq"
                ],
                "license": "MIT"
            },
            "lib/v4-periphery/lib/v4-core/lib/openzeppelin-contracts/contracts/utils/Arrays.sol": {
                "keccak256": "0x8806d620b6571932b662cfd48fbd518d4f70df1f88a23b5724cacde64a77bda1",
                "urls": [
                    "bzz-raw://8043304c8f9e1c1dc4a41935efa067daa77ad7abbae1fda41f015d53fbf327a5",
                    "dweb:/ipfs/QmTrF2hSkRZoN9EEu8zdEhBpGNZ7RxzCdXf9ydzc2HQ3tM"
                ],
                "license": "MIT"
            },
            "lib/v4-periphery/lib/v4-core/lib/openzeppelin-contracts/contracts/utils/Context.sol": {
                "keccak256": "0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2",
                "urls": [
                    "bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12",
                    "dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF"
                ],
                "license": "MIT"
            },
            "lib/v4-periphery/lib/v4-core/lib/openzeppelin-contracts/contracts/utils/StorageSlot.sol": {
                "keccak256": "0x32ba59b4b7299237c8ba56319110989d7978a039faf754793064e967e5894418",
                "urls": [
                    "bzz-raw://1ae50c8b562427df610cc4540c9bf104acca7ef8e2dcae567ae7e52272281e9c",
                    "dweb:/ipfs/QmTHiadFCSJUPpRjNegc5SahmeU8bAoY8i9Aq6tVscbcKR"
                ],
                "license": "MIT"
            },
            "lib/v4-periphery/lib/v4-core/lib/openzeppelin-contracts/contracts/utils/introspection/ERC165.sol": {
                "keccak256": "0x9e8778b14317ba9e256c30a76fd6c32b960af621987f56069e1e819c77c6a133",
                "urls": [
                    "bzz-raw://1777404f1dcd0fac188e55a288724ec3c67b45288e49cc64723e95e702b49ab8",
                    "dweb:/ipfs/QmZFdC626GButBApwDUvvTnUzdinevC3B24d7yyh57XkiA"
                ],
                "license": "MIT"
            },
            "lib/v4-periphery/lib/v4-core/lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol": {
                "keccak256": "0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b",
                "urls": [
                    "bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df",
                    "dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL"
                ],
                "license": "MIT"
            },
            "lib/v4-periphery/lib/v4-core/lib/openzeppelin-contracts/contracts/utils/math/Math.sol": {
                "keccak256": "0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d",
                "urls": [
                    "bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875",
                    "dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L"
                ],
                "license": "MIT"
            },
            "lib/v4-periphery/lib/v4-core/lib/solmate/src/utils/FixedPointMathLib.sol": {
                "keccak256": "0x1b62af9baf5b8e991ed7531bc87f45550ba9d61e8dbff5caf237ccaf3a3fd843",
                "urls": [
                    "bzz-raw://b7b38b977c5305b18ceefbeed4c9ceaaaefa419b520de62de6604ea661f8c0a9",
                    "dweb:/ipfs/QmecMRzgfMyDVa2pvBqMMDLYBappaj7Aa3qcMoQYEQrhWi"
                ],
                "license": "AGPL-3.0-only"
            },
            "lib/v4-periphery/lib/v4-core/src/interfaces/IExtsload.sol": {
                "keccak256": "0x80b53ca4907d6f0088c3b931f2b72cad1dc4615a95094d96bd0fb8dff8d5ba43",
                "urls": [
                    "bzz-raw://375c69148622aab7a3537d5fd37d373a8e9731022c8d87bdaee46233b0a99fe1",
                    "dweb:/ipfs/QmXFjdoYRxsA5B1kyuxEXgNf3FBoL1zPvy26Qy8EtpdFRN"
                ],
                "license": "MIT"
            },
            "lib/v4-periphery/lib/v4-core/src/interfaces/IExttload.sol": {
                "keccak256": "0xc6b68283ebd8d1c789df536756726eed51c589134bb20821b236a0d22a135937",
                "urls": [
                    "bzz-raw://294394f72dfc219689209f4130d85601dfd0d63c8d47578050d312db70f9b6c8",
                    "dweb:/ipfs/QmTDMQ3oxCGHgEBU48a3Lp4S1rRjc8vVCxkhE5ZNej1bsY"
                ],
                "license": "MIT"
            },
            "lib/v4-periphery/lib/v4-core/src/interfaces/IHooks.sol": {
                "keccak256": "0x2ed03c5c22b1b81490788f54599beb3b26b834e608f6351166f60069f5655671",
                "urls": [
                    "bzz-raw://aabb296e1109ccc792e444c63d96c04f75f74275fbd917083b65aa18cc9eb662",
                    "dweb:/ipfs/QmWjVWjC831FM6W9yk7ys8vmMesmHb3XrskvTzkFM8q7pK"
                ],
                "license": "MIT"
            },
            "lib/v4-periphery/lib/v4-core/src/interfaces/IPoolManager.sol": {
                "keccak256": "0x859e8c7794fc04a72e53d4e9d2b89ae5517f71409a667fc2f4db054c9d121168",
                "urls": [
                    "bzz-raw://690097a7065d05ba5641b4a12c91a561c566209313307b5d74d989bcc00c3221",
                    "dweb:/ipfs/QmbxiRHURJhcUMJ5NfZg3V1BgVowPQQ263UH43De4DvEBj"
                ],
                "license": "MIT"
            },
            "lib/v4-periphery/lib/v4-core/src/interfaces/IProtocolFeeController.sol": {
                "keccak256": "0xc2d7f3605da9767e36cf25d4d4fa9b95663a6659e26ce28cf29b8b88acb79a4c",
                "urls": [
                    "bzz-raw://c7a43cda35b8a9254ed3e46cfd8649361f09121d17ef554bd3d190b9a8d57cc6",
                    "dweb:/ipfs/QmRBDQoqCWddH5hY1JdxMyYtY8jMZhWAwtuFJBc3r8V31G"
                ],
                "license": "MIT"
            },
            "lib/v4-periphery/lib/v4-core/src/interfaces/IProtocolFees.sol": {
                "keccak256": "0x6274aeb7a4f03734502f3b1b5494f7738d3f3adfa3a15aebf383ce1d2698e971",
                "urls": [
                    "bzz-raw://ed366e17dc42f9b230b8b7bb27e2c304ea71b7edb11b5738f75a1090f34648f4",
                    "dweb:/ipfs/QmVqZbCQ46B5huP8LsDcxbquqCdd74uvhe3F47KqRLAGeq"
                ],
                "license": "MIT"
            },
            "lib/v4-periphery/lib/v4-core/src/interfaces/callback/IUnlockCallback.sol": {
                "keccak256": "0x58c82f2bd9d7c097ed09bd0991fedc403b0ec270eb3d0158bfb095c06a03d719",
                "urls": [
                    "bzz-raw://91168ca26a10980df2cdc3fbfe8ddf372c002b7ef19e3c59a0c9870d64198f1b",
                    "dweb:/ipfs/QmUSpaM825vd1SwvF38esgbdLgYiPwefKaFERTWvUi6uSK"
                ],
                "license": "MIT"
            },
            "lib/v4-periphery/lib/v4-core/src/interfaces/external/IERC20Minimal.sol": {
                "keccak256": "0xc1c23330c1511ecfd45c67a683962b4e2555b82f1dacd40cc8b46ae5a6e250e7",
                "urls": [
                    "bzz-raw://5ce10b7970482a65f9e9a365b810eeb154a5d4a8229a26653028d84b9622a410",
                    "dweb:/ipfs/QmTSwXxZ2FTkM5duBZgbpFs8SRVDR5NPAnW4YimeDhb1s8"
                ],
                "license": "GPL-2.0-or-later"
            },
            "lib/v4-periphery/lib/v4-core/src/interfaces/external/IERC6909Claims.sol": {
                "keccak256": "0xa586f345739e52b0488a0fe40b6e375cce67fdd25758408b0efcb5133ad96a48",
                "urls": [
                    "bzz-raw://e8c557b7e52abdbbd82e415a1acc27921446a7fd090b7d4877e52be72619547f",
                    "dweb:/ipfs/QmXE2KNPbXmGX8BQF3ei6zhzRTnhoTQg39XmqMnkhbr6QK"
                ],
                "license": "MIT"
            },
            "lib/v4-periphery/lib/v4-core/src/libraries/BitMath.sol": {
                "keccak256": "0x148c274b48f5f4becfe0d8aee257fe8b5d87a902b5bcfb6b3e64b4d5a574aa50",
                "urls": [
                    "bzz-raw://b5db898b4aa8805cb599c51c5d218ba5bec476673c3851131c3b4f73565e8c8b",
                    "dweb:/ipfs/QmdLGs2xPSRTCs76o1aMsBVZDwG8wTEmKGeRvghk7k2TZ2"
                ],
                "license": "GPL-2.0-or-later"
            },
            "lib/v4-periphery/lib/v4-core/src/libraries/CustomRevert.sol": {
                "keccak256": "0x745ca9c258d00fae52f293af065471f1bc1099de1bea4ceb52e312240ac52895",
                "urls": [
                    "bzz-raw://71eee0aa4e395f2c7fce16760d6547c6a12a6fd3dc56b94f4d44480fed538495",
                    "dweb:/ipfs/QmPfJBiHzeVe9sx3PZ27jWrzJqF9atvevpYBC9j3Ekz9TG"
                ],
                "license": "MIT"
            },
            "lib/v4-periphery/lib/v4-core/src/libraries/FixedPoint128.sol": {
                "keccak256": "0xc7e80dc41f28887d0d915a75c0b2783ae659e5384dd1a3ed1251a42e058d8835",
                "urls": [
                    "bzz-raw://2df62bf1d9d4349236fd0bc7a96b3a3be95f4c049603e4a20c8473cca9402b4d",
                    "dweb:/ipfs/QmVR5dmMkoypmhaBeBj8cGegHpJycbofUDg59dHm42i9MT"
                ],
                "license": "GPL-2.0-or-later"
            },
            "lib/v4-periphery/lib/v4-core/src/libraries/FullMath.sol": {
                "keccak256": "0x4fc73a00817193fd3cac1cc03d8167d21af97d75f1815a070ee31a90c702b4c2",
                "urls": [
                    "bzz-raw://c3b2d66d36b1ad56b1ab6e2eb8a816740877b40b461c93f125e88621c8378e52",
                    "dweb:/ipfs/QmPGvMZzKQvNiWKd8aRzzdW7oAizwrMgcMtnaworDkVHFC"
                ],
                "license": "MIT"
            },
            "lib/v4-periphery/lib/v4-core/src/libraries/Hooks.sol": {
                "keccak256": "0x33b963d98de5eadd5b42a4d323ce5d25d87432d8ed538096ecca8d0b77e0d088",
                "urls": [
                    "bzz-raw://4ef49b43fe2fa6a2c6e44a1f8d7712ce4e13c7656da5ec35e73eb644707e5ed1",
                    "dweb:/ipfs/QmZCisxCf9a1zxZvZADk1EN8JyFXZ1XZ4B8s1PpwEMugJX"
                ],
                "license": "MIT"
            },
            "lib/v4-periphery/lib/v4-core/src/libraries/LPFeeLibrary.sol": {
                "keccak256": "0x9cb794c60d4c867732b20a6cd14b965bf3a63df1161eb3cd28e2c9d0447db46f",
                "urls": [
                    "bzz-raw://3d987ee5738f74c3fb091db503b44ad6651e4e47554623182e0ecbe696bd7382",
                    "dweb:/ipfs/QmW7Rt5qjD4mmRnvYcT2Fj7VPzBm1eT9w15WUHtfWmKEPh"
                ],
                "license": "GPL-2.0-or-later"
            },
            "lib/v4-periphery/lib/v4-core/src/libraries/LiquidityMath.sol": {
                "keccak256": "0x4a04b9383e2fb943c2c3ae7d0c9071b58dd97b6dac0a409fe1c79c3ca897bbcf",
                "urls": [
                    "bzz-raw://0b33cf0ff936f62aa7f3b82922fa0ac52ac24471561e87fbf7ab8372607f6dfc",
                    "dweb:/ipfs/Qmcr6omwzJjQPu6HQ8E9vFXaTgrtqfb2KbfxbuQavfUzFa"
                ],
                "license": "GPL-2.0-or-later"
            },
            "lib/v4-periphery/lib/v4-core/src/libraries/ParseBytes.sol": {
                "keccak256": "0xf0795198d1e651b0b33fd1708d80a14f501bb2a1486905676d35f364e880f579",
                "urls": [
                    "bzz-raw://5aea527fcec51d7274f0c189dc2479a6aa708fc91857187a4d7db46bb1d6c7a8",
                    "dweb:/ipfs/QmUTrwTPSZ7EHBaTyfAA78rZVP17iQzmAmvDcQ8GhDRAEf"
                ],
                "license": "GPL-2.0-or-later"
            },
            "lib/v4-periphery/lib/v4-core/src/libraries/Position.sol": {
                "keccak256": "0xddab2a831f1befb6abf5567e77c4582169ca8156cf69eb4f22d8e87f7226a3f9",
                "urls": [
                    "bzz-raw://c79fe61b50f3b70cff503abfa6f5643fcbefb9b794855bee1019b1e6d9c083b2",
                    "dweb:/ipfs/QmbKmYNQesaMz8bo1b7TMHQcAwaDd3eDPrE5pAdPPZTtk5"
                ],
                "license": "BUSL-1.1"
            },
            "lib/v4-periphery/lib/v4-core/src/libraries/SafeCast.sol": {
                "keccak256": "0x8060d21c4d54a431113f9a594b860e6a9bf1f346d0c7c02dfafe9847dd8a0591",
                "urls": [
                    "bzz-raw://e7f71b73d82965d1d949f388060f6f0daab7cd14718e260682918ec6fa0253b9",
                    "dweb:/ipfs/QmP85jtFrCeV6Y8zuJfrrgiMy1shX3tHWs2wX7DMAB7Lft"
                ],
                "license": "GPL-2.0-or-later"
            },
            "lib/v4-periphery/lib/v4-core/src/libraries/StateLibrary.sol": {
                "keccak256": "0x4bbb1e816dd67fd4e958518ef50d216fcdab19912ab98c28d4c5279890c48c2c",
                "urls": [
                    "bzz-raw://eab2611adf69904cb0f326dbd82cdd6d1a09630dacace7f741e29c76836e41e8",
                    "dweb:/ipfs/QmcCR78dZ8C7pF3DSDoWyYobX7aXkBNxbCmgenkqpgRrbT"
                ],
                "license": "MIT"
            },
            "lib/v4-periphery/lib/v4-core/src/libraries/TickMath.sol": {
                "keccak256": "0x39b33c48e9632a6b330027121cffef80916ce11b729b8296b640e22dd1cd1c2f",
                "urls": [
                    "bzz-raw://62264b1fa20aa6f87a4f722d33a9e84d0c8f5a34f904e5a25ba007512202f4dd",
                    "dweb:/ipfs/QmYsF6j9caz4V6GqGoBmfVDS3EioexZQQ8p6xfDZbk3owM"
                ],
                "license": "GPL-2.0-or-later"
            },
            "lib/v4-periphery/lib/v4-core/src/types/BalanceDelta.sol": {
                "keccak256": "0xa719c8fe51e0a9524280178f19f6851bcc3b3b60e73618f3d60905d35ae5569f",
                "urls": [
                    "bzz-raw://7436928dc9de35c6c7c5c636cb51adaf295cfd590da83b19a004ae33cbec9ef9",
                    "dweb:/ipfs/QmRJ9yZkUpzk4433GX3LgVVL8jwpbSYSUwXcucKisf3v4H"
                ],
                "license": "MIT"
            },
            "lib/v4-periphery/lib/v4-core/src/types/BeforeSwapDelta.sol": {
                "keccak256": "0x2a774312d91285313d569da1a718c909655da5432310417692097a1d4dc83a78",
                "urls": [
                    "bzz-raw://a2c7a0379955cff9c17ab9e61f95e42909aa5947c22740f86ce940d09856f782",
                    "dweb:/ipfs/QmaAuo8UBYXsGrVuKh8iRoAAdqwtg1jDq515cW1ZRP5m9K"
                ],
                "license": "MIT"
            },
            "lib/v4-periphery/lib/v4-core/src/types/Currency.sol": {
                "keccak256": "0x35c74eae038ecfbbae48b0e13f2b9a43ac6d8da4847ffa0f1482e4e2d455ee74",
                "urls": [
                    "bzz-raw://cadb54f9c89b6970583148e503a23c7b654aff1f3e6a0da57705c54e5b03b39f",
                    "dweb:/ipfs/Qma3CKKwyzGwzHN4Z9HDJ4Q7J5VfbN594i8F2DTGWTMWcB"
                ],
                "license": "MIT"
            },
            "lib/v4-periphery/lib/v4-core/src/types/PoolId.sol": {
                "keccak256": "0x308311916ea0f5c2fd878b6a2751eb223d170a69e33f601fae56dfe3c5d392af",
                "urls": [
                    "bzz-raw://669c2cd7ac17690b5d8831e0bda72822376c3a04b36afed6d31df4d75fe60918",
                    "dweb:/ipfs/QmT6EpkxqU8VF3WsgrZ66F3s1cCQRffR95z1HDYZz7ph6y"
                ],
                "license": "MIT"
            },
            "lib/v4-periphery/lib/v4-core/src/types/PoolKey.sol": {
                "keccak256": "0xf89856e0580d7a4856d3187a76858377ccee9d59702d230c338d84388221b786",
                "urls": [
                    "bzz-raw://6f3118fa189025695c37fdf0bdd1190f085ad097484d3c88cf4c56d1db65f639",
                    "dweb:/ipfs/QmamXpgtB8GV1CaFLvqefPWSoikLDhMk1yU4heBnVzU8gi"
                ],
                "license": "MIT"
            },
            "lib/v4-periphery/src/base/ImmutableState.sol": {
                "keccak256": "0x12b175e4ed6d31da545e3b6c9930901568c99d153b1e51044d32e88f42b9b633",
                "urls": [
                    "bzz-raw://f4347899e0b3bfd66e8d79652b1a14a62a02d16bfece63a40c6efe0e5656c384",
                    "dweb:/ipfs/QmSbbT8fefHstA72BqF7SDooDtmhs79dR8T6pWv8LxKU2L"
                ],
                "license": "GPL-2.0-or-later"
            },
            "lib/v4-periphery/src/base/SafeCallback.sol": {
                "keccak256": "0x6284bd1d1fbe78a901e63dc70720e2bf19de6758347b050f8ba2b155e73325c5",
                "urls": [
                    "bzz-raw://3afb423a3c0f8b5f6436680ff3cde9247924d442a9720dc39b2b07a352607187",
                    "dweb:/ipfs/QmaT5bMwiiqkp8KWUnHjWJz55Ah9vbpASzJagg9riHbpTf"
                ],
                "license": "GPL-3.0-or-later"
            },
            "lib/v4-periphery/src/base/hooks/BaseHook.sol": {
                "keccak256": "0xe6522a26dfe7b86aea6a84670b502890ede1e96302d641f231906897b2172f2f",
                "urls": [
                    "bzz-raw://19d2d2678ca32e81af3419bc4640833fc40e155b6757bb87edb0182f181c7fe7",
                    "dweb:/ipfs/QmPGpN6p78SrRW79hX16sM572uD4Fb2hJF6Bv58M9LYNpQ"
                ],
                "license": "GPL-3.0-or-later"
            },
            "src/TakeProfitsHook.sol": {
                "keccak256": "0x0ec4f10375b38548281c3db405daff3b7ce8bf294d7a6cc839080bf0edeb2093",
                "urls": [
                    "bzz-raw://0c466234679450c1d9dadfd1492232a4b836be52223092dd295fb9b4f6e67d25",
                    "dweb:/ipfs/QmPoudLMp8JoSJGXKymeTz4rYHqEm3ystHSriKgcqitCXo"
                ],
                "license": "UNLICENSED"
            }
        },
        "version": 1
    },
    "id": 108
}