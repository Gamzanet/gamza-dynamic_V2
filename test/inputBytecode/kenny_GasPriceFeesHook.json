{
    "abi": [
        {
            "type": "constructor",
            "inputs": [
                {
                    "name": "_poolManager",
                    "type": "address",
                    "internalType": "contract IPoolManager"
                }
            ],
            "stateMutability": "nonpayable"
        },
        {
            "type": "function",
            "name": "BASE_FEE",
            "inputs": [],
            "outputs": [
                {
                    "name": "",
                    "type": "uint24",
                    "internalType": "uint24"
                }
            ],
            "stateMutability": "view"
        },
        {
            "type": "function",
            "name": "afterAddLiquidity",
            "inputs": [
                {
                    "name": "",
                    "type": "address",
                    "internalType": "address"
                },
                {
                    "name": "",
                    "type": "tuple",
                    "internalType": "struct PoolKey",
                    "components": [
                        {
                            "name": "currency0",
                            "type": "address",
                            "internalType": "Currency"
                        },
                        {
                            "name": "currency1",
                            "type": "address",
                            "internalType": "Currency"
                        },
                        {
                            "name": "fee",
                            "type": "uint24",
                            "internalType": "uint24"
                        },
                        {
                            "name": "tickSpacing",
                            "type": "int24",
                            "internalType": "int24"
                        },
                        {
                            "name": "hooks",
                            "type": "address",
                            "internalType": "contract IHooks"
                        }
                    ]
                },
                {
                    "name": "",
                    "type": "tuple",
                    "internalType": "struct IPoolManager.ModifyLiquidityParams",
                    "components": [
                        {
                            "name": "tickLower",
                            "type": "int24",
                            "internalType": "int24"
                        },
                        {
                            "name": "tickUpper",
                            "type": "int24",
                            "internalType": "int24"
                        },
                        {
                            "name": "liquidityDelta",
                            "type": "int256",
                            "internalType": "int256"
                        },
                        {
                            "name": "salt",
                            "type": "bytes32",
                            "internalType": "bytes32"
                        }
                    ]
                },
                {
                    "name": "",
                    "type": "int256",
                    "internalType": "BalanceDelta"
                },
                {
                    "name": "",
                    "type": "int256",
                    "internalType": "BalanceDelta"
                },
                {
                    "name": "",
                    "type": "bytes",
                    "internalType": "bytes"
                }
            ],
            "outputs": [
                {
                    "name": "",
                    "type": "bytes4",
                    "internalType": "bytes4"
                },
                {
                    "name": "",
                    "type": "int256",
                    "internalType": "BalanceDelta"
                }
            ],
            "stateMutability": "nonpayable"
        },
        {
            "type": "function",
            "name": "afterDonate",
            "inputs": [
                {
                    "name": "",
                    "type": "address",
                    "internalType": "address"
                },
                {
                    "name": "",
                    "type": "tuple",
                    "internalType": "struct PoolKey",
                    "components": [
                        {
                            "name": "currency0",
                            "type": "address",
                            "internalType": "Currency"
                        },
                        {
                            "name": "currency1",
                            "type": "address",
                            "internalType": "Currency"
                        },
                        {
                            "name": "fee",
                            "type": "uint24",
                            "internalType": "uint24"
                        },
                        {
                            "name": "tickSpacing",
                            "type": "int24",
                            "internalType": "int24"
                        },
                        {
                            "name": "hooks",
                            "type": "address",
                            "internalType": "contract IHooks"
                        }
                    ]
                },
                {
                    "name": "",
                    "type": "uint256",
                    "internalType": "uint256"
                },
                {
                    "name": "",
                    "type": "uint256",
                    "internalType": "uint256"
                },
                {
                    "name": "",
                    "type": "bytes",
                    "internalType": "bytes"
                }
            ],
            "outputs": [
                {
                    "name": "",
                    "type": "bytes4",
                    "internalType": "bytes4"
                }
            ],
            "stateMutability": "nonpayable"
        },
        {
            "type": "function",
            "name": "afterInitialize",
            "inputs": [
                {
                    "name": "",
                    "type": "address",
                    "internalType": "address"
                },
                {
                    "name": "",
                    "type": "tuple",
                    "internalType": "struct PoolKey",
                    "components": [
                        {
                            "name": "currency0",
                            "type": "address",
                            "internalType": "Currency"
                        },
                        {
                            "name": "currency1",
                            "type": "address",
                            "internalType": "Currency"
                        },
                        {
                            "name": "fee",
                            "type": "uint24",
                            "internalType": "uint24"
                        },
                        {
                            "name": "tickSpacing",
                            "type": "int24",
                            "internalType": "int24"
                        },
                        {
                            "name": "hooks",
                            "type": "address",
                            "internalType": "contract IHooks"
                        }
                    ]
                },
                {
                    "name": "",
                    "type": "uint160",
                    "internalType": "uint160"
                },
                {
                    "name": "",
                    "type": "int24",
                    "internalType": "int24"
                },
                {
                    "name": "",
                    "type": "bytes",
                    "internalType": "bytes"
                }
            ],
            "outputs": [
                {
                    "name": "",
                    "type": "bytes4",
                    "internalType": "bytes4"
                }
            ],
            "stateMutability": "nonpayable"
        },
        {
            "type": "function",
            "name": "afterRemoveLiquidity",
            "inputs": [
                {
                    "name": "",
                    "type": "address",
                    "internalType": "address"
                },
                {
                    "name": "",
                    "type": "tuple",
                    "internalType": "struct PoolKey",
                    "components": [
                        {
                            "name": "currency0",
                            "type": "address",
                            "internalType": "Currency"
                        },
                        {
                            "name": "currency1",
                            "type": "address",
                            "internalType": "Currency"
                        },
                        {
                            "name": "fee",
                            "type": "uint24",
                            "internalType": "uint24"
                        },
                        {
                            "name": "tickSpacing",
                            "type": "int24",
                            "internalType": "int24"
                        },
                        {
                            "name": "hooks",
                            "type": "address",
                            "internalType": "contract IHooks"
                        }
                    ]
                },
                {
                    "name": "",
                    "type": "tuple",
                    "internalType": "struct IPoolManager.ModifyLiquidityParams",
                    "components": [
                        {
                            "name": "tickLower",
                            "type": "int24",
                            "internalType": "int24"
                        },
                        {
                            "name": "tickUpper",
                            "type": "int24",
                            "internalType": "int24"
                        },
                        {
                            "name": "liquidityDelta",
                            "type": "int256",
                            "internalType": "int256"
                        },
                        {
                            "name": "salt",
                            "type": "bytes32",
                            "internalType": "bytes32"
                        }
                    ]
                },
                {
                    "name": "",
                    "type": "int256",
                    "internalType": "BalanceDelta"
                },
                {
                    "name": "",
                    "type": "int256",
                    "internalType": "BalanceDelta"
                },
                {
                    "name": "",
                    "type": "bytes",
                    "internalType": "bytes"
                }
            ],
            "outputs": [
                {
                    "name": "",
                    "type": "bytes4",
                    "internalType": "bytes4"
                },
                {
                    "name": "",
                    "type": "int256",
                    "internalType": "BalanceDelta"
                }
            ],
            "stateMutability": "nonpayable"
        },
        {
            "type": "function",
            "name": "afterSwap",
            "inputs": [
                {
                    "name": "",
                    "type": "address",
                    "internalType": "address"
                },
                {
                    "name": "",
                    "type": "tuple",
                    "internalType": "struct PoolKey",
                    "components": [
                        {
                            "name": "currency0",
                            "type": "address",
                            "internalType": "Currency"
                        },
                        {
                            "name": "currency1",
                            "type": "address",
                            "internalType": "Currency"
                        },
                        {
                            "name": "fee",
                            "type": "uint24",
                            "internalType": "uint24"
                        },
                        {
                            "name": "tickSpacing",
                            "type": "int24",
                            "internalType": "int24"
                        },
                        {
                            "name": "hooks",
                            "type": "address",
                            "internalType": "contract IHooks"
                        }
                    ]
                },
                {
                    "name": "",
                    "type": "tuple",
                    "internalType": "struct IPoolManager.SwapParams",
                    "components": [
                        {
                            "name": "zeroForOne",
                            "type": "bool",
                            "internalType": "bool"
                        },
                        {
                            "name": "amountSpecified",
                            "type": "int256",
                            "internalType": "int256"
                        },
                        {
                            "name": "sqrtPriceLimitX96",
                            "type": "uint160",
                            "internalType": "uint160"
                        }
                    ]
                },
                {
                    "name": "",
                    "type": "int256",
                    "internalType": "BalanceDelta"
                },
                {
                    "name": "",
                    "type": "bytes",
                    "internalType": "bytes"
                }
            ],
            "outputs": [
                {
                    "name": "",
                    "type": "bytes4",
                    "internalType": "bytes4"
                },
                {
                    "name": "",
                    "type": "int128",
                    "internalType": "int128"
                }
            ],
            "stateMutability": "nonpayable"
        },
        {
            "type": "function",
            "name": "beforeAddLiquidity",
            "inputs": [
                {
                    "name": "",
                    "type": "address",
                    "internalType": "address"
                },
                {
                    "name": "",
                    "type": "tuple",
                    "internalType": "struct PoolKey",
                    "components": [
                        {
                            "name": "currency0",
                            "type": "address",
                            "internalType": "Currency"
                        },
                        {
                            "name": "currency1",
                            "type": "address",
                            "internalType": "Currency"
                        },
                        {
                            "name": "fee",
                            "type": "uint24",
                            "internalType": "uint24"
                        },
                        {
                            "name": "tickSpacing",
                            "type": "int24",
                            "internalType": "int24"
                        },
                        {
                            "name": "hooks",
                            "type": "address",
                            "internalType": "contract IHooks"
                        }
                    ]
                },
                {
                    "name": "",
                    "type": "tuple",
                    "internalType": "struct IPoolManager.ModifyLiquidityParams",
                    "components": [
                        {
                            "name": "tickLower",
                            "type": "int24",
                            "internalType": "int24"
                        },
                        {
                            "name": "tickUpper",
                            "type": "int24",
                            "internalType": "int24"
                        },
                        {
                            "name": "liquidityDelta",
                            "type": "int256",
                            "internalType": "int256"
                        },
                        {
                            "name": "salt",
                            "type": "bytes32",
                            "internalType": "bytes32"
                        }
                    ]
                },
                {
                    "name": "",
                    "type": "bytes",
                    "internalType": "bytes"
                }
            ],
            "outputs": [
                {
                    "name": "",
                    "type": "bytes4",
                    "internalType": "bytes4"
                }
            ],
            "stateMutability": "nonpayable"
        },
        {
            "type": "function",
            "name": "beforeDonate",
            "inputs": [
                {
                    "name": "",
                    "type": "address",
                    "internalType": "address"
                },
                {
                    "name": "",
                    "type": "tuple",
                    "internalType": "struct PoolKey",
                    "components": [
                        {
                            "name": "currency0",
                            "type": "address",
                            "internalType": "Currency"
                        },
                        {
                            "name": "currency1",
                            "type": "address",
                            "internalType": "Currency"
                        },
                        {
                            "name": "fee",
                            "type": "uint24",
                            "internalType": "uint24"
                        },
                        {
                            "name": "tickSpacing",
                            "type": "int24",
                            "internalType": "int24"
                        },
                        {
                            "name": "hooks",
                            "type": "address",
                            "internalType": "contract IHooks"
                        }
                    ]
                },
                {
                    "name": "",
                    "type": "uint256",
                    "internalType": "uint256"
                },
                {
                    "name": "",
                    "type": "uint256",
                    "internalType": "uint256"
                },
                {
                    "name": "",
                    "type": "bytes",
                    "internalType": "bytes"
                }
            ],
            "outputs": [
                {
                    "name": "",
                    "type": "bytes4",
                    "internalType": "bytes4"
                }
            ],
            "stateMutability": "nonpayable"
        },
        {
            "type": "function",
            "name": "beforeInitialize",
            "inputs": [
                {
                    "name": "",
                    "type": "address",
                    "internalType": "address"
                },
                {
                    "name": "key",
                    "type": "tuple",
                    "internalType": "struct PoolKey",
                    "components": [
                        {
                            "name": "currency0",
                            "type": "address",
                            "internalType": "Currency"
                        },
                        {
                            "name": "currency1",
                            "type": "address",
                            "internalType": "Currency"
                        },
                        {
                            "name": "fee",
                            "type": "uint24",
                            "internalType": "uint24"
                        },
                        {
                            "name": "tickSpacing",
                            "type": "int24",
                            "internalType": "int24"
                        },
                        {
                            "name": "hooks",
                            "type": "address",
                            "internalType": "contract IHooks"
                        }
                    ]
                },
                {
                    "name": "",
                    "type": "uint160",
                    "internalType": "uint160"
                },
                {
                    "name": "",
                    "type": "bytes",
                    "internalType": "bytes"
                }
            ],
            "outputs": [
                {
                    "name": "",
                    "type": "bytes4",
                    "internalType": "bytes4"
                }
            ],
            "stateMutability": "pure"
        },
        {
            "type": "function",
            "name": "beforeRemoveLiquidity",
            "inputs": [
                {
                    "name": "",
                    "type": "address",
                    "internalType": "address"
                },
                {
                    "name": "",
                    "type": "tuple",
                    "internalType": "struct PoolKey",
                    "components": [
                        {
                            "name": "currency0",
                            "type": "address",
                            "internalType": "Currency"
                        },
                        {
                            "name": "currency1",
                            "type": "address",
                            "internalType": "Currency"
                        },
                        {
                            "name": "fee",
                            "type": "uint24",
                            "internalType": "uint24"
                        },
                        {
                            "name": "tickSpacing",
                            "type": "int24",
                            "internalType": "int24"
                        },
                        {
                            "name": "hooks",
                            "type": "address",
                            "internalType": "contract IHooks"
                        }
                    ]
                },
                {
                    "name": "",
                    "type": "tuple",
                    "internalType": "struct IPoolManager.ModifyLiquidityParams",
                    "components": [
                        {
                            "name": "tickLower",
                            "type": "int24",
                            "internalType": "int24"
                        },
                        {
                            "name": "tickUpper",
                            "type": "int24",
                            "internalType": "int24"
                        },
                        {
                            "name": "liquidityDelta",
                            "type": "int256",
                            "internalType": "int256"
                        },
                        {
                            "name": "salt",
                            "type": "bytes32",
                            "internalType": "bytes32"
                        }
                    ]
                },
                {
                    "name": "",
                    "type": "bytes",
                    "internalType": "bytes"
                }
            ],
            "outputs": [
                {
                    "name": "",
                    "type": "bytes4",
                    "internalType": "bytes4"
                }
            ],
            "stateMutability": "nonpayable"
        },
        {
            "type": "function",
            "name": "beforeSwap",
            "inputs": [
                {
                    "name": "",
                    "type": "address",
                    "internalType": "address"
                },
                {
                    "name": "key",
                    "type": "tuple",
                    "internalType": "struct PoolKey",
                    "components": [
                        {
                            "name": "currency0",
                            "type": "address",
                            "internalType": "Currency"
                        },
                        {
                            "name": "currency1",
                            "type": "address",
                            "internalType": "Currency"
                        },
                        {
                            "name": "fee",
                            "type": "uint24",
                            "internalType": "uint24"
                        },
                        {
                            "name": "tickSpacing",
                            "type": "int24",
                            "internalType": "int24"
                        },
                        {
                            "name": "hooks",
                            "type": "address",
                            "internalType": "contract IHooks"
                        }
                    ]
                },
                {
                    "name": "",
                    "type": "tuple",
                    "internalType": "struct IPoolManager.SwapParams",
                    "components": [
                        {
                            "name": "zeroForOne",
                            "type": "bool",
                            "internalType": "bool"
                        },
                        {
                            "name": "amountSpecified",
                            "type": "int256",
                            "internalType": "int256"
                        },
                        {
                            "name": "sqrtPriceLimitX96",
                            "type": "uint160",
                            "internalType": "uint160"
                        }
                    ]
                },
                {
                    "name": "",
                    "type": "bytes",
                    "internalType": "bytes"
                }
            ],
            "outputs": [
                {
                    "name": "",
                    "type": "bytes4",
                    "internalType": "bytes4"
                },
                {
                    "name": "",
                    "type": "int256",
                    "internalType": "BeforeSwapDelta"
                },
                {
                    "name": "",
                    "type": "uint24",
                    "internalType": "uint24"
                }
            ],
            "stateMutability": "nonpayable"
        },
        {
            "type": "function",
            "name": "getHookPermissions",
            "inputs": [],
            "outputs": [
                {
                    "name": "",
                    "type": "tuple",
                    "internalType": "struct Hooks.Permissions",
                    "components": [
                        {
                            "name": "beforeInitialize",
                            "type": "bool",
                            "internalType": "bool"
                        },
                        {
                            "name": "afterInitialize",
                            "type": "bool",
                            "internalType": "bool"
                        },
                        {
                            "name": "beforeAddLiquidity",
                            "type": "bool",
                            "internalType": "bool"
                        },
                        {
                            "name": "afterAddLiquidity",
                            "type": "bool",
                            "internalType": "bool"
                        },
                        {
                            "name": "beforeRemoveLiquidity",
                            "type": "bool",
                            "internalType": "bool"
                        },
                        {
                            "name": "afterRemoveLiquidity",
                            "type": "bool",
                            "internalType": "bool"
                        },
                        {
                            "name": "beforeSwap",
                            "type": "bool",
                            "internalType": "bool"
                        },
                        {
                            "name": "afterSwap",
                            "type": "bool",
                            "internalType": "bool"
                        },
                        {
                            "name": "beforeDonate",
                            "type": "bool",
                            "internalType": "bool"
                        },
                        {
                            "name": "afterDonate",
                            "type": "bool",
                            "internalType": "bool"
                        },
                        {
                            "name": "beforeSwapReturnDelta",
                            "type": "bool",
                            "internalType": "bool"
                        },
                        {
                            "name": "afterSwapReturnDelta",
                            "type": "bool",
                            "internalType": "bool"
                        },
                        {
                            "name": "afterAddLiquidityReturnDelta",
                            "type": "bool",
                            "internalType": "bool"
                        },
                        {
                            "name": "afterRemoveLiquidityReturnDelta",
                            "type": "bool",
                            "internalType": "bool"
                        }
                    ]
                }
            ],
            "stateMutability": "pure"
        },
        {
            "type": "function",
            "name": "movingAverageGasPrice",
            "inputs": [],
            "outputs": [
                {
                    "name": "",
                    "type": "uint128",
                    "internalType": "uint128"
                }
            ],
            "stateMutability": "view"
        },
        {
            "type": "function",
            "name": "movingAverageGasPriceCount",
            "inputs": [],
            "outputs": [
                {
                    "name": "",
                    "type": "uint104",
                    "internalType": "uint104"
                }
            ],
            "stateMutability": "view"
        },
        {
            "type": "function",
            "name": "poolManager",
            "inputs": [],
            "outputs": [
                {
                    "name": "",
                    "type": "address",
                    "internalType": "contract IPoolManager"
                }
            ],
            "stateMutability": "view"
        },
        {
            "type": "function",
            "name": "unlockCallback",
            "inputs": [
                {
                    "name": "data",
                    "type": "bytes",
                    "internalType": "bytes"
                }
            ],
            "outputs": [
                {
                    "name": "",
                    "type": "bytes",
                    "internalType": "bytes"
                }
            ],
            "stateMutability": "nonpayable"
        },
        {
            "type": "error",
            "name": "HookNotImplemented",
            "inputs": []
        },
        {
            "type": "error",
            "name": "InvalidPool",
            "inputs": []
        },
        {
            "type": "error",
            "name": "LockFailure",
            "inputs": []
        },
        {
            "type": "error",
            "name": "MustUseDynamicFee",
            "inputs": []
        },
        {
            "type": "error",
            "name": "NotPoolManager",
            "inputs": []
        },
        {
            "type": "error",
            "name": "NotSelf",
            "inputs": []
        }
    ],
    "bytecode": {
        "object": "0x60a060405234801561000f575f80fd5b5060405161147438038061147483398101604081905261002e91610464565b6001600160a01b0381166080528061004530610054565b5061004e610147565b50610571565b6101448161013f604080516101c0810182525f80825260208201819052918101829052606081018290526080810182905260a0810182905260c0810182905260e08101829052610100810182905261012081018290526101408101829052610160810182905261018081018290526101a081019190915250604080516101c08101825260018082525f60208301819052928201839052606082018390526080820183905260a0820183905260c0820181905260e0820152610100810182905261012081018290526101408101829052610160810182905261018081018290526101a081019190915290565b610209565b50565b5f543a9061016690600160801b90046001600160681b031660016104a5565b5f546001600160681b0391821691839161019191600160801b820416906001600160801b03166104c4565b61019b91906104ed565b6101a5919061050c565b5f80546001600160801b0319166001600160801b039290921691909117808255600160801b90046001600160681b03169060106101e183610546565b91906101000a8154816001600160681b0302191690836001600160681b031602179055505050565b61021e6001600160a01b03831661200061043a565b8151151590151514158061024e57506102426001600160a01b03831661100061043a565b15158160200151151514155b8061027557506102696001600160a01b03831661080061043a565b15158160400151151514155b8061029c57506102906001600160a01b03831661040061043a565b15158160600151151514155b806102c357506102b76001600160a01b03831661020061043a565b15158160800151151514155b806102ea57506102de6001600160a01b03831661010061043a565b15158160a00151151514155b8061031057506103046001600160a01b038316608061043a565b15158160c00151151514155b80610336575061032a6001600160a01b038316604061043a565b15158160e00151151514155b8061035d57506103506001600160a01b038316602061043a565b1515816101000151151514155b8061038457506103776001600160a01b038316601061043a565b1515816101200151151514155b806103ab575061039e6001600160a01b038316600861043a565b1515816101400151151514155b806103d257506103c56001600160a01b038316600461043a565b1515816101600151151514155b806103f957506103ec6001600160a01b038316600261043a565b1515816101800151151514155b8061042057506104136001600160a01b038316600161043a565b1515816101a00151151514155b1561043657610436630732d7b560e51b8361044f565b5050565b6001600160a01b038282161615155b92915050565b815f526001600160a01b03811660045260245ffd5b5f60208284031215610474575f80fd5b81516001600160a01b038116811461048a575f80fd5b9392505050565b634e487b7160e01b5f52601160045260245ffd5b6001600160681b03818116838216019081111561044957610449610491565b6001600160801b0381811683821602908116908181146104e6576104e6610491565b5092915050565b6001600160801b03818116838216019081111561044957610449610491565b5f6001600160801b0383168061053057634e487b7160e01b5f52601260045260245ffd5b6001600160801b03929092169190910492915050565b5f6001600160681b0382166002600160681b0319810161056857610568610491565b60010192915050565b608051610edd6105975f395f818161039701528181610466015261050b0152610edd5ff3fe608060405234801561000f575f80fd5b50600436106100fb575f3560e01c80639f063efc11610093578063c4e833ce11610063578063c4e833ce1461026d578063cd2c70e814610361578063dc4c90d314610392578063e1b4af691461025f575f80fd5b80639f063efc1461019e578063a910f80f1461021b578063b47b2fb114610229578063b6a8b0fa1461025f575f80fd5b8063575e24b4116100ce578063575e24b4146101605780636c2bbe7e1461019e57806391dd7346146101d15780639a161daa146101f1575f80fd5b806321d0ee70146100ff578063259982e5146100ff5780633440d820146101305780633d18651e14610143575b5f80fd5b61011261010d366004610806565b6103d1565b6040516001600160e01b031990911681526020015b60405180910390f35b61011261013e36600461087d565b6103eb565b61014c61138881565b60405162ffffff9091168152602001610127565b61017361016e3660046108e7565b610440565b604080516001600160e01b03199094168452602084019290925262ffffff1690820152606001610127565b6101b16101ac366004610941565b6104e3565b604080516001600160e01b03199093168352602083019190915201610127565b6101e46101df3660046109cc565b6104fe565b6040516101279190610a0b565b5f54610203906001600160801b031681565b6040516001600160801b039091168152602001610127565b61011261010d366004610a56565b61023c610237366004610ade565b61055c565b604080516001600160e01b03199093168352600f9190910b602083015201610127565b61011261010d366004610b41565b610354604080516101c0810182525f80825260208201819052918101829052606081018290526080810182905260a0810182905260c0810182905260e08101829052610100810182905261012081018290526101408101829052610160810182905261018081018290526101a081019190915250604080516101c08101825260018082525f60208301819052928201839052606082018390526080820183905260a0820183905260c0820181905260e0820152610100810182905261012081018290526101408101829052610160810182905261018081018290526101a081019190915290565b6040516101279190610b9b565b5f5461037a90600160801b90046001600160681b031681565b6040516001600160681b039091168152602001610127565b6103b97f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b039091168152602001610127565b5f604051630a85dc2960e01b815260040160405180910390fd5b5f6104116103ff6060870160408801610cce565b62ffffff1662ffffff16628000001490565b61042e576040516315b3d69f60e31b815260040160405180910390fd5b506301a206c160e51b95945050505050565b5f805f8061044c61057c565b604051635275965160e01b81529091506001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169063527596519061049d908b908590600401610ce7565b5f604051808303815f87803b1580156104b4575f80fd5b505af11580156104c6573d5f803e3d5ffd5b506315d7892d60e21b9c5f9c508c9b509950505050505050505050565b5f80604051630a85dc2960e01b815260040160405180910390fd5b6060336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146105495760405163570c108560e11b815260040160405180910390fd5b6105538383610620565b90505b92915050565b5f806105666106b9565b5063b47b2fb160e01b975f975095505050505050565b5f80543a90600a90610598906001600160801b0316600b610d8a565b6105a29190610dc0565b6001600160801b0316816001600160801b031611156105ce576105c86002611388610ded565b91505090565b5f54600a906105e7906001600160801b03166009610d8a565b6105f19190610dc0565b6001600160801b0316816001600160801b03161015610617576105c86113886002610e12565b61138891505090565b60605f80306001600160a01b0316858560405161063e929190610e30565b5f604051808303815f865af19150503d805f8114610677576040519150601f19603f3d011682016040523d82523d5f602084013e61067c565b606091505b509150915081156106905791506105569050565b80515f036106b1576040516314815f4760e31b815260040160405180910390fd5b805160208201fd5b5f543a906106d890600160801b90046001600160681b03166001610e3f565b5f546001600160681b0391821691839161070391600160801b820416906001600160801b0316610d8a565b61070d9190610e5e565b6107179190610dc0565b5f80546fffffffffffffffffffffffffffffffff19166001600160801b039290921691909117808255600160801b90046001600160681b031690601061075c83610e7d565b91906101000a8154816001600160681b0302191690836001600160681b031602179055505050565b6001600160a01b0381168114610798575f80fd5b50565b5f60a082840312156107ab575f80fd5b50919050565b5f608082840312156107ab575f80fd5b5f8083601f8401126107d1575f80fd5b50813567ffffffffffffffff8111156107e8575f80fd5b6020830191508360208285010111156107ff575f80fd5b9250929050565b5f805f805f610160868803121561081b575f80fd5b853561082681610784565b9450610835876020880161079b565b93506108448760c088016107b1565b925061014086013567ffffffffffffffff811115610860575f80fd5b61086c888289016107c1565b969995985093965092949392505050565b5f805f805f6101008688031215610892575f80fd5b853561089d81610784565b94506108ac876020880161079b565b935060c08601356108bc81610784565b925060e086013567ffffffffffffffff811115610860575f80fd5b5f606082840312156107ab575f80fd5b5f805f805f61014086880312156108fc575f80fd5b853561090781610784565b9450610916876020880161079b565b93506109258760c088016108d7565b925061012086013567ffffffffffffffff811115610860575f80fd5b5f805f805f805f6101a0888a031215610958575f80fd5b873561096381610784565b96506109728960208a0161079b565b95506109818960c08a016107b1565b94506101408801359350610160880135925061018088013567ffffffffffffffff8111156109ad575f80fd5b6109b98a828b016107c1565b989b979a50959850939692959293505050565b5f80602083850312156109dd575f80fd5b823567ffffffffffffffff8111156109f3575f80fd5b6109ff858286016107c1565b90969095509350505050565b602081525f82518060208401528060208501604085015e5f604082850101526040601f19601f83011684010191505092915050565b8035600281900b8114610a51575f80fd5b919050565b5f805f805f806101208789031215610a6c575f80fd5b8635610a7781610784565b9550610a86886020890161079b565b945060c0870135610a9681610784565b9350610aa460e08801610a40565b925061010087013567ffffffffffffffff811115610ac0575f80fd5b610acc89828a016107c1565b979a9699509497509295939492505050565b5f805f805f806101608789031215610af4575f80fd5b8635610aff81610784565b9550610b0e886020890161079b565b9450610b1d8860c089016108d7565b9350610120870135925061014087013567ffffffffffffffff811115610ac0575f80fd5b5f805f805f806101208789031215610b57575f80fd5b8635610b6281610784565b9550610b71886020890161079b565b945060c0870135935060e0870135925061010087013567ffffffffffffffff811115610ac0575f80fd5b8151151581526101c081016020830151610bb9602084018215159052565b506040830151610bcd604084018215159052565b506060830151610be1606084018215159052565b506080830151610bf5608084018215159052565b5060a0830151610c0960a084018215159052565b5060c0830151610c1d60c084018215159052565b5060e0830151610c3160e084018215159052565b50610100830151610c4761010084018215159052565b50610120830151610c5d61012084018215159052565b50610140830151610c7361014084018215159052565b50610160830151610c8961016084018215159052565b50610180830151610c9f61018084018215159052565b506101a0830151610cb56101a084018215159052565b5092915050565b803562ffffff81168114610a51575f80fd5b5f60208284031215610cde575f80fd5b61055382610cbc565b60c081018335610cf681610784565b6001600160a01b031682526020840135610d0f81610784565b6001600160a01b0316602083015262ffffff610d2d60408601610cbc565b166040830152610d3f60608501610a40565b60020b60608301526080840135610d5581610784565b6001600160a01b0316608083015262ffffff9290921660a090910152919050565b634e487b7160e01b5f52601160045260245ffd5b6001600160801b038181168382160290811690818114610cb557610cb5610d76565b634e487b7160e01b5f52601260045260245ffd5b5f6001600160801b03831680610dd857610dd8610dac565b806001600160801b0384160491505092915050565b5f62ffffff831680610e0157610e01610dac565b8062ffffff84160491505092915050565b62ffffff8181168382160290811690818114610cb557610cb5610d76565b818382375f9101908152919050565b6001600160681b03818116838216019081111561055657610556610d76565b6001600160801b03818116838216019081111561055657610556610d76565b5f6001600160681b0382166001600160681b038103610e9e57610e9e610d76565b6001019291505056fea2646970667358221220282f8c4ff1f06c452e2179af6529763a6d225533aea3cb1cafa2bbc9a6e359b264736f6c634300081a0033",
        "sourceMap": "510:3663:95:-:0;;;1132:100;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;451:26:92;;;;1180:12:95;854:25:94::1;874:4;854:19;:25::i;:::-;-1:-1:-1::0;1204:21:95::1;:19;:21::i;:::-;1132:100:::0;510:3663;;1842:142:94;1919:58;1949:5;1956:20;510:3663:95;;;;;;;;-1:-1:-1;510:3663:95;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1492:629:95;;;;;;;;1546:4;1492:629;;;-1:-1:-1;1492:629:95;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1341:787;1956:20:94;1919:29;:58::i;:::-;1842:142;:::o;3278:401:95:-;3328:16;3602:26;3355:11;;3602:30;;-1:-1:-1;;;3602:26:95;;-1:-1:-1;;;;;3602:26:95;3631:1;3602:30;:::i;:::-;3547:26;;-1:-1:-1;;;;;3521:112:95;;;;3577:8;;3523:50;;-1:-1:-1;;;3547:26:95;;;;-1:-1:-1;;;;;3523:21:95;:50;:::i;:::-;3522:63;;;;:::i;:::-;3521:112;;;;:::i;:::-;3485:21;:148;;-1:-1:-1;;;;;;3485:148:95;-1:-1:-1;;;;;3485:148:95;;;;;;;;;;;-1:-1:-1;;;3644:28:95;;-1:-1:-1;;;;;3644:28:95;;:26;:28;;;:::i;:::-;;;;;;;;-1:-1:-1;;;;;3644:28:95;;;;;-1:-1:-1;;;;;3644:28:95;;;;;;;3318:361;3278:401::o;3584:1599:53:-;3735:42;-1:-1:-1;;;;;3735:18:53;;1319:7;3735:18;:42::i;:::-;3703:28;;:74;;;;;;;;:166;;-1:-1:-1;3828:41:53;-1:-1:-1;;;;;3828:18:53;;1382:7;3828:18;:41::i;:::-;3797:72;;:11;:27;;;:72;;;;3703:166;:265;;;-1:-1:-1;3923:45:53;-1:-1:-1;;;;;3923:18:53;;1450:7;3923:18;:45::i;:::-;3889:79;;:11;:30;;;:79;;;;3703:265;:362;;;-1:-1:-1;4021:44:53;-1:-1:-1;;;;;4021:18:53;;1516:7;4021:18;:44::i;:::-;3988:77;;:11;:29;;;:77;;;;3703:362;:467;;;-1:-1:-1;4122:48:53;-1:-1:-1;;;;;4122:18:53;;1587:6;4122:18;:48::i;:::-;4085:85;;:11;:33;;;:85;;;;3703:467;:570;;;-1:-1:-1;4226:47:53;-1:-1:-1;;;;;4226:18:53;;1655:6;4226:18;:47::i;:::-;4190:83;;:11;:32;;;:83;;;;3703:570;:652;;;-1:-1:-1;4319:36:53;-1:-1:-1;;;;;4319:18:53;;1713:6;4319:18;:36::i;:::-;4293:62;;:11;:22;;;:62;;;;3703:652;:732;;;-1:-1:-1;4400:35:53;-1:-1:-1;;;;;4400:18:53;;1769:6;4400:18;:35::i;:::-;4375:60;;:11;:21;;;:60;;;;3703:732;:818;;;-1:-1:-1;4483:38:53;-1:-1:-1;;;;;4483:18:53;;1829:6;4483:18;:38::i;:::-;4455:66;;:11;:24;;;:66;;;;3703:818;:902;;;-1:-1:-1;4568:37:53;-1:-1:-1;;;;;4568:18:53;;1887:6;4568:18;:37::i;:::-;4541:64;;:11;:23;;;:64;;;;3703:902;:1009;;;-1:-1:-1;4662:50:53;-1:-1:-1;;;;;4662:18:53;;1959:6;4662:18;:50::i;:::-;4625:87;;:11;:33;;;:87;;;;3703:1009;:1114;;;-1:-1:-1;4768:49:53;-1:-1:-1;;;;;4768:18:53;;2029:6;4768:18;:49::i;:::-;4732:85;;:11;:32;;;:85;;;;3703:1114;:1236;;;-1:-1:-1;4881:58:53;-1:-1:-1;;;;;4881:18:53;;2108:6;4881:18;:58::i;:::-;4837:102;;:11;:40;;;:102;;;;3703:1236;:1384;;;-1:-1:-1;5026:61:53;-1:-1:-1;;;;;5026:18:53;;2190:6;5026:18;:61::i;:::-;4959:128;;:11;:43;;;:128;;;;3703:1384;3686:1491;;;5112:54;-1:-1:-1;;;5160:4:53;5112:39;:54::i;:::-;3584:1599;;:::o;16350:137::-;-1:-1:-1;;;;;16446:29:53;;;:34;;;16350:137;;;;;:::o;862:257:49:-;986:8;983:1;976:19;-1:-1:-1;;;;;1025:4:49;1021:53;1015:4;1008:67;1098:4;1095:1;1088:15;14:312:97;106:6;159:2;147:9;138:7;134:23;130:32;127:52;;;175:1;172;165:12;127:52;201:16;;-1:-1:-1;;;;;246:31:97;;236:42;;226:70;;292:1;289;282:12;226:70;315:5;14:312;-1:-1:-1;;;14:312:97:o;331:127::-;392:10;387:3;383:20;380:1;373:31;423:4;420:1;413:15;447:4;444:1;437:15;463:195;-1:-1:-1;;;;;532:27:97;;;561;;;528:61;;601:28;;598:54;;;632:18;;:::i;663:272::-;-1:-1:-1;;;;;748:27:97;;;777;;;744:61;825:37;;;;881:24;;;871:58;;909:18;;:::i;:::-;871:58;663:272;;;;:::o;940:195::-;-1:-1:-1;;;;;1009:27:97;;;1038;;;1005:61;;1078:28;;1075:54;;;1109:18;;:::i;1140:294::-;1180:1;-1:-1:-1;;;;;1207:27:97;;;1243:134;;1299:10;1294:3;1290:20;1287:1;1280:31;1334:4;1331:1;1324:15;1362:4;1359:1;1352:15;1243:134;-1:-1:-1;;;;;1395:27:97;;;;1391:37;;;;;1140:294;-1:-1:-1;;1140:294:97:o;1439:207::-;1478:3;-1:-1:-1;;;;;1511:31:97;;-1:-1:-1;;;;;;1554:32:97;;1551:58;;1589:18;;:::i;:::-;1638:1;1625:15;;1439:207;-1:-1:-1;;1439:207:97:o;:::-;510:3663:95;;;;;;;;;;;;;;;;;;;;;;",
        "linkReferences": {}
    },
    "deployedBytecode": {
        "object": "0x608060405234801561000f575f80fd5b50600436106100fb575f3560e01c80639f063efc11610093578063c4e833ce11610063578063c4e833ce1461026d578063cd2c70e814610361578063dc4c90d314610392578063e1b4af691461025f575f80fd5b80639f063efc1461019e578063a910f80f1461021b578063b47b2fb114610229578063b6a8b0fa1461025f575f80fd5b8063575e24b4116100ce578063575e24b4146101605780636c2bbe7e1461019e57806391dd7346146101d15780639a161daa146101f1575f80fd5b806321d0ee70146100ff578063259982e5146100ff5780633440d820146101305780633d18651e14610143575b5f80fd5b61011261010d366004610806565b6103d1565b6040516001600160e01b031990911681526020015b60405180910390f35b61011261013e36600461087d565b6103eb565b61014c61138881565b60405162ffffff9091168152602001610127565b61017361016e3660046108e7565b610440565b604080516001600160e01b03199094168452602084019290925262ffffff1690820152606001610127565b6101b16101ac366004610941565b6104e3565b604080516001600160e01b03199093168352602083019190915201610127565b6101e46101df3660046109cc565b6104fe565b6040516101279190610a0b565b5f54610203906001600160801b031681565b6040516001600160801b039091168152602001610127565b61011261010d366004610a56565b61023c610237366004610ade565b61055c565b604080516001600160e01b03199093168352600f9190910b602083015201610127565b61011261010d366004610b41565b610354604080516101c0810182525f80825260208201819052918101829052606081018290526080810182905260a0810182905260c0810182905260e08101829052610100810182905261012081018290526101408101829052610160810182905261018081018290526101a081019190915250604080516101c08101825260018082525f60208301819052928201839052606082018390526080820183905260a0820183905260c0820181905260e0820152610100810182905261012081018290526101408101829052610160810182905261018081018290526101a081019190915290565b6040516101279190610b9b565b5f5461037a90600160801b90046001600160681b031681565b6040516001600160681b039091168152602001610127565b6103b97f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b039091168152602001610127565b5f604051630a85dc2960e01b815260040160405180910390fd5b5f6104116103ff6060870160408801610cce565b62ffffff1662ffffff16628000001490565b61042e576040516315b3d69f60e31b815260040160405180910390fd5b506301a206c160e51b95945050505050565b5f805f8061044c61057c565b604051635275965160e01b81529091506001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169063527596519061049d908b908590600401610ce7565b5f604051808303815f87803b1580156104b4575f80fd5b505af11580156104c6573d5f803e3d5ffd5b506315d7892d60e21b9c5f9c508c9b509950505050505050505050565b5f80604051630a85dc2960e01b815260040160405180910390fd5b6060336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146105495760405163570c108560e11b815260040160405180910390fd5b6105538383610620565b90505b92915050565b5f806105666106b9565b5063b47b2fb160e01b975f975095505050505050565b5f80543a90600a90610598906001600160801b0316600b610d8a565b6105a29190610dc0565b6001600160801b0316816001600160801b031611156105ce576105c86002611388610ded565b91505090565b5f54600a906105e7906001600160801b03166009610d8a565b6105f19190610dc0565b6001600160801b0316816001600160801b03161015610617576105c86113886002610e12565b61138891505090565b60605f80306001600160a01b0316858560405161063e929190610e30565b5f604051808303815f865af19150503d805f8114610677576040519150601f19603f3d011682016040523d82523d5f602084013e61067c565b606091505b509150915081156106905791506105569050565b80515f036106b1576040516314815f4760e31b815260040160405180910390fd5b805160208201fd5b5f543a906106d890600160801b90046001600160681b03166001610e3f565b5f546001600160681b0391821691839161070391600160801b820416906001600160801b0316610d8a565b61070d9190610e5e565b6107179190610dc0565b5f80546fffffffffffffffffffffffffffffffff19166001600160801b039290921691909117808255600160801b90046001600160681b031690601061075c83610e7d565b91906101000a8154816001600160681b0302191690836001600160681b031602179055505050565b6001600160a01b0381168114610798575f80fd5b50565b5f60a082840312156107ab575f80fd5b50919050565b5f608082840312156107ab575f80fd5b5f8083601f8401126107d1575f80fd5b50813567ffffffffffffffff8111156107e8575f80fd5b6020830191508360208285010111156107ff575f80fd5b9250929050565b5f805f805f610160868803121561081b575f80fd5b853561082681610784565b9450610835876020880161079b565b93506108448760c088016107b1565b925061014086013567ffffffffffffffff811115610860575f80fd5b61086c888289016107c1565b969995985093965092949392505050565b5f805f805f6101008688031215610892575f80fd5b853561089d81610784565b94506108ac876020880161079b565b935060c08601356108bc81610784565b925060e086013567ffffffffffffffff811115610860575f80fd5b5f606082840312156107ab575f80fd5b5f805f805f61014086880312156108fc575f80fd5b853561090781610784565b9450610916876020880161079b565b93506109258760c088016108d7565b925061012086013567ffffffffffffffff811115610860575f80fd5b5f805f805f805f6101a0888a031215610958575f80fd5b873561096381610784565b96506109728960208a0161079b565b95506109818960c08a016107b1565b94506101408801359350610160880135925061018088013567ffffffffffffffff8111156109ad575f80fd5b6109b98a828b016107c1565b989b979a50959850939692959293505050565b5f80602083850312156109dd575f80fd5b823567ffffffffffffffff8111156109f3575f80fd5b6109ff858286016107c1565b90969095509350505050565b602081525f82518060208401528060208501604085015e5f604082850101526040601f19601f83011684010191505092915050565b8035600281900b8114610a51575f80fd5b919050565b5f805f805f806101208789031215610a6c575f80fd5b8635610a7781610784565b9550610a86886020890161079b565b945060c0870135610a9681610784565b9350610aa460e08801610a40565b925061010087013567ffffffffffffffff811115610ac0575f80fd5b610acc89828a016107c1565b979a9699509497509295939492505050565b5f805f805f806101608789031215610af4575f80fd5b8635610aff81610784565b9550610b0e886020890161079b565b9450610b1d8860c089016108d7565b9350610120870135925061014087013567ffffffffffffffff811115610ac0575f80fd5b5f805f805f806101208789031215610b57575f80fd5b8635610b6281610784565b9550610b71886020890161079b565b945060c0870135935060e0870135925061010087013567ffffffffffffffff811115610ac0575f80fd5b8151151581526101c081016020830151610bb9602084018215159052565b506040830151610bcd604084018215159052565b506060830151610be1606084018215159052565b506080830151610bf5608084018215159052565b5060a0830151610c0960a084018215159052565b5060c0830151610c1d60c084018215159052565b5060e0830151610c3160e084018215159052565b50610100830151610c4761010084018215159052565b50610120830151610c5d61012084018215159052565b50610140830151610c7361014084018215159052565b50610160830151610c8961016084018215159052565b50610180830151610c9f61018084018215159052565b506101a0830151610cb56101a084018215159052565b5092915050565b803562ffffff81168114610a51575f80fd5b5f60208284031215610cde575f80fd5b61055382610cbc565b60c081018335610cf681610784565b6001600160a01b031682526020840135610d0f81610784565b6001600160a01b0316602083015262ffffff610d2d60408601610cbc565b166040830152610d3f60608501610a40565b60020b60608301526080840135610d5581610784565b6001600160a01b0316608083015262ffffff9290921660a090910152919050565b634e487b7160e01b5f52601160045260245ffd5b6001600160801b038181168382160290811690818114610cb557610cb5610d76565b634e487b7160e01b5f52601260045260245ffd5b5f6001600160801b03831680610dd857610dd8610dac565b806001600160801b0384160491505092915050565b5f62ffffff831680610e0157610e01610dac565b8062ffffff84160491505092915050565b62ffffff8181168382160290811690818114610cb557610cb5610d76565b818382375f9101908152919050565b6001600160681b03818116838216019081111561055657610556610d76565b6001600160801b03818116838216019081111561055657610556610d76565b5f6001600160681b0382166001600160681b038103610e9e57610e9e610d76565b6001019291505056fea2646970667358221220282f8c4ff1f06c452e2179af6529763a6d225533aea3cb1cafa2bbc9a6e359b264736f6c634300081a0033",
        "sourceMap": "510:3663:95:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3122:235:94;;;;;;:::i;:::-;;:::i;:::-;;;-1:-1:-1;;;;;;1857:33:97;;;1839:52;;1827:2;1812:18;3122:235:94;;;;;;;;2134:379:95;;;;;;:::i;:::-;;:::i;932:38::-;;966:4;932:38;;;;;2896:8:97;2884:21;;;2866:40;;2854:2;2839:18;932:38:95;2722:190:97;2519:422:95;;;;;;:::i;:::-;;:::i;:::-;;;;-1:-1:-1;;;;;;4144:33:97;;;4126:52;;4209:2;4194:18;;4187:34;;;;4269:8;4257:21;4237:18;;;4230:49;4114:2;4099:18;2519:422:95;3892:393:97;3712:292:94;;;;;;:::i;:::-;;:::i;:::-;;;;-1:-1:-1;;;;;;5657:33:97;;;5639:52;;5722:2;5707:18;;5700:34;;;;5612:18;3712:292:94;5434:306:97;1018:138:93;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;643:36:95:-;;;;;-1:-1:-1;;;;;643:36:95;;;;;;-1:-1:-1;;;;;6744:47:97;;;6726:66;;6714:2;6699:18;643:36:95;6580:218:97;2644:190:94;;;;;;:::i;2947:282:95:-;;;;;;:::i;:::-;;:::i;:::-;;;;-1:-1:-1;;;;;;9014:33:97;;;8996:52;;9095:2;9084:22;;;;9079:2;9064:18;;9057:50;8969:18;2947:282:95;8826:287:97;4555:189:94;;;;;;:::i;1341:787:95:-;;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1492:629:95;;;;;;;;1546:4;1492:629;;;-1:-1:-1;1492:629:95;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1341:787;;;;;;;;:::i;840:41::-;;;;;-1:-1:-1;;;840:41:95;;-1:-1:-1;;;;;840:41:95;;;;;;-1:-1:-1;;;;;12104:41:97;;;12086:60;;12074:2;12059:18;840:41:95;11940:212:97;354:41:92;;;;;;;;-1:-1:-1;;;;;12343:55:97;;;12325:74;;12313:2;12298:18;354:41:92;12157:248:97;3122:235:94;3305:6;3330:20;;-1:-1:-1;;;3330:20:94;;;;;;;;;;;2134:379:95;2286:6;2409:22;:7;;;;;;;;:::i;:::-;:20;;1391:24:54;;564:8;1391:24;;1310:112;2409:22:95;2404:55;;2440:19;;-1:-1:-1;;;2440:19:95;;;;;;;;;;;2404:55;-1:-1:-1;;;;2134:379:95;;;;;;;:::o;2519:422::-;2735:6;2743:15;2760:6;2782:10;2795:8:::1;:6;:8::i;:::-;2813:40;::::0;-1:-1:-1;;;2813:40:95;;2782:21;;-1:-1:-1;;;;;;2813:11:95::1;:30;::::0;::::1;::::0;:40:::1;::::0;2844:3;;2782:21;;2813:40:::1;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;-1:-1:-1::0;;;;2871:24:95;830:1:82::1;::::0;-1:-1:-1;830:1:82;;-1:-1:-1;2519:422:95;-1:-1:-1;;;;;;;;;;2519:422:95:o;3712:292:94:-;3938:6;3946:12;3977:20;;-1:-1:-1;;;3977:20:94;;;;;;;;;;;1018:138:93;1097:12;784:10;-1:-1:-1;;;;;806:11:93;784:34;;780:63;;827:16;;-1:-1:-1;;;827:16:93;;;;;;;;;;;780:63;1128:21:::1;1144:4;;1128:15;:21::i;:::-;1121:28;;853:1;1018:138:::0;;;;:::o;2947:282:95:-;3130:6;3138;3156:21;:19;:21::i;:::-;-1:-1:-1;;;;3195:23:95;3220:1;;-1:-1:-1;2947:282:95;-1:-1:-1;;;;;;2947:282:95:o;3685:486::-;3726:6;3883:21;;3771:11;;3913:2;;3883:26;;-1:-1:-1;;;;;3883:21:95;3907:2;3883:26;:::i;:::-;3882:33;;;;:::i;:::-;-1:-1:-1;;;;;3871:44:95;:8;-1:-1:-1;;;;;3871:44:95;;3867:94;;;3938:12;3949:1;966:4;3938:12;:::i;:::-;3931:19;;;3685:486;:::o;3867:94::-;4062:21;;4091:2;;4062:25;;-1:-1:-1;;;;;4062:21:95;4086:1;4062:25;:::i;:::-;4061:32;;;;:::i;:::-;-1:-1:-1;;;;;4050:43:95;:8;-1:-1:-1;;;;;4050:43:95;;4046:93;;;4116:12;966:4;4127:1;4116:12;:::i;4046:93::-;966:4;4149:15;;;3685:486;:::o;1990:432:94:-;2071:12;2096;2110:23;2145:4;-1:-1:-1;;;;;2137:18:94;2156:4;;2137:24;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2095:66;;;;2175:7;2171:30;;;2191:10;-1:-1:-1;2184:17:94;;-1:-1:-1;2184:17:94;2171:30;2215:10;:17;2236:1;2215:22;2211:48;;2246:13;;-1:-1:-1;;;2246:13:94;;;;;;;;;;;2211:48;2394:10;2388:17;2383:2;2371:10;2367:19;2360:46;3278:401:95;3328:16;3602:26;3355:11;;3602:30;;-1:-1:-1;;;3602:26:95;;-1:-1:-1;;;;;3602:26:95;3631:1;3602:30;:::i;:::-;3547:26;;-1:-1:-1;;;;;3521:112:95;;;;3577:8;;3523:50;;-1:-1:-1;;;3547:26:95;;;;-1:-1:-1;;;;;3523:21:95;:50;:::i;:::-;3522:63;;;;:::i;:::-;3521:112;;;;:::i;:::-;3485:21;:148;;-1:-1:-1;;3485:148:95;-1:-1:-1;;;;;3485:148:95;;;;;;;;;;;-1:-1:-1;;;3644:28:95;;-1:-1:-1;;;;;3644:28:95;;:26;:28;;;:::i;:::-;;;;;;;;-1:-1:-1;;;;;3644:28:95;;;;;-1:-1:-1;;;;;3644:28:95;;;;;;;3318:361;3278:401::o;14:154:97:-;-1:-1:-1;;;;;93:5:97;89:54;82:5;79:65;69:93;;158:1;155;148:12;69:93;14:154;:::o;173:156::-;233:5;278:3;269:6;264:3;260:16;256:26;253:46;;;295:1;292;285:12;253:46;-1:-1:-1;317:6:97;173:156;-1:-1:-1;173:156:97:o;334:170::-;408:5;453:3;444:6;439:3;435:16;431:26;428:46;;;470:1;467;460:12;509:347;560:8;570:6;624:3;617:4;609:6;605:17;601:27;591:55;;642:1;639;632:12;591:55;-1:-1:-1;665:20:97;;708:18;697:30;;694:50;;;740:1;737;730:12;694:50;777:4;769:6;765:17;753:29;;829:3;822:4;813:6;805;801:19;797:30;794:39;791:59;;;846:1;843;836:12;791:59;509:347;;;;;:::o;861:829::-;1028:6;1036;1044;1052;1060;1113:3;1101:9;1092:7;1088:23;1084:33;1081:53;;;1130:1;1127;1120:12;1081:53;1169:9;1156:23;1188:31;1213:5;1188:31;:::i;:::-;1238:5;-1:-1:-1;1262:63:97;1317:7;1312:2;1297:18;;1262:63;:::i;:::-;1252:73;;1344:78;1414:7;1408:3;1397:9;1393:19;1344:78;:::i;:::-;1334:88;;1473:3;1462:9;1458:19;1445:33;1501:18;1493:6;1490:30;1487:50;;;1533:1;1530;1523:12;1487:50;1572:58;1622:7;1613:6;1602:9;1598:22;1572:58;:::i;:::-;861:829;;;;-1:-1:-1;861:829:97;;-1:-1:-1;1649:8:97;;1546:84;861:829;-1:-1:-1;;;861:829:97:o;1902:815::-;2027:6;2035;2043;2051;2059;2112:3;2100:9;2091:7;2087:23;2083:33;2080:53;;;2129:1;2126;2119:12;2080:53;2168:9;2155:23;2187:31;2212:5;2187:31;:::i;:::-;2237:5;-1:-1:-1;2261:63:97;2316:7;2311:2;2296:18;;2261:63;:::i;:::-;2251:73;;2376:3;2365:9;2361:19;2348:33;2390;2415:7;2390:33;:::i;:::-;2442:7;-1:-1:-1;2500:3:97;2485:19;;2472:33;2528:18;2517:30;;2514:50;;;2560:1;2557;2550:12;2917:158;2980:5;3025:2;3016:6;3011:3;3007:16;3003:25;3000:45;;;3041:1;3038;3031:12;3080:807;3236:6;3244;3252;3260;3268;3321:3;3309:9;3300:7;3296:23;3292:33;3289:53;;;3338:1;3335;3328:12;3289:53;3377:9;3364:23;3396:31;3421:5;3396:31;:::i;:::-;3446:5;-1:-1:-1;3470:63:97;3525:7;3520:2;3505:18;;3470:63;:::i;:::-;3460:73;;3552:67;3611:7;3605:3;3594:9;3590:19;3552:67;:::i;:::-;3542:77;;3670:3;3659:9;3655:19;3642:33;3698:18;3690:6;3687:30;3684:50;;;3730:1;3727;3720:12;4290:1139;4543:6;4551;4559;4567;4575;4583;4591;4644:3;4632:9;4623:7;4619:23;4615:33;4612:53;;;4661:1;4658;4651:12;4612:53;4700:9;4687:23;4719:31;4744:5;4719:31;:::i;:::-;4769:5;-1:-1:-1;4793:63:97;4848:7;4843:2;4828:18;;4793:63;:::i;:::-;4783:73;;4875:78;4945:7;4939:3;4928:9;4924:19;4875:78;:::i;:::-;4865:88;-1:-1:-1;5026:3:97;5011:19;;4998:33;;-1:-1:-1;5130:3:97;5115:19;;5102:33;;-1:-1:-1;5212:3:97;5197:19;;5184:33;5240:18;5229:30;;5226:50;;;5272:1;5269;5262:12;5226:50;5311:58;5361:7;5352:6;5341:9;5337:22;5311:58;:::i;:::-;4290:1139;;;;-1:-1:-1;4290:1139:97;;-1:-1:-1;4290:1139:97;;;;5285:84;;-1:-1:-1;;;4290:1139:97:o;5745:409::-;5815:6;5823;5876:2;5864:9;5855:7;5851:23;5847:32;5844:52;;;5892:1;5889;5882:12;5844:52;5932:9;5919:23;5965:18;5957:6;5954:30;5951:50;;;5997:1;5994;5987:12;5951:50;6036:58;6086:7;6077:6;6066:9;6062:22;6036:58;:::i;:::-;6113:8;;6010:84;;-1:-1:-1;5745:409:97;-1:-1:-1;;;;5745:409:97:o;6159:416::-;6306:2;6295:9;6288:21;6269:4;6338:6;6332:13;6381:6;6376:2;6365:9;6361:18;6354:34;6440:6;6435:2;6427:6;6423:15;6418:2;6407:9;6403:18;6397:50;6496:1;6491:2;6482:6;6471:9;6467:22;6463:31;6456:42;6566:2;6559;6555:7;6550:2;6542:6;6538:15;6534:29;6523:9;6519:45;6515:54;6507:62;;;6159:416;;;;:::o;6803:160::-;6869:20;;6929:1;6918:20;;;6908:31;;6898:59;;6953:1;6950;6943:12;6898:59;6803:160;;;:::o;6968:886::-;7100:6;7108;7116;7124;7132;7140;7193:3;7181:9;7172:7;7168:23;7164:33;7161:53;;;7210:1;7207;7200:12;7161:53;7249:9;7236:23;7268:31;7293:5;7268:31;:::i;:::-;7318:5;-1:-1:-1;7342:63:97;7397:7;7392:2;7377:18;;7342:63;:::i;:::-;7332:73;;7457:3;7446:9;7442:19;7429:33;7471;7496:7;7471:33;:::i;:::-;7523:7;-1:-1:-1;7549:37:97;7581:3;7566:19;;7549:37;:::i;:::-;7539:47;;7637:3;7626:9;7622:19;7609:33;7665:18;7657:6;7654:30;7651:50;;;7697:1;7694;7687:12;7651:50;7736:58;7786:7;7777:6;7766:9;7762:22;7736:58;:::i;:::-;6968:886;;;;-1:-1:-1;6968:886:97;;-1:-1:-1;6968:886:97;;7813:8;;6968:886;-1:-1:-1;;;6968:886:97:o;7859:962::-;8058:6;8066;8074;8082;8090;8098;8151:3;8139:9;8130:7;8126:23;8122:33;8119:53;;;8168:1;8165;8158:12;8119:53;8207:9;8194:23;8226:31;8251:5;8226:31;:::i;:::-;8276:5;-1:-1:-1;8300:63:97;8355:7;8350:2;8335:18;;8300:63;:::i;:::-;8290:73;;8382:67;8441:7;8435:3;8424:9;8420:19;8382:67;:::i;:::-;8372:77;-1:-1:-1;8522:3:97;8507:19;;8494:33;;-1:-1:-1;8604:3:97;8589:19;;8576:33;8632:18;8621:30;;8618:50;;;8664:1;8661;8654:12;9118:915;9252:6;9260;9268;9276;9284;9292;9345:3;9333:9;9324:7;9320:23;9316:33;9313:53;;;9362:1;9359;9352:12;9313:53;9401:9;9388:23;9420:31;9445:5;9420:31;:::i;:::-;9470:5;-1:-1:-1;9494:63:97;9549:7;9544:2;9529:18;;9494:63;:::i;:::-;9484:73;-1:-1:-1;9630:3:97;9615:19;;9602:33;;-1:-1:-1;9734:3:97;9719:19;;9706:33;;-1:-1:-1;9816:3:97;9801:19;;9788:33;9844:18;9833:30;;9830:50;;;9876:1;9873;9866:12;10134:1801;10357:13;;10108;10101:21;10089:34;;10328:3;10313:19;;10429:4;10421:6;10417:17;10411:24;10444:51;10489:4;10478:9;10474:20;10460:12;10108:13;10101:21;10089:34;;10038:91;10444:51;;10544:4;10536:6;10532:17;10526:24;10559:53;10606:4;10595:9;10591:20;10575:14;10108:13;10101:21;10089:34;;10038:91;10559:53;;10661:4;10653:6;10649:17;10643:24;10676:53;10723:4;10712:9;10708:20;10692:14;10108:13;10101:21;10089:34;;10038:91;10676:53;;10778:4;10770:6;10766:17;10760:24;10793:53;10840:4;10829:9;10825:20;10809:14;10108:13;10101:21;10089:34;;10038:91;10793:53;;10895:4;10887:6;10883:17;10877:24;10910:53;10957:4;10946:9;10942:20;10926:14;10108:13;10101:21;10089:34;;10038:91;10910:53;;11012:4;11004:6;11000:17;10994:24;11027:53;11074:4;11063:9;11059:20;11043:14;10108:13;10101:21;10089:34;;10038:91;11027:53;;11129:4;11121:6;11117:17;11111:24;11144:53;11191:4;11180:9;11176:20;11160:14;10108:13;10101:21;10089:34;;10038:91;11144:53;;11246:6;11238;11234:19;11228:26;11263:55;11310:6;11299:9;11295:22;11279:14;10108:13;10101:21;10089:34;;10038:91;11263:55;;11367:6;11359;11355:19;11349:26;11384:55;11431:6;11420:9;11416:22;11400:14;10108:13;10101:21;10089:34;;10038:91;11384:55;;11488:6;11480;11476:19;11470:26;11505:55;11552:6;11541:9;11537:22;11521:14;10108:13;10101:21;10089:34;;10038:91;11505:55;;11610:6;11602;11598:19;11592:26;11627:56;11675:6;11664:9;11660:22;11643:15;10108:13;10101:21;10089:34;;10038:91;11627:56;;11733:6;11725;11721:19;11715:26;11750:56;11798:6;11787:9;11783:22;11766:15;10108:13;10101:21;10089:34;;10038:91;11750:56;;11856:6;11848;11844:19;11838:26;11873:56;11921:6;11910:9;11906:22;11889:15;10108:13;10101:21;10089:34;;10038:91;11873:56;;10134:1801;;;;:::o;12410:161::-;12477:20;;12537:8;12526:20;;12516:31;;12506:59;;12561:1;12558;12551:12;12576:184;12634:6;12687:2;12675:9;12666:7;12662:23;12658:32;12655:52;;;12703:1;12700;12693:12;12655:52;12726:28;12744:9;12726:28;:::i;12765:1010::-;12979:3;12964:19;;13005:20;;13034:31;13005:20;13034:31;:::i;:::-;-1:-1:-1;;;;;13092:54:97;13074:73;;13196:4;13184:17;;13171:31;13211:33;13171:31;13211:33;:::i;:::-;-1:-1:-1;;;;;13282:56:97;13275:4;13260:20;;13253:86;13419:8;13381:36;13411:4;13399:17;;13381:36;:::i;:::-;13377:51;13370:4;13359:9;13355:20;13348:81;13481:35;13510:4;13502:6;13498:17;13481:35;:::i;:::-;13478:1;13467:50;13460:4;13449:9;13445:20;13438:80;13567:4;13559:6;13555:17;13542:31;13582:33;13607:7;13582:33;:::i;:::-;-1:-1:-1;;;;;13653:56:97;13646:4;13631:20;;13624:86;13759:8;13747:21;;;;13741:3;13726:19;;;13719:50;12765:1010;;-1:-1:-1;12765:1010:97:o;13780:127::-;13841:10;13836:3;13832:20;13829:1;13822:31;13872:4;13869:1;13862:15;13896:4;13893:1;13886:15;13912:317;-1:-1:-1;;;;;13997:42:97;;;14041;;;13993:91;14104:52;;;;14175:24;;;14165:58;;14203:18;;:::i;14234:127::-;14295:10;14290:3;14286:20;14283:1;14276:31;14326:4;14323:1;14316:15;14350:4;14347:1;14340:15;14366:227;14406:1;-1:-1:-1;;;;;14437:1:97;14433:42;14494:3;14484:37;;14501:18;;:::i;:::-;14583:3;-1:-1:-1;;;;;14543:1:97;14539:42;14535:52;14530:57;;;14366:227;;;;:::o;14598:174::-;14637:1;14671:8;14668:1;14664:16;14699:3;14689:37;;14706:18;;:::i;:::-;14762:3;14751:8;14748:1;14744:16;14740:26;14735:31;;;14598:174;;;;:::o;14777:238::-;14886:8;14861:16;;;14879;;;14857:39;14916:26;;;;14961:24;;;14951:58;;14989:18;;:::i;15020:271::-;15203:6;15195;15190:3;15177:33;15159:3;15229:16;;15254:13;;;15229:16;15020:271;-1:-1:-1;15020:271:97:o;15296:222::-;-1:-1:-1;;;;;15365:36:97;;;15403;;;15361:79;;15452:37;;15449:63;;;15492:18;;:::i;15523:240::-;-1:-1:-1;;;;;15592:42:97;;;15636;;;15588:91;;15691:43;;15688:69;;;15737:18;;:::i;15768:225::-;15807:3;-1:-1:-1;;;;;15844:5:97;15840:40;-1:-1:-1;;;;;15895:7:97;15892:41;15889:67;;15936:18;;:::i;:::-;15985:1;15972:15;;15768:225;-1:-1:-1;;15768:225:97:o",
        "linkReferences": {},
        "immutableReferences": {
            "55910": [
                {
                    "start": 919,
                    "length": 32
                },
                {
                    "start": 1126,
                    "length": 32
                },
                {
                    "start": 1291,
                    "length": 32
                }
            ]
        }
    },
    "methodIdentifiers": {
        "BASE_FEE()": "3d18651e",
        "afterAddLiquidity(address,(address,address,uint24,int24,address),(int24,int24,int256,bytes32),int256,int256,bytes)": "9f063efc",
        "afterDonate(address,(address,address,uint24,int24,address),uint256,uint256,bytes)": "e1b4af69",
        "afterInitialize(address,(address,address,uint24,int24,address),uint160,int24,bytes)": "a910f80f",
        "afterRemoveLiquidity(address,(address,address,uint24,int24,address),(int24,int24,int256,bytes32),int256,int256,bytes)": "6c2bbe7e",
        "afterSwap(address,(address,address,uint24,int24,address),(bool,int256,uint160),int256,bytes)": "b47b2fb1",
        "beforeAddLiquidity(address,(address,address,uint24,int24,address),(int24,int24,int256,bytes32),bytes)": "259982e5",
        "beforeDonate(address,(address,address,uint24,int24,address),uint256,uint256,bytes)": "b6a8b0fa",
        "beforeInitialize(address,(address,address,uint24,int24,address),uint160,bytes)": "3440d820",
        "beforeRemoveLiquidity(address,(address,address,uint24,int24,address),(int24,int24,int256,bytes32),bytes)": "21d0ee70",
        "beforeSwap(address,(address,address,uint24,int24,address),(bool,int256,uint160),bytes)": "575e24b4",
        "getHookPermissions()": "c4e833ce",
        "movingAverageGasPrice()": "9a161daa",
        "movingAverageGasPriceCount()": "cd2c70e8",
        "poolManager()": "dc4c90d3",
        "unlockCallback(bytes)": "91dd7346"
    },
    "rawMetadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract IPoolManager\",\"name\":\"_poolManager\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"HookNotImplemented\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidPool\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"LockFailure\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MustUseDynamicFee\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotPoolManager\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotSelf\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"BASE_FEE\",\"outputs\":[{\"internalType\":\"uint24\",\"name\":\"\",\"type\":\"uint24\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"Currency\",\"name\":\"currency0\",\"type\":\"address\"},{\"internalType\":\"Currency\",\"name\":\"currency1\",\"type\":\"address\"},{\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"},{\"internalType\":\"int24\",\"name\":\"tickSpacing\",\"type\":\"int24\"},{\"internalType\":\"contract IHooks\",\"name\":\"hooks\",\"type\":\"address\"}],\"internalType\":\"struct PoolKey\",\"name\":\"\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"},{\"internalType\":\"int256\",\"name\":\"liquidityDelta\",\"type\":\"int256\"},{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"}],\"internalType\":\"struct IPoolManager.ModifyLiquidityParams\",\"name\":\"\",\"type\":\"tuple\"},{\"internalType\":\"BalanceDelta\",\"name\":\"\",\"type\":\"int256\"},{\"internalType\":\"BalanceDelta\",\"name\":\"\",\"type\":\"int256\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"afterAddLiquidity\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"},{\"internalType\":\"BalanceDelta\",\"name\":\"\",\"type\":\"int256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"Currency\",\"name\":\"currency0\",\"type\":\"address\"},{\"internalType\":\"Currency\",\"name\":\"currency1\",\"type\":\"address\"},{\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"},{\"internalType\":\"int24\",\"name\":\"tickSpacing\",\"type\":\"int24\"},{\"internalType\":\"contract IHooks\",\"name\":\"hooks\",\"type\":\"address\"}],\"internalType\":\"struct PoolKey\",\"name\":\"\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"afterDonate\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"Currency\",\"name\":\"currency0\",\"type\":\"address\"},{\"internalType\":\"Currency\",\"name\":\"currency1\",\"type\":\"address\"},{\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"},{\"internalType\":\"int24\",\"name\":\"tickSpacing\",\"type\":\"int24\"},{\"internalType\":\"contract IHooks\",\"name\":\"hooks\",\"type\":\"address\"}],\"internalType\":\"struct PoolKey\",\"name\":\"\",\"type\":\"tuple\"},{\"internalType\":\"uint160\",\"name\":\"\",\"type\":\"uint160\"},{\"internalType\":\"int24\",\"name\":\"\",\"type\":\"int24\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"afterInitialize\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"Currency\",\"name\":\"currency0\",\"type\":\"address\"},{\"internalType\":\"Currency\",\"name\":\"currency1\",\"type\":\"address\"},{\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"},{\"internalType\":\"int24\",\"name\":\"tickSpacing\",\"type\":\"int24\"},{\"internalType\":\"contract IHooks\",\"name\":\"hooks\",\"type\":\"address\"}],\"internalType\":\"struct PoolKey\",\"name\":\"\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"},{\"internalType\":\"int256\",\"name\":\"liquidityDelta\",\"type\":\"int256\"},{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"}],\"internalType\":\"struct IPoolManager.ModifyLiquidityParams\",\"name\":\"\",\"type\":\"tuple\"},{\"internalType\":\"BalanceDelta\",\"name\":\"\",\"type\":\"int256\"},{\"internalType\":\"BalanceDelta\",\"name\":\"\",\"type\":\"int256\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"afterRemoveLiquidity\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"},{\"internalType\":\"BalanceDelta\",\"name\":\"\",\"type\":\"int256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"Currency\",\"name\":\"currency0\",\"type\":\"address\"},{\"internalType\":\"Currency\",\"name\":\"currency1\",\"type\":\"address\"},{\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"},{\"internalType\":\"int24\",\"name\":\"tickSpacing\",\"type\":\"int24\"},{\"internalType\":\"contract IHooks\",\"name\":\"hooks\",\"type\":\"address\"}],\"internalType\":\"struct PoolKey\",\"name\":\"\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"bool\",\"name\":\"zeroForOne\",\"type\":\"bool\"},{\"internalType\":\"int256\",\"name\":\"amountSpecified\",\"type\":\"int256\"},{\"internalType\":\"uint160\",\"name\":\"sqrtPriceLimitX96\",\"type\":\"uint160\"}],\"internalType\":\"struct IPoolManager.SwapParams\",\"name\":\"\",\"type\":\"tuple\"},{\"internalType\":\"BalanceDelta\",\"name\":\"\",\"type\":\"int256\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"afterSwap\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"},{\"internalType\":\"int128\",\"name\":\"\",\"type\":\"int128\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"Currency\",\"name\":\"currency0\",\"type\":\"address\"},{\"internalType\":\"Currency\",\"name\":\"currency1\",\"type\":\"address\"},{\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"},{\"internalType\":\"int24\",\"name\":\"tickSpacing\",\"type\":\"int24\"},{\"internalType\":\"contract IHooks\",\"name\":\"hooks\",\"type\":\"address\"}],\"internalType\":\"struct PoolKey\",\"name\":\"\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"},{\"internalType\":\"int256\",\"name\":\"liquidityDelta\",\"type\":\"int256\"},{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"}],\"internalType\":\"struct IPoolManager.ModifyLiquidityParams\",\"name\":\"\",\"type\":\"tuple\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"beforeAddLiquidity\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"Currency\",\"name\":\"currency0\",\"type\":\"address\"},{\"internalType\":\"Currency\",\"name\":\"currency1\",\"type\":\"address\"},{\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"},{\"internalType\":\"int24\",\"name\":\"tickSpacing\",\"type\":\"int24\"},{\"internalType\":\"contract IHooks\",\"name\":\"hooks\",\"type\":\"address\"}],\"internalType\":\"struct PoolKey\",\"name\":\"\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"beforeDonate\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"Currency\",\"name\":\"currency0\",\"type\":\"address\"},{\"internalType\":\"Currency\",\"name\":\"currency1\",\"type\":\"address\"},{\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"},{\"internalType\":\"int24\",\"name\":\"tickSpacing\",\"type\":\"int24\"},{\"internalType\":\"contract IHooks\",\"name\":\"hooks\",\"type\":\"address\"}],\"internalType\":\"struct PoolKey\",\"name\":\"key\",\"type\":\"tuple\"},{\"internalType\":\"uint160\",\"name\":\"\",\"type\":\"uint160\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"beforeInitialize\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"Currency\",\"name\":\"currency0\",\"type\":\"address\"},{\"internalType\":\"Currency\",\"name\":\"currency1\",\"type\":\"address\"},{\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"},{\"internalType\":\"int24\",\"name\":\"tickSpacing\",\"type\":\"int24\"},{\"internalType\":\"contract IHooks\",\"name\":\"hooks\",\"type\":\"address\"}],\"internalType\":\"struct PoolKey\",\"name\":\"\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"},{\"internalType\":\"int256\",\"name\":\"liquidityDelta\",\"type\":\"int256\"},{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"}],\"internalType\":\"struct IPoolManager.ModifyLiquidityParams\",\"name\":\"\",\"type\":\"tuple\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"beforeRemoveLiquidity\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"Currency\",\"name\":\"currency0\",\"type\":\"address\"},{\"internalType\":\"Currency\",\"name\":\"currency1\",\"type\":\"address\"},{\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"},{\"internalType\":\"int24\",\"name\":\"tickSpacing\",\"type\":\"int24\"},{\"internalType\":\"contract IHooks\",\"name\":\"hooks\",\"type\":\"address\"}],\"internalType\":\"struct PoolKey\",\"name\":\"key\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"bool\",\"name\":\"zeroForOne\",\"type\":\"bool\"},{\"internalType\":\"int256\",\"name\":\"amountSpecified\",\"type\":\"int256\"},{\"internalType\":\"uint160\",\"name\":\"sqrtPriceLimitX96\",\"type\":\"uint160\"}],\"internalType\":\"struct IPoolManager.SwapParams\",\"name\":\"\",\"type\":\"tuple\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"beforeSwap\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"},{\"internalType\":\"BeforeSwapDelta\",\"name\":\"\",\"type\":\"int256\"},{\"internalType\":\"uint24\",\"name\":\"\",\"type\":\"uint24\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getHookPermissions\",\"outputs\":[{\"components\":[{\"internalType\":\"bool\",\"name\":\"beforeInitialize\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"afterInitialize\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"beforeAddLiquidity\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"afterAddLiquidity\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"beforeRemoveLiquidity\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"afterRemoveLiquidity\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"beforeSwap\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"afterSwap\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"beforeDonate\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"afterDonate\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"beforeSwapReturnDelta\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"afterSwapReturnDelta\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"afterAddLiquidityReturnDelta\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"afterRemoveLiquidityReturnDelta\",\"type\":\"bool\"}],\"internalType\":\"struct Hooks.Permissions\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"movingAverageGasPrice\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"movingAverageGasPriceCount\",\"outputs\":[{\"internalType\":\"uint104\",\"name\":\"\",\"type\":\"uint104\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"poolManager\",\"outputs\":[{\"internalType\":\"contract IPoolManager\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"unlockCallback\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"afterAddLiquidity(address,(address,address,uint24,int24,address),(int24,int24,int256,bytes32),int256,int256,bytes)\":{\"params\":{\"delta\":\"The caller's balance delta after adding liquidity; the sum of principal delta, fees accrued, and hook delta\",\"feesAccrued\":\"The fees accrued since the last time fees were collected from this position\",\"hookData\":\"Arbitrary data handed into the PoolManager by the liquidity provider to be passed on to the hook\",\"key\":\"The key for the pool\",\"params\":\"The parameters for adding liquidity\",\"sender\":\"The initial msg.sender for the add liquidity call\"},\"returns\":{\"_0\":\"bytes4 The function selector for the hook\",\"_1\":\"BalanceDelta The hook's delta in token0 and token1. Positive: the hook is owed/took currency, negative: the hook owes/sent currency\"}},\"afterDonate(address,(address,address,uint24,int24,address),uint256,uint256,bytes)\":{\"params\":{\"amount0\":\"The amount of token0 being donated\",\"amount1\":\"The amount of token1 being donated\",\"hookData\":\"Arbitrary data handed into the PoolManager by the donor to be be passed on to the hook\",\"key\":\"The key for the pool\",\"sender\":\"The initial msg.sender for the donate call\"},\"returns\":{\"_0\":\"bytes4 The function selector for the hook\"}},\"afterInitialize(address,(address,address,uint24,int24,address),uint160,int24,bytes)\":{\"params\":{\"hookData\":\"Arbitrary data handed into the PoolManager by the initializer to be be passed on to the hook\",\"key\":\"The key for the pool being initialized\",\"sender\":\"The initial msg.sender for the initialize call\",\"sqrtPriceX96\":\"The sqrt(price) of the pool as a Q64.96\",\"tick\":\"The current tick after the state of a pool is initialized\"},\"returns\":{\"_0\":\"bytes4 The function selector for the hook\"}},\"afterRemoveLiquidity(address,(address,address,uint24,int24,address),(int24,int24,int256,bytes32),int256,int256,bytes)\":{\"params\":{\"delta\":\"The caller's balance delta after adding liquidity; the sum of principal delta, fees accrued, and hook delta\",\"feesAccrued\":\"The fees accrued since the last time fees were collected from this position\",\"hookData\":\"Arbitrary data handed into the PoolManager by the liquidity provider to be be passed on to the hook\",\"key\":\"The key for the pool\",\"params\":\"The parameters for removing liquidity\",\"sender\":\"The initial msg.sender for the remove liquidity call\"},\"returns\":{\"_0\":\"bytes4 The function selector for the hook\",\"_1\":\"BalanceDelta The hook's delta in token0 and token1. Positive: the hook is owed/took currency, negative: the hook owes/sent currency\"}},\"afterSwap(address,(address,address,uint24,int24,address),(bool,int256,uint160),int256,bytes)\":{\"params\":{\"delta\":\"The amount owed to the caller (positive) or owed to the pool (negative)\",\"hookData\":\"Arbitrary data handed into the PoolManager by the swapper to be be passed on to the hook\",\"key\":\"The key for the pool\",\"params\":\"The parameters for the swap\",\"sender\":\"The initial msg.sender for the swap call\"},\"returns\":{\"_0\":\"bytes4 The function selector for the hook\",\"_1\":\"int128 The hook's delta in unspecified currency. Positive: the hook is owed/took currency, negative: the hook owes/sent currency\"}},\"beforeAddLiquidity(address,(address,address,uint24,int24,address),(int24,int24,int256,bytes32),bytes)\":{\"params\":{\"hookData\":\"Arbitrary data handed into the PoolManager by the liquidity provider to be passed on to the hook\",\"key\":\"The key for the pool\",\"params\":\"The parameters for adding liquidity\",\"sender\":\"The initial msg.sender for the add liquidity call\"},\"returns\":{\"_0\":\"bytes4 The function selector for the hook\"}},\"beforeDonate(address,(address,address,uint24,int24,address),uint256,uint256,bytes)\":{\"params\":{\"amount0\":\"The amount of token0 being donated\",\"amount1\":\"The amount of token1 being donated\",\"hookData\":\"Arbitrary data handed into the PoolManager by the donor to be be passed on to the hook\",\"key\":\"The key for the pool\",\"sender\":\"The initial msg.sender for the donate call\"},\"returns\":{\"_0\":\"bytes4 The function selector for the hook\"}},\"beforeRemoveLiquidity(address,(address,address,uint24,int24,address),(int24,int24,int256,bytes32),bytes)\":{\"params\":{\"hookData\":\"Arbitrary data handed into the PoolManager by the liquidity provider to be be passed on to the hook\",\"key\":\"The key for the pool\",\"params\":\"The parameters for removing liquidity\",\"sender\":\"The initial msg.sender for the remove liquidity call\"},\"returns\":{\"_0\":\"bytes4 The function selector for the hook\"}},\"getHookPermissions()\":{\"details\":\"Used at deployment to validate the address correctly represents the expected permissions\"},\"unlockCallback(bytes)\":{\"details\":\"We force the onlyPoolManager modifier by exposing a virtual function after the onlyPoolManager check.\",\"params\":{\"data\":\"The data that was passed to the call to unlock\"},\"returns\":{\"_0\":\"Any data that you want to be returned from the unlock call\"}}},\"version\":1},\"userdoc\":{\"errors\":{\"NotPoolManager()\":[{\"notice\":\"Thrown when calling unlockCallback where the caller is not PoolManager\"}]},\"kind\":\"user\",\"methods\":{\"afterAddLiquidity(address,(address,address,uint24,int24,address),(int24,int24,int256,bytes32),int256,int256,bytes)\":{\"notice\":\"The hook called after liquidity is added\"},\"afterDonate(address,(address,address,uint24,int24,address),uint256,uint256,bytes)\":{\"notice\":\"The hook called after donate\"},\"afterInitialize(address,(address,address,uint24,int24,address),uint160,int24,bytes)\":{\"notice\":\"The hook called after the state of a pool is initialized\"},\"afterRemoveLiquidity(address,(address,address,uint24,int24,address),(int24,int24,int256,bytes32),int256,int256,bytes)\":{\"notice\":\"The hook called after liquidity is removed\"},\"afterSwap(address,(address,address,uint24,int24,address),(bool,int256,uint160),int256,bytes)\":{\"notice\":\"The hook called after a swap\"},\"beforeAddLiquidity(address,(address,address,uint24,int24,address),(int24,int24,int256,bytes32),bytes)\":{\"notice\":\"The hook called before liquidity is added\"},\"beforeDonate(address,(address,address,uint24,int24,address),uint256,uint256,bytes)\":{\"notice\":\"The hook called before donate\"},\"beforeRemoveLiquidity(address,(address,address,uint24,int24,address),(int24,int24,int256,bytes32),bytes)\":{\"notice\":\"The hook called before liquidity is removed\"},\"getHookPermissions()\":{\"notice\":\"Returns a struct of permissions to signal which hook functions are to be implemented\"},\"poolManager()\":{\"notice\":\"The Uniswap v4 PoolManager contract\"},\"unlockCallback(bytes)\":{\"notice\":\"Called by the pool manager on `msg.sender` when the manager is unlocked\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/GasPriceFeesHook.sol\":\"GasPriceFeesHook\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":800},\"remappings\":[\":@ensdomains/=lib/v4-periphery/lib/v4-core/node_modules/@ensdomains/\",\":@openzeppelin/=lib/v4-periphery/lib/v4-core/lib/openzeppelin-contracts/\",\":@openzeppelin/contracts/=lib/v4-periphery/lib/v4-core/lib/openzeppelin-contracts/contracts/\",\":@uniswap/v4-core/=lib/v4-periphery/lib/v4-core/\",\":ds-test/=lib/v4-periphery/lib/v4-core/lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/v4-periphery/lib/v4-core/lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-gas-snapshot/=lib/v4-periphery/lib/v4-core/lib/forge-gas-snapshot/src/\",\":forge-std/=lib/forge-std/src/\",\":hardhat/=lib/v4-periphery/lib/v4-core/node_modules/hardhat/\",\":openzeppelin-contracts/=lib/v4-periphery/lib/v4-core/lib/openzeppelin-contracts/\",\":permit2/=lib/v4-periphery/lib/permit2/\",\":solmate/=lib/v4-periphery/lib/v4-core/lib/solmate/\",\":v4-core/=lib/v4-periphery/lib/v4-core/src/\",\":v4-periphery/=lib/v4-periphery/\"]},\"sources\":{\"lib/v4-periphery/lib/v4-core/src/interfaces/IExtsload.sol\":{\"keccak256\":\"0x80b53ca4907d6f0088c3b931f2b72cad1dc4615a95094d96bd0fb8dff8d5ba43\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://375c69148622aab7a3537d5fd37d373a8e9731022c8d87bdaee46233b0a99fe1\",\"dweb:/ipfs/QmXFjdoYRxsA5B1kyuxEXgNf3FBoL1zPvy26Qy8EtpdFRN\"]},\"lib/v4-periphery/lib/v4-core/src/interfaces/IExttload.sol\":{\"keccak256\":\"0xc6b68283ebd8d1c789df536756726eed51c589134bb20821b236a0d22a135937\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://294394f72dfc219689209f4130d85601dfd0d63c8d47578050d312db70f9b6c8\",\"dweb:/ipfs/QmTDMQ3oxCGHgEBU48a3Lp4S1rRjc8vVCxkhE5ZNej1bsY\"]},\"lib/v4-periphery/lib/v4-core/src/interfaces/IHooks.sol\":{\"keccak256\":\"0x2ed03c5c22b1b81490788f54599beb3b26b834e608f6351166f60069f5655671\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://aabb296e1109ccc792e444c63d96c04f75f74275fbd917083b65aa18cc9eb662\",\"dweb:/ipfs/QmWjVWjC831FM6W9yk7ys8vmMesmHb3XrskvTzkFM8q7pK\"]},\"lib/v4-periphery/lib/v4-core/src/interfaces/IPoolManager.sol\":{\"keccak256\":\"0x859e8c7794fc04a72e53d4e9d2b89ae5517f71409a667fc2f4db054c9d121168\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://690097a7065d05ba5641b4a12c91a561c566209313307b5d74d989bcc00c3221\",\"dweb:/ipfs/QmbxiRHURJhcUMJ5NfZg3V1BgVowPQQ263UH43De4DvEBj\"]},\"lib/v4-periphery/lib/v4-core/src/interfaces/IProtocolFeeController.sol\":{\"keccak256\":\"0xc2d7f3605da9767e36cf25d4d4fa9b95663a6659e26ce28cf29b8b88acb79a4c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c7a43cda35b8a9254ed3e46cfd8649361f09121d17ef554bd3d190b9a8d57cc6\",\"dweb:/ipfs/QmRBDQoqCWddH5hY1JdxMyYtY8jMZhWAwtuFJBc3r8V31G\"]},\"lib/v4-periphery/lib/v4-core/src/interfaces/IProtocolFees.sol\":{\"keccak256\":\"0x6274aeb7a4f03734502f3b1b5494f7738d3f3adfa3a15aebf383ce1d2698e971\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ed366e17dc42f9b230b8b7bb27e2c304ea71b7edb11b5738f75a1090f34648f4\",\"dweb:/ipfs/QmVqZbCQ46B5huP8LsDcxbquqCdd74uvhe3F47KqRLAGeq\"]},\"lib/v4-periphery/lib/v4-core/src/interfaces/callback/IUnlockCallback.sol\":{\"keccak256\":\"0x58c82f2bd9d7c097ed09bd0991fedc403b0ec270eb3d0158bfb095c06a03d719\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://91168ca26a10980df2cdc3fbfe8ddf372c002b7ef19e3c59a0c9870d64198f1b\",\"dweb:/ipfs/QmUSpaM825vd1SwvF38esgbdLgYiPwefKaFERTWvUi6uSK\"]},\"lib/v4-periphery/lib/v4-core/src/interfaces/external/IERC20Minimal.sol\":{\"keccak256\":\"0xc1c23330c1511ecfd45c67a683962b4e2555b82f1dacd40cc8b46ae5a6e250e7\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://5ce10b7970482a65f9e9a365b810eeb154a5d4a8229a26653028d84b9622a410\",\"dweb:/ipfs/QmTSwXxZ2FTkM5duBZgbpFs8SRVDR5NPAnW4YimeDhb1s8\"]},\"lib/v4-periphery/lib/v4-core/src/interfaces/external/IERC6909Claims.sol\":{\"keccak256\":\"0xa586f345739e52b0488a0fe40b6e375cce67fdd25758408b0efcb5133ad96a48\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e8c557b7e52abdbbd82e415a1acc27921446a7fd090b7d4877e52be72619547f\",\"dweb:/ipfs/QmXE2KNPbXmGX8BQF3ei6zhzRTnhoTQg39XmqMnkhbr6QK\"]},\"lib/v4-periphery/lib/v4-core/src/libraries/CustomRevert.sol\":{\"keccak256\":\"0x745ca9c258d00fae52f293af065471f1bc1099de1bea4ceb52e312240ac52895\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://71eee0aa4e395f2c7fce16760d6547c6a12a6fd3dc56b94f4d44480fed538495\",\"dweb:/ipfs/QmPfJBiHzeVe9sx3PZ27jWrzJqF9atvevpYBC9j3Ekz9TG\"]},\"lib/v4-periphery/lib/v4-core/src/libraries/Hooks.sol\":{\"keccak256\":\"0x33b963d98de5eadd5b42a4d323ce5d25d87432d8ed538096ecca8d0b77e0d088\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ef49b43fe2fa6a2c6e44a1f8d7712ce4e13c7656da5ec35e73eb644707e5ed1\",\"dweb:/ipfs/QmZCisxCf9a1zxZvZADk1EN8JyFXZ1XZ4B8s1PpwEMugJX\"]},\"lib/v4-periphery/lib/v4-core/src/libraries/LPFeeLibrary.sol\":{\"keccak256\":\"0x9cb794c60d4c867732b20a6cd14b965bf3a63df1161eb3cd28e2c9d0447db46f\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://3d987ee5738f74c3fb091db503b44ad6651e4e47554623182e0ecbe696bd7382\",\"dweb:/ipfs/QmW7Rt5qjD4mmRnvYcT2Fj7VPzBm1eT9w15WUHtfWmKEPh\"]},\"lib/v4-periphery/lib/v4-core/src/libraries/ParseBytes.sol\":{\"keccak256\":\"0xf0795198d1e651b0b33fd1708d80a14f501bb2a1486905676d35f364e880f579\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://5aea527fcec51d7274f0c189dc2479a6aa708fc91857187a4d7db46bb1d6c7a8\",\"dweb:/ipfs/QmUTrwTPSZ7EHBaTyfAA78rZVP17iQzmAmvDcQ8GhDRAEf\"]},\"lib/v4-periphery/lib/v4-core/src/libraries/SafeCast.sol\":{\"keccak256\":\"0x8060d21c4d54a431113f9a594b860e6a9bf1f346d0c7c02dfafe9847dd8a0591\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://e7f71b73d82965d1d949f388060f6f0daab7cd14718e260682918ec6fa0253b9\",\"dweb:/ipfs/QmP85jtFrCeV6Y8zuJfrrgiMy1shX3tHWs2wX7DMAB7Lft\"]},\"lib/v4-periphery/lib/v4-core/src/types/BalanceDelta.sol\":{\"keccak256\":\"0xa719c8fe51e0a9524280178f19f6851bcc3b3b60e73618f3d60905d35ae5569f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7436928dc9de35c6c7c5c636cb51adaf295cfd590da83b19a004ae33cbec9ef9\",\"dweb:/ipfs/QmRJ9yZkUpzk4433GX3LgVVL8jwpbSYSUwXcucKisf3v4H\"]},\"lib/v4-periphery/lib/v4-core/src/types/BeforeSwapDelta.sol\":{\"keccak256\":\"0x2a774312d91285313d569da1a718c909655da5432310417692097a1d4dc83a78\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a2c7a0379955cff9c17ab9e61f95e42909aa5947c22740f86ce940d09856f782\",\"dweb:/ipfs/QmaAuo8UBYXsGrVuKh8iRoAAdqwtg1jDq515cW1ZRP5m9K\"]},\"lib/v4-periphery/lib/v4-core/src/types/Currency.sol\":{\"keccak256\":\"0x35c74eae038ecfbbae48b0e13f2b9a43ac6d8da4847ffa0f1482e4e2d455ee74\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cadb54f9c89b6970583148e503a23c7b654aff1f3e6a0da57705c54e5b03b39f\",\"dweb:/ipfs/Qma3CKKwyzGwzHN4Z9HDJ4Q7J5VfbN594i8F2DTGWTMWcB\"]},\"lib/v4-periphery/lib/v4-core/src/types/PoolId.sol\":{\"keccak256\":\"0x308311916ea0f5c2fd878b6a2751eb223d170a69e33f601fae56dfe3c5d392af\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://669c2cd7ac17690b5d8831e0bda72822376c3a04b36afed6d31df4d75fe60918\",\"dweb:/ipfs/QmT6EpkxqU8VF3WsgrZ66F3s1cCQRffR95z1HDYZz7ph6y\"]},\"lib/v4-periphery/lib/v4-core/src/types/PoolKey.sol\":{\"keccak256\":\"0xf89856e0580d7a4856d3187a76858377ccee9d59702d230c338d84388221b786\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6f3118fa189025695c37fdf0bdd1190f085ad097484d3c88cf4c56d1db65f639\",\"dweb:/ipfs/QmamXpgtB8GV1CaFLvqefPWSoikLDhMk1yU4heBnVzU8gi\"]},\"lib/v4-periphery/src/base/ImmutableState.sol\":{\"keccak256\":\"0x12b175e4ed6d31da545e3b6c9930901568c99d153b1e51044d32e88f42b9b633\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://f4347899e0b3bfd66e8d79652b1a14a62a02d16bfece63a40c6efe0e5656c384\",\"dweb:/ipfs/QmSbbT8fefHstA72BqF7SDooDtmhs79dR8T6pWv8LxKU2L\"]},\"lib/v4-periphery/src/base/SafeCallback.sol\":{\"keccak256\":\"0x6284bd1d1fbe78a901e63dc70720e2bf19de6758347b050f8ba2b155e73325c5\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://3afb423a3c0f8b5f6436680ff3cde9247924d442a9720dc39b2b07a352607187\",\"dweb:/ipfs/QmaT5bMwiiqkp8KWUnHjWJz55Ah9vbpASzJagg9riHbpTf\"]},\"lib/v4-periphery/src/base/hooks/BaseHook.sol\":{\"keccak256\":\"0xe6522a26dfe7b86aea6a84670b502890ede1e96302d641f231906897b2172f2f\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://19d2d2678ca32e81af3419bc4640833fc40e155b6757bb87edb0182f181c7fe7\",\"dweb:/ipfs/QmPGpN6p78SrRW79hX16sM572uD4Fb2hJF6Bv58M9LYNpQ\"]},\"src/GasPriceFeesHook.sol\":{\"keccak256\":\"0x13b48045f339a51f93d59f62f8535f59fd038e8e33ec33d320e2333c93c7384c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://22bfe9e622dd3123f0cf8243237a397bab4393405c1e284399cbc93c7b2e7239\",\"dweb:/ipfs/QmbWTkcgfDSYQCj3a6DzoLMSUVyo4vrKBaeQCReagSrJXH\"]}},\"version\":1}",
    "metadata": {
        "compiler": {
            "version": "0.8.26+commit.8a97fa7a"
        },
        "language": "Solidity",
        "output": {
            "abi": [
                {
                    "inputs": [
                        {
                            "internalType": "contract IPoolManager",
                            "name": "_poolManager",
                            "type": "address"
                        }
                    ],
                    "stateMutability": "nonpayable",
                    "type": "constructor"
                },
                {
                    "inputs": [],
                    "type": "error",
                    "name": "HookNotImplemented"
                },
                {
                    "inputs": [],
                    "type": "error",
                    "name": "InvalidPool"
                },
                {
                    "inputs": [],
                    "type": "error",
                    "name": "LockFailure"
                },
                {
                    "inputs": [],
                    "type": "error",
                    "name": "MustUseDynamicFee"
                },
                {
                    "inputs": [],
                    "type": "error",
                    "name": "NotPoolManager"
                },
                {
                    "inputs": [],
                    "type": "error",
                    "name": "NotSelf"
                },
                {
                    "inputs": [],
                    "stateMutability": "view",
                    "type": "function",
                    "name": "BASE_FEE",
                    "outputs": [
                        {
                            "internalType": "uint24",
                            "name": "",
                            "type": "uint24"
                        }
                    ]
                },
                {
                    "inputs": [
                        {
                            "internalType": "address",
                            "name": "",
                            "type": "address"
                        },
                        {
                            "internalType": "struct PoolKey",
                            "name": "",
                            "type": "tuple",
                            "components": [
                                {
                                    "internalType": "Currency",
                                    "name": "currency0",
                                    "type": "address"
                                },
                                {
                                    "internalType": "Currency",
                                    "name": "currency1",
                                    "type": "address"
                                },
                                {
                                    "internalType": "uint24",
                                    "name": "fee",
                                    "type": "uint24"
                                },
                                {
                                    "internalType": "int24",
                                    "name": "tickSpacing",
                                    "type": "int24"
                                },
                                {
                                    "internalType": "contract IHooks",
                                    "name": "hooks",
                                    "type": "address"
                                }
                            ]
                        },
                        {
                            "internalType": "struct IPoolManager.ModifyLiquidityParams",
                            "name": "",
                            "type": "tuple",
                            "components": [
                                {
                                    "internalType": "int24",
                                    "name": "tickLower",
                                    "type": "int24"
                                },
                                {
                                    "internalType": "int24",
                                    "name": "tickUpper",
                                    "type": "int24"
                                },
                                {
                                    "internalType": "int256",
                                    "name": "liquidityDelta",
                                    "type": "int256"
                                },
                                {
                                    "internalType": "bytes32",
                                    "name": "salt",
                                    "type": "bytes32"
                                }
                            ]
                        },
                        {
                            "internalType": "BalanceDelta",
                            "name": "",
                            "type": "int256"
                        },
                        {
                            "internalType": "BalanceDelta",
                            "name": "",
                            "type": "int256"
                        },
                        {
                            "internalType": "bytes",
                            "name": "",
                            "type": "bytes"
                        }
                    ],
                    "stateMutability": "nonpayable",
                    "type": "function",
                    "name": "afterAddLiquidity",
                    "outputs": [
                        {
                            "internalType": "bytes4",
                            "name": "",
                            "type": "bytes4"
                        },
                        {
                            "internalType": "BalanceDelta",
                            "name": "",
                            "type": "int256"
                        }
                    ]
                },
                {
                    "inputs": [
                        {
                            "internalType": "address",
                            "name": "",
                            "type": "address"
                        },
                        {
                            "internalType": "struct PoolKey",
                            "name": "",
                            "type": "tuple",
                            "components": [
                                {
                                    "internalType": "Currency",
                                    "name": "currency0",
                                    "type": "address"
                                },
                                {
                                    "internalType": "Currency",
                                    "name": "currency1",
                                    "type": "address"
                                },
                                {
                                    "internalType": "uint24",
                                    "name": "fee",
                                    "type": "uint24"
                                },
                                {
                                    "internalType": "int24",
                                    "name": "tickSpacing",
                                    "type": "int24"
                                },
                                {
                                    "internalType": "contract IHooks",
                                    "name": "hooks",
                                    "type": "address"
                                }
                            ]
                        },
                        {
                            "internalType": "uint256",
                            "name": "",
                            "type": "uint256"
                        },
                        {
                            "internalType": "uint256",
                            "name": "",
                            "type": "uint256"
                        },
                        {
                            "internalType": "bytes",
                            "name": "",
                            "type": "bytes"
                        }
                    ],
                    "stateMutability": "nonpayable",
                    "type": "function",
                    "name": "afterDonate",
                    "outputs": [
                        {
                            "internalType": "bytes4",
                            "name": "",
                            "type": "bytes4"
                        }
                    ]
                },
                {
                    "inputs": [
                        {
                            "internalType": "address",
                            "name": "",
                            "type": "address"
                        },
                        {
                            "internalType": "struct PoolKey",
                            "name": "",
                            "type": "tuple",
                            "components": [
                                {
                                    "internalType": "Currency",
                                    "name": "currency0",
                                    "type": "address"
                                },
                                {
                                    "internalType": "Currency",
                                    "name": "currency1",
                                    "type": "address"
                                },
                                {
                                    "internalType": "uint24",
                                    "name": "fee",
                                    "type": "uint24"
                                },
                                {
                                    "internalType": "int24",
                                    "name": "tickSpacing",
                                    "type": "int24"
                                },
                                {
                                    "internalType": "contract IHooks",
                                    "name": "hooks",
                                    "type": "address"
                                }
                            ]
                        },
                        {
                            "internalType": "uint160",
                            "name": "",
                            "type": "uint160"
                        },
                        {
                            "internalType": "int24",
                            "name": "",
                            "type": "int24"
                        },
                        {
                            "internalType": "bytes",
                            "name": "",
                            "type": "bytes"
                        }
                    ],
                    "stateMutability": "nonpayable",
                    "type": "function",
                    "name": "afterInitialize",
                    "outputs": [
                        {
                            "internalType": "bytes4",
                            "name": "",
                            "type": "bytes4"
                        }
                    ]
                },
                {
                    "inputs": [
                        {
                            "internalType": "address",
                            "name": "",
                            "type": "address"
                        },
                        {
                            "internalType": "struct PoolKey",
                            "name": "",
                            "type": "tuple",
                            "components": [
                                {
                                    "internalType": "Currency",
                                    "name": "currency0",
                                    "type": "address"
                                },
                                {
                                    "internalType": "Currency",
                                    "name": "currency1",
                                    "type": "address"
                                },
                                {
                                    "internalType": "uint24",
                                    "name": "fee",
                                    "type": "uint24"
                                },
                                {
                                    "internalType": "int24",
                                    "name": "tickSpacing",
                                    "type": "int24"
                                },
                                {
                                    "internalType": "contract IHooks",
                                    "name": "hooks",
                                    "type": "address"
                                }
                            ]
                        },
                        {
                            "internalType": "struct IPoolManager.ModifyLiquidityParams",
                            "name": "",
                            "type": "tuple",
                            "components": [
                                {
                                    "internalType": "int24",
                                    "name": "tickLower",
                                    "type": "int24"
                                },
                                {
                                    "internalType": "int24",
                                    "name": "tickUpper",
                                    "type": "int24"
                                },
                                {
                                    "internalType": "int256",
                                    "name": "liquidityDelta",
                                    "type": "int256"
                                },
                                {
                                    "internalType": "bytes32",
                                    "name": "salt",
                                    "type": "bytes32"
                                }
                            ]
                        },
                        {
                            "internalType": "BalanceDelta",
                            "name": "",
                            "type": "int256"
                        },
                        {
                            "internalType": "BalanceDelta",
                            "name": "",
                            "type": "int256"
                        },
                        {
                            "internalType": "bytes",
                            "name": "",
                            "type": "bytes"
                        }
                    ],
                    "stateMutability": "nonpayable",
                    "type": "function",
                    "name": "afterRemoveLiquidity",
                    "outputs": [
                        {
                            "internalType": "bytes4",
                            "name": "",
                            "type": "bytes4"
                        },
                        {
                            "internalType": "BalanceDelta",
                            "name": "",
                            "type": "int256"
                        }
                    ]
                },
                {
                    "inputs": [
                        {
                            "internalType": "address",
                            "name": "",
                            "type": "address"
                        },
                        {
                            "internalType": "struct PoolKey",
                            "name": "",
                            "type": "tuple",
                            "components": [
                                {
                                    "internalType": "Currency",
                                    "name": "currency0",
                                    "type": "address"
                                },
                                {
                                    "internalType": "Currency",
                                    "name": "currency1",
                                    "type": "address"
                                },
                                {
                                    "internalType": "uint24",
                                    "name": "fee",
                                    "type": "uint24"
                                },
                                {
                                    "internalType": "int24",
                                    "name": "tickSpacing",
                                    "type": "int24"
                                },
                                {
                                    "internalType": "contract IHooks",
                                    "name": "hooks",
                                    "type": "address"
                                }
                            ]
                        },
                        {
                            "internalType": "struct IPoolManager.SwapParams",
                            "name": "",
                            "type": "tuple",
                            "components": [
                                {
                                    "internalType": "bool",
                                    "name": "zeroForOne",
                                    "type": "bool"
                                },
                                {
                                    "internalType": "int256",
                                    "name": "amountSpecified",
                                    "type": "int256"
                                },
                                {
                                    "internalType": "uint160",
                                    "name": "sqrtPriceLimitX96",
                                    "type": "uint160"
                                }
                            ]
                        },
                        {
                            "internalType": "BalanceDelta",
                            "name": "",
                            "type": "int256"
                        },
                        {
                            "internalType": "bytes",
                            "name": "",
                            "type": "bytes"
                        }
                    ],
                    "stateMutability": "nonpayable",
                    "type": "function",
                    "name": "afterSwap",
                    "outputs": [
                        {
                            "internalType": "bytes4",
                            "name": "",
                            "type": "bytes4"
                        },
                        {
                            "internalType": "int128",
                            "name": "",
                            "type": "int128"
                        }
                    ]
                },
                {
                    "inputs": [
                        {
                            "internalType": "address",
                            "name": "",
                            "type": "address"
                        },
                        {
                            "internalType": "struct PoolKey",
                            "name": "",
                            "type": "tuple",
                            "components": [
                                {
                                    "internalType": "Currency",
                                    "name": "currency0",
                                    "type": "address"
                                },
                                {
                                    "internalType": "Currency",
                                    "name": "currency1",
                                    "type": "address"
                                },
                                {
                                    "internalType": "uint24",
                                    "name": "fee",
                                    "type": "uint24"
                                },
                                {
                                    "internalType": "int24",
                                    "name": "tickSpacing",
                                    "type": "int24"
                                },
                                {
                                    "internalType": "contract IHooks",
                                    "name": "hooks",
                                    "type": "address"
                                }
                            ]
                        },
                        {
                            "internalType": "struct IPoolManager.ModifyLiquidityParams",
                            "name": "",
                            "type": "tuple",
                            "components": [
                                {
                                    "internalType": "int24",
                                    "name": "tickLower",
                                    "type": "int24"
                                },
                                {
                                    "internalType": "int24",
                                    "name": "tickUpper",
                                    "type": "int24"
                                },
                                {
                                    "internalType": "int256",
                                    "name": "liquidityDelta",
                                    "type": "int256"
                                },
                                {
                                    "internalType": "bytes32",
                                    "name": "salt",
                                    "type": "bytes32"
                                }
                            ]
                        },
                        {
                            "internalType": "bytes",
                            "name": "",
                            "type": "bytes"
                        }
                    ],
                    "stateMutability": "nonpayable",
                    "type": "function",
                    "name": "beforeAddLiquidity",
                    "outputs": [
                        {
                            "internalType": "bytes4",
                            "name": "",
                            "type": "bytes4"
                        }
                    ]
                },
                {
                    "inputs": [
                        {
                            "internalType": "address",
                            "name": "",
                            "type": "address"
                        },
                        {
                            "internalType": "struct PoolKey",
                            "name": "",
                            "type": "tuple",
                            "components": [
                                {
                                    "internalType": "Currency",
                                    "name": "currency0",
                                    "type": "address"
                                },
                                {
                                    "internalType": "Currency",
                                    "name": "currency1",
                                    "type": "address"
                                },
                                {
                                    "internalType": "uint24",
                                    "name": "fee",
                                    "type": "uint24"
                                },
                                {
                                    "internalType": "int24",
                                    "name": "tickSpacing",
                                    "type": "int24"
                                },
                                {
                                    "internalType": "contract IHooks",
                                    "name": "hooks",
                                    "type": "address"
                                }
                            ]
                        },
                        {
                            "internalType": "uint256",
                            "name": "",
                            "type": "uint256"
                        },
                        {
                            "internalType": "uint256",
                            "name": "",
                            "type": "uint256"
                        },
                        {
                            "internalType": "bytes",
                            "name": "",
                            "type": "bytes"
                        }
                    ],
                    "stateMutability": "nonpayable",
                    "type": "function",
                    "name": "beforeDonate",
                    "outputs": [
                        {
                            "internalType": "bytes4",
                            "name": "",
                            "type": "bytes4"
                        }
                    ]
                },
                {
                    "inputs": [
                        {
                            "internalType": "address",
                            "name": "",
                            "type": "address"
                        },
                        {
                            "internalType": "struct PoolKey",
                            "name": "key",
                            "type": "tuple",
                            "components": [
                                {
                                    "internalType": "Currency",
                                    "name": "currency0",
                                    "type": "address"
                                },
                                {
                                    "internalType": "Currency",
                                    "name": "currency1",
                                    "type": "address"
                                },
                                {
                                    "internalType": "uint24",
                                    "name": "fee",
                                    "type": "uint24"
                                },
                                {
                                    "internalType": "int24",
                                    "name": "tickSpacing",
                                    "type": "int24"
                                },
                                {
                                    "internalType": "contract IHooks",
                                    "name": "hooks",
                                    "type": "address"
                                }
                            ]
                        },
                        {
                            "internalType": "uint160",
                            "name": "",
                            "type": "uint160"
                        },
                        {
                            "internalType": "bytes",
                            "name": "",
                            "type": "bytes"
                        }
                    ],
                    "stateMutability": "pure",
                    "type": "function",
                    "name": "beforeInitialize",
                    "outputs": [
                        {
                            "internalType": "bytes4",
                            "name": "",
                            "type": "bytes4"
                        }
                    ]
                },
                {
                    "inputs": [
                        {
                            "internalType": "address",
                            "name": "",
                            "type": "address"
                        },
                        {
                            "internalType": "struct PoolKey",
                            "name": "",
                            "type": "tuple",
                            "components": [
                                {
                                    "internalType": "Currency",
                                    "name": "currency0",
                                    "type": "address"
                                },
                                {
                                    "internalType": "Currency",
                                    "name": "currency1",
                                    "type": "address"
                                },
                                {
                                    "internalType": "uint24",
                                    "name": "fee",
                                    "type": "uint24"
                                },
                                {
                                    "internalType": "int24",
                                    "name": "tickSpacing",
                                    "type": "int24"
                                },
                                {
                                    "internalType": "contract IHooks",
                                    "name": "hooks",
                                    "type": "address"
                                }
                            ]
                        },
                        {
                            "internalType": "struct IPoolManager.ModifyLiquidityParams",
                            "name": "",
                            "type": "tuple",
                            "components": [
                                {
                                    "internalType": "int24",
                                    "name": "tickLower",
                                    "type": "int24"
                                },
                                {
                                    "internalType": "int24",
                                    "name": "tickUpper",
                                    "type": "int24"
                                },
                                {
                                    "internalType": "int256",
                                    "name": "liquidityDelta",
                                    "type": "int256"
                                },
                                {
                                    "internalType": "bytes32",
                                    "name": "salt",
                                    "type": "bytes32"
                                }
                            ]
                        },
                        {
                            "internalType": "bytes",
                            "name": "",
                            "type": "bytes"
                        }
                    ],
                    "stateMutability": "nonpayable",
                    "type": "function",
                    "name": "beforeRemoveLiquidity",
                    "outputs": [
                        {
                            "internalType": "bytes4",
                            "name": "",
                            "type": "bytes4"
                        }
                    ]
                },
                {
                    "inputs": [
                        {
                            "internalType": "address",
                            "name": "",
                            "type": "address"
                        },
                        {
                            "internalType": "struct PoolKey",
                            "name": "key",
                            "type": "tuple",
                            "components": [
                                {
                                    "internalType": "Currency",
                                    "name": "currency0",
                                    "type": "address"
                                },
                                {
                                    "internalType": "Currency",
                                    "name": "currency1",
                                    "type": "address"
                                },
                                {
                                    "internalType": "uint24",
                                    "name": "fee",
                                    "type": "uint24"
                                },
                                {
                                    "internalType": "int24",
                                    "name": "tickSpacing",
                                    "type": "int24"
                                },
                                {
                                    "internalType": "contract IHooks",
                                    "name": "hooks",
                                    "type": "address"
                                }
                            ]
                        },
                        {
                            "internalType": "struct IPoolManager.SwapParams",
                            "name": "",
                            "type": "tuple",
                            "components": [
                                {
                                    "internalType": "bool",
                                    "name": "zeroForOne",
                                    "type": "bool"
                                },
                                {
                                    "internalType": "int256",
                                    "name": "amountSpecified",
                                    "type": "int256"
                                },
                                {
                                    "internalType": "uint160",
                                    "name": "sqrtPriceLimitX96",
                                    "type": "uint160"
                                }
                            ]
                        },
                        {
                            "internalType": "bytes",
                            "name": "",
                            "type": "bytes"
                        }
                    ],
                    "stateMutability": "nonpayable",
                    "type": "function",
                    "name": "beforeSwap",
                    "outputs": [
                        {
                            "internalType": "bytes4",
                            "name": "",
                            "type": "bytes4"
                        },
                        {
                            "internalType": "BeforeSwapDelta",
                            "name": "",
                            "type": "int256"
                        },
                        {
                            "internalType": "uint24",
                            "name": "",
                            "type": "uint24"
                        }
                    ]
                },
                {
                    "inputs": [],
                    "stateMutability": "pure",
                    "type": "function",
                    "name": "getHookPermissions",
                    "outputs": [
                        {
                            "internalType": "struct Hooks.Permissions",
                            "name": "",
                            "type": "tuple",
                            "components": [
                                {
                                    "internalType": "bool",
                                    "name": "beforeInitialize",
                                    "type": "bool"
                                },
                                {
                                    "internalType": "bool",
                                    "name": "afterInitialize",
                                    "type": "bool"
                                },
                                {
                                    "internalType": "bool",
                                    "name": "beforeAddLiquidity",
                                    "type": "bool"
                                },
                                {
                                    "internalType": "bool",
                                    "name": "afterAddLiquidity",
                                    "type": "bool"
                                },
                                {
                                    "internalType": "bool",
                                    "name": "beforeRemoveLiquidity",
                                    "type": "bool"
                                },
                                {
                                    "internalType": "bool",
                                    "name": "afterRemoveLiquidity",
                                    "type": "bool"
                                },
                                {
                                    "internalType": "bool",
                                    "name": "beforeSwap",
                                    "type": "bool"
                                },
                                {
                                    "internalType": "bool",
                                    "name": "afterSwap",
                                    "type": "bool"
                                },
                                {
                                    "internalType": "bool",
                                    "name": "beforeDonate",
                                    "type": "bool"
                                },
                                {
                                    "internalType": "bool",
                                    "name": "afterDonate",
                                    "type": "bool"
                                },
                                {
                                    "internalType": "bool",
                                    "name": "beforeSwapReturnDelta",
                                    "type": "bool"
                                },
                                {
                                    "internalType": "bool",
                                    "name": "afterSwapReturnDelta",
                                    "type": "bool"
                                },
                                {
                                    "internalType": "bool",
                                    "name": "afterAddLiquidityReturnDelta",
                                    "type": "bool"
                                },
                                {
                                    "internalType": "bool",
                                    "name": "afterRemoveLiquidityReturnDelta",
                                    "type": "bool"
                                }
                            ]
                        }
                    ]
                },
                {
                    "inputs": [],
                    "stateMutability": "view",
                    "type": "function",
                    "name": "movingAverageGasPrice",
                    "outputs": [
                        {
                            "internalType": "uint128",
                            "name": "",
                            "type": "uint128"
                        }
                    ]
                },
                {
                    "inputs": [],
                    "stateMutability": "view",
                    "type": "function",
                    "name": "movingAverageGasPriceCount",
                    "outputs": [
                        {
                            "internalType": "uint104",
                            "name": "",
                            "type": "uint104"
                        }
                    ]
                },
                {
                    "inputs": [],
                    "stateMutability": "view",
                    "type": "function",
                    "name": "poolManager",
                    "outputs": [
                        {
                            "internalType": "contract IPoolManager",
                            "name": "",
                            "type": "address"
                        }
                    ]
                },
                {
                    "inputs": [
                        {
                            "internalType": "bytes",
                            "name": "data",
                            "type": "bytes"
                        }
                    ],
                    "stateMutability": "nonpayable",
                    "type": "function",
                    "name": "unlockCallback",
                    "outputs": [
                        {
                            "internalType": "bytes",
                            "name": "",
                            "type": "bytes"
                        }
                    ]
                }
            ],
            "devdoc": {
                "kind": "dev",
                "methods": {
                    "afterAddLiquidity(address,(address,address,uint24,int24,address),(int24,int24,int256,bytes32),int256,int256,bytes)": {
                        "params": {
                            "delta": "The caller's balance delta after adding liquidity; the sum of principal delta, fees accrued, and hook delta",
                            "feesAccrued": "The fees accrued since the last time fees were collected from this position",
                            "hookData": "Arbitrary data handed into the PoolManager by the liquidity provider to be passed on to the hook",
                            "key": "The key for the pool",
                            "params": "The parameters for adding liquidity",
                            "sender": "The initial msg.sender for the add liquidity call"
                        },
                        "returns": {
                            "_0": "bytes4 The function selector for the hook",
                            "_1": "BalanceDelta The hook's delta in token0 and token1. Positive: the hook is owed/took currency, negative: the hook owes/sent currency"
                        }
                    },
                    "afterDonate(address,(address,address,uint24,int24,address),uint256,uint256,bytes)": {
                        "params": {
                            "amount0": "The amount of token0 being donated",
                            "amount1": "The amount of token1 being donated",
                            "hookData": "Arbitrary data handed into the PoolManager by the donor to be be passed on to the hook",
                            "key": "The key for the pool",
                            "sender": "The initial msg.sender for the donate call"
                        },
                        "returns": {
                            "_0": "bytes4 The function selector for the hook"
                        }
                    },
                    "afterInitialize(address,(address,address,uint24,int24,address),uint160,int24,bytes)": {
                        "params": {
                            "hookData": "Arbitrary data handed into the PoolManager by the initializer to be be passed on to the hook",
                            "key": "The key for the pool being initialized",
                            "sender": "The initial msg.sender for the initialize call",
                            "sqrtPriceX96": "The sqrt(price) of the pool as a Q64.96",
                            "tick": "The current tick after the state of a pool is initialized"
                        },
                        "returns": {
                            "_0": "bytes4 The function selector for the hook"
                        }
                    },
                    "afterRemoveLiquidity(address,(address,address,uint24,int24,address),(int24,int24,int256,bytes32),int256,int256,bytes)": {
                        "params": {
                            "delta": "The caller's balance delta after adding liquidity; the sum of principal delta, fees accrued, and hook delta",
                            "feesAccrued": "The fees accrued since the last time fees were collected from this position",
                            "hookData": "Arbitrary data handed into the PoolManager by the liquidity provider to be be passed on to the hook",
                            "key": "The key for the pool",
                            "params": "The parameters for removing liquidity",
                            "sender": "The initial msg.sender for the remove liquidity call"
                        },
                        "returns": {
                            "_0": "bytes4 The function selector for the hook",
                            "_1": "BalanceDelta The hook's delta in token0 and token1. Positive: the hook is owed/took currency, negative: the hook owes/sent currency"
                        }
                    },
                    "afterSwap(address,(address,address,uint24,int24,address),(bool,int256,uint160),int256,bytes)": {
                        "params": {
                            "delta": "The amount owed to the caller (positive) or owed to the pool (negative)",
                            "hookData": "Arbitrary data handed into the PoolManager by the swapper to be be passed on to the hook",
                            "key": "The key for the pool",
                            "params": "The parameters for the swap",
                            "sender": "The initial msg.sender for the swap call"
                        },
                        "returns": {
                            "_0": "bytes4 The function selector for the hook",
                            "_1": "int128 The hook's delta in unspecified currency. Positive: the hook is owed/took currency, negative: the hook owes/sent currency"
                        }
                    },
                    "beforeAddLiquidity(address,(address,address,uint24,int24,address),(int24,int24,int256,bytes32),bytes)": {
                        "params": {
                            "hookData": "Arbitrary data handed into the PoolManager by the liquidity provider to be passed on to the hook",
                            "key": "The key for the pool",
                            "params": "The parameters for adding liquidity",
                            "sender": "The initial msg.sender for the add liquidity call"
                        },
                        "returns": {
                            "_0": "bytes4 The function selector for the hook"
                        }
                    },
                    "beforeDonate(address,(address,address,uint24,int24,address),uint256,uint256,bytes)": {
                        "params": {
                            "amount0": "The amount of token0 being donated",
                            "amount1": "The amount of token1 being donated",
                            "hookData": "Arbitrary data handed into the PoolManager by the donor to be be passed on to the hook",
                            "key": "The key for the pool",
                            "sender": "The initial msg.sender for the donate call"
                        },
                        "returns": {
                            "_0": "bytes4 The function selector for the hook"
                        }
                    },
                    "beforeRemoveLiquidity(address,(address,address,uint24,int24,address),(int24,int24,int256,bytes32),bytes)": {
                        "params": {
                            "hookData": "Arbitrary data handed into the PoolManager by the liquidity provider to be be passed on to the hook",
                            "key": "The key for the pool",
                            "params": "The parameters for removing liquidity",
                            "sender": "The initial msg.sender for the remove liquidity call"
                        },
                        "returns": {
                            "_0": "bytes4 The function selector for the hook"
                        }
                    },
                    "getHookPermissions()": {
                        "details": "Used at deployment to validate the address correctly represents the expected permissions"
                    },
                    "unlockCallback(bytes)": {
                        "details": "We force the onlyPoolManager modifier by exposing a virtual function after the onlyPoolManager check.",
                        "params": {
                            "data": "The data that was passed to the call to unlock"
                        },
                        "returns": {
                            "_0": "Any data that you want to be returned from the unlock call"
                        }
                    }
                },
                "version": 1
            },
            "userdoc": {
                "kind": "user",
                "methods": {
                    "afterAddLiquidity(address,(address,address,uint24,int24,address),(int24,int24,int256,bytes32),int256,int256,bytes)": {
                        "notice": "The hook called after liquidity is added"
                    },
                    "afterDonate(address,(address,address,uint24,int24,address),uint256,uint256,bytes)": {
                        "notice": "The hook called after donate"
                    },
                    "afterInitialize(address,(address,address,uint24,int24,address),uint160,int24,bytes)": {
                        "notice": "The hook called after the state of a pool is initialized"
                    },
                    "afterRemoveLiquidity(address,(address,address,uint24,int24,address),(int24,int24,int256,bytes32),int256,int256,bytes)": {
                        "notice": "The hook called after liquidity is removed"
                    },
                    "afterSwap(address,(address,address,uint24,int24,address),(bool,int256,uint160),int256,bytes)": {
                        "notice": "The hook called after a swap"
                    },
                    "beforeAddLiquidity(address,(address,address,uint24,int24,address),(int24,int24,int256,bytes32),bytes)": {
                        "notice": "The hook called before liquidity is added"
                    },
                    "beforeDonate(address,(address,address,uint24,int24,address),uint256,uint256,bytes)": {
                        "notice": "The hook called before donate"
                    },
                    "beforeRemoveLiquidity(address,(address,address,uint24,int24,address),(int24,int24,int256,bytes32),bytes)": {
                        "notice": "The hook called before liquidity is removed"
                    },
                    "getHookPermissions()": {
                        "notice": "Returns a struct of permissions to signal which hook functions are to be implemented"
                    },
                    "poolManager()": {
                        "notice": "The Uniswap v4 PoolManager contract"
                    },
                    "unlockCallback(bytes)": {
                        "notice": "Called by the pool manager on `msg.sender` when the manager is unlocked"
                    }
                },
                "version": 1
            }
        },
        "settings": {
            "remappings": [
                "@ensdomains/=lib/v4-periphery/lib/v4-core/node_modules/@ensdomains/",
                "@openzeppelin/=lib/v4-periphery/lib/v4-core/lib/openzeppelin-contracts/",
                "@openzeppelin/contracts/=lib/v4-periphery/lib/v4-core/lib/openzeppelin-contracts/contracts/",
                "@uniswap/v4-core/=lib/v4-periphery/lib/v4-core/",
                "ds-test/=lib/v4-periphery/lib/v4-core/lib/forge-std/lib/ds-test/src/",
                "erc4626-tests/=lib/v4-periphery/lib/v4-core/lib/openzeppelin-contracts/lib/erc4626-tests/",
                "forge-gas-snapshot/=lib/v4-periphery/lib/v4-core/lib/forge-gas-snapshot/src/",
                "forge-std/=lib/forge-std/src/",
                "hardhat/=lib/v4-periphery/lib/v4-core/node_modules/hardhat/",
                "openzeppelin-contracts/=lib/v4-periphery/lib/v4-core/lib/openzeppelin-contracts/",
                "permit2/=lib/v4-periphery/lib/permit2/",
                "solmate/=lib/v4-periphery/lib/v4-core/lib/solmate/",
                "v4-core/=lib/v4-periphery/lib/v4-core/src/",
                "v4-periphery/=lib/v4-periphery/"
            ],
            "optimizer": {
                "enabled": true,
                "runs": 800
            },
            "metadata": {
                "bytecodeHash": "ipfs"
            },
            "compilationTarget": {
                "src/GasPriceFeesHook.sol": "GasPriceFeesHook"
            },
            "evmVersion": "cancun",
            "libraries": {}
        },
        "sources": {
            "lib/v4-periphery/lib/v4-core/src/interfaces/IExtsload.sol": {
                "keccak256": "0x80b53ca4907d6f0088c3b931f2b72cad1dc4615a95094d96bd0fb8dff8d5ba43",
                "urls": [
                    "bzz-raw://375c69148622aab7a3537d5fd37d373a8e9731022c8d87bdaee46233b0a99fe1",
                    "dweb:/ipfs/QmXFjdoYRxsA5B1kyuxEXgNf3FBoL1zPvy26Qy8EtpdFRN"
                ],
                "license": "MIT"
            },
            "lib/v4-periphery/lib/v4-core/src/interfaces/IExttload.sol": {
                "keccak256": "0xc6b68283ebd8d1c789df536756726eed51c589134bb20821b236a0d22a135937",
                "urls": [
                    "bzz-raw://294394f72dfc219689209f4130d85601dfd0d63c8d47578050d312db70f9b6c8",
                    "dweb:/ipfs/QmTDMQ3oxCGHgEBU48a3Lp4S1rRjc8vVCxkhE5ZNej1bsY"
                ],
                "license": "MIT"
            },
            "lib/v4-periphery/lib/v4-core/src/interfaces/IHooks.sol": {
                "keccak256": "0x2ed03c5c22b1b81490788f54599beb3b26b834e608f6351166f60069f5655671",
                "urls": [
                    "bzz-raw://aabb296e1109ccc792e444c63d96c04f75f74275fbd917083b65aa18cc9eb662",
                    "dweb:/ipfs/QmWjVWjC831FM6W9yk7ys8vmMesmHb3XrskvTzkFM8q7pK"
                ],
                "license": "MIT"
            },
            "lib/v4-periphery/lib/v4-core/src/interfaces/IPoolManager.sol": {
                "keccak256": "0x859e8c7794fc04a72e53d4e9d2b89ae5517f71409a667fc2f4db054c9d121168",
                "urls": [
                    "bzz-raw://690097a7065d05ba5641b4a12c91a561c566209313307b5d74d989bcc00c3221",
                    "dweb:/ipfs/QmbxiRHURJhcUMJ5NfZg3V1BgVowPQQ263UH43De4DvEBj"
                ],
                "license": "MIT"
            },
            "lib/v4-periphery/lib/v4-core/src/interfaces/IProtocolFeeController.sol": {
                "keccak256": "0xc2d7f3605da9767e36cf25d4d4fa9b95663a6659e26ce28cf29b8b88acb79a4c",
                "urls": [
                    "bzz-raw://c7a43cda35b8a9254ed3e46cfd8649361f09121d17ef554bd3d190b9a8d57cc6",
                    "dweb:/ipfs/QmRBDQoqCWddH5hY1JdxMyYtY8jMZhWAwtuFJBc3r8V31G"
                ],
                "license": "MIT"
            },
            "lib/v4-periphery/lib/v4-core/src/interfaces/IProtocolFees.sol": {
                "keccak256": "0x6274aeb7a4f03734502f3b1b5494f7738d3f3adfa3a15aebf383ce1d2698e971",
                "urls": [
                    "bzz-raw://ed366e17dc42f9b230b8b7bb27e2c304ea71b7edb11b5738f75a1090f34648f4",
                    "dweb:/ipfs/QmVqZbCQ46B5huP8LsDcxbquqCdd74uvhe3F47KqRLAGeq"
                ],
                "license": "MIT"
            },
            "lib/v4-periphery/lib/v4-core/src/interfaces/callback/IUnlockCallback.sol": {
                "keccak256": "0x58c82f2bd9d7c097ed09bd0991fedc403b0ec270eb3d0158bfb095c06a03d719",
                "urls": [
                    "bzz-raw://91168ca26a10980df2cdc3fbfe8ddf372c002b7ef19e3c59a0c9870d64198f1b",
                    "dweb:/ipfs/QmUSpaM825vd1SwvF38esgbdLgYiPwefKaFERTWvUi6uSK"
                ],
                "license": "MIT"
            },
            "lib/v4-periphery/lib/v4-core/src/interfaces/external/IERC20Minimal.sol": {
                "keccak256": "0xc1c23330c1511ecfd45c67a683962b4e2555b82f1dacd40cc8b46ae5a6e250e7",
                "urls": [
                    "bzz-raw://5ce10b7970482a65f9e9a365b810eeb154a5d4a8229a26653028d84b9622a410",
                    "dweb:/ipfs/QmTSwXxZ2FTkM5duBZgbpFs8SRVDR5NPAnW4YimeDhb1s8"
                ],
                "license": "GPL-2.0-or-later"
            },
            "lib/v4-periphery/lib/v4-core/src/interfaces/external/IERC6909Claims.sol": {
                "keccak256": "0xa586f345739e52b0488a0fe40b6e375cce67fdd25758408b0efcb5133ad96a48",
                "urls": [
                    "bzz-raw://e8c557b7e52abdbbd82e415a1acc27921446a7fd090b7d4877e52be72619547f",
                    "dweb:/ipfs/QmXE2KNPbXmGX8BQF3ei6zhzRTnhoTQg39XmqMnkhbr6QK"
                ],
                "license": "MIT"
            },
            "lib/v4-periphery/lib/v4-core/src/libraries/CustomRevert.sol": {
                "keccak256": "0x745ca9c258d00fae52f293af065471f1bc1099de1bea4ceb52e312240ac52895",
                "urls": [
                    "bzz-raw://71eee0aa4e395f2c7fce16760d6547c6a12a6fd3dc56b94f4d44480fed538495",
                    "dweb:/ipfs/QmPfJBiHzeVe9sx3PZ27jWrzJqF9atvevpYBC9j3Ekz9TG"
                ],
                "license": "MIT"
            },
            "lib/v4-periphery/lib/v4-core/src/libraries/Hooks.sol": {
                "keccak256": "0x33b963d98de5eadd5b42a4d323ce5d25d87432d8ed538096ecca8d0b77e0d088",
                "urls": [
                    "bzz-raw://4ef49b43fe2fa6a2c6e44a1f8d7712ce4e13c7656da5ec35e73eb644707e5ed1",
                    "dweb:/ipfs/QmZCisxCf9a1zxZvZADk1EN8JyFXZ1XZ4B8s1PpwEMugJX"
                ],
                "license": "MIT"
            },
            "lib/v4-periphery/lib/v4-core/src/libraries/LPFeeLibrary.sol": {
                "keccak256": "0x9cb794c60d4c867732b20a6cd14b965bf3a63df1161eb3cd28e2c9d0447db46f",
                "urls": [
                    "bzz-raw://3d987ee5738f74c3fb091db503b44ad6651e4e47554623182e0ecbe696bd7382",
                    "dweb:/ipfs/QmW7Rt5qjD4mmRnvYcT2Fj7VPzBm1eT9w15WUHtfWmKEPh"
                ],
                "license": "GPL-2.0-or-later"
            },
            "lib/v4-periphery/lib/v4-core/src/libraries/ParseBytes.sol": {
                "keccak256": "0xf0795198d1e651b0b33fd1708d80a14f501bb2a1486905676d35f364e880f579",
                "urls": [
                    "bzz-raw://5aea527fcec51d7274f0c189dc2479a6aa708fc91857187a4d7db46bb1d6c7a8",
                    "dweb:/ipfs/QmUTrwTPSZ7EHBaTyfAA78rZVP17iQzmAmvDcQ8GhDRAEf"
                ],
                "license": "GPL-2.0-or-later"
            },
            "lib/v4-periphery/lib/v4-core/src/libraries/SafeCast.sol": {
                "keccak256": "0x8060d21c4d54a431113f9a594b860e6a9bf1f346d0c7c02dfafe9847dd8a0591",
                "urls": [
                    "bzz-raw://e7f71b73d82965d1d949f388060f6f0daab7cd14718e260682918ec6fa0253b9",
                    "dweb:/ipfs/QmP85jtFrCeV6Y8zuJfrrgiMy1shX3tHWs2wX7DMAB7Lft"
                ],
                "license": "GPL-2.0-or-later"
            },
            "lib/v4-periphery/lib/v4-core/src/types/BalanceDelta.sol": {
                "keccak256": "0xa719c8fe51e0a9524280178f19f6851bcc3b3b60e73618f3d60905d35ae5569f",
                "urls": [
                    "bzz-raw://7436928dc9de35c6c7c5c636cb51adaf295cfd590da83b19a004ae33cbec9ef9",
                    "dweb:/ipfs/QmRJ9yZkUpzk4433GX3LgVVL8jwpbSYSUwXcucKisf3v4H"
                ],
                "license": "MIT"
            },
            "lib/v4-periphery/lib/v4-core/src/types/BeforeSwapDelta.sol": {
                "keccak256": "0x2a774312d91285313d569da1a718c909655da5432310417692097a1d4dc83a78",
                "urls": [
                    "bzz-raw://a2c7a0379955cff9c17ab9e61f95e42909aa5947c22740f86ce940d09856f782",
                    "dweb:/ipfs/QmaAuo8UBYXsGrVuKh8iRoAAdqwtg1jDq515cW1ZRP5m9K"
                ],
                "license": "MIT"
            },
            "lib/v4-periphery/lib/v4-core/src/types/Currency.sol": {
                "keccak256": "0x35c74eae038ecfbbae48b0e13f2b9a43ac6d8da4847ffa0f1482e4e2d455ee74",
                "urls": [
                    "bzz-raw://cadb54f9c89b6970583148e503a23c7b654aff1f3e6a0da57705c54e5b03b39f",
                    "dweb:/ipfs/Qma3CKKwyzGwzHN4Z9HDJ4Q7J5VfbN594i8F2DTGWTMWcB"
                ],
                "license": "MIT"
            },
            "lib/v4-periphery/lib/v4-core/src/types/PoolId.sol": {
                "keccak256": "0x308311916ea0f5c2fd878b6a2751eb223d170a69e33f601fae56dfe3c5d392af",
                "urls": [
                    "bzz-raw://669c2cd7ac17690b5d8831e0bda72822376c3a04b36afed6d31df4d75fe60918",
                    "dweb:/ipfs/QmT6EpkxqU8VF3WsgrZ66F3s1cCQRffR95z1HDYZz7ph6y"
                ],
                "license": "MIT"
            },
            "lib/v4-periphery/lib/v4-core/src/types/PoolKey.sol": {
                "keccak256": "0xf89856e0580d7a4856d3187a76858377ccee9d59702d230c338d84388221b786",
                "urls": [
                    "bzz-raw://6f3118fa189025695c37fdf0bdd1190f085ad097484d3c88cf4c56d1db65f639",
                    "dweb:/ipfs/QmamXpgtB8GV1CaFLvqefPWSoikLDhMk1yU4heBnVzU8gi"
                ],
                "license": "MIT"
            },
            "lib/v4-periphery/src/base/ImmutableState.sol": {
                "keccak256": "0x12b175e4ed6d31da545e3b6c9930901568c99d153b1e51044d32e88f42b9b633",
                "urls": [
                    "bzz-raw://f4347899e0b3bfd66e8d79652b1a14a62a02d16bfece63a40c6efe0e5656c384",
                    "dweb:/ipfs/QmSbbT8fefHstA72BqF7SDooDtmhs79dR8T6pWv8LxKU2L"
                ],
                "license": "GPL-2.0-or-later"
            },
            "lib/v4-periphery/src/base/SafeCallback.sol": {
                "keccak256": "0x6284bd1d1fbe78a901e63dc70720e2bf19de6758347b050f8ba2b155e73325c5",
                "urls": [
                    "bzz-raw://3afb423a3c0f8b5f6436680ff3cde9247924d442a9720dc39b2b07a352607187",
                    "dweb:/ipfs/QmaT5bMwiiqkp8KWUnHjWJz55Ah9vbpASzJagg9riHbpTf"
                ],
                "license": "GPL-3.0-or-later"
            },
            "lib/v4-periphery/src/base/hooks/BaseHook.sol": {
                "keccak256": "0xe6522a26dfe7b86aea6a84670b502890ede1e96302d641f231906897b2172f2f",
                "urls": [
                    "bzz-raw://19d2d2678ca32e81af3419bc4640833fc40e155b6757bb87edb0182f181c7fe7",
                    "dweb:/ipfs/QmPGpN6p78SrRW79hX16sM572uD4Fb2hJF6Bv58M9LYNpQ"
                ],
                "license": "GPL-3.0-or-later"
            },
            "src/GasPriceFeesHook.sol": {
                "keccak256": "0x13b48045f339a51f93d59f62f8535f59fd038e8e33ec33d320e2333c93c7384c",
                "urls": [
                    "bzz-raw://22bfe9e622dd3123f0cf8243237a397bab4393405c1e284399cbc93c7b2e7239",
                    "dweb:/ipfs/QmbWTkcgfDSYQCj3a6DzoLMSUVyo4vrKBaeQCReagSrJXH"
                ],
                "license": "MIT"
            }
        },
        "version": 1
    },
    "id": 95
}