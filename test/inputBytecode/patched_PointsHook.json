{
    "abi": [
        {
            "type": "constructor",
            "inputs": [
                {
                    "name": "_manager",
                    "type": "address",
                    "internalType": "contract IPoolManager"
                },
                {
                    "name": "_name",
                    "type": "string",
                    "internalType": "string"
                },
                {
                    "name": "_symbol",
                    "type": "string",
                    "internalType": "string"
                }
            ],
            "stateMutability": "nonpayable"
        },
        {
            "type": "function",
            "name": "DOMAIN_SEPARATOR",
            "inputs": [],
            "outputs": [
                {
                    "name": "",
                    "type": "bytes32",
                    "internalType": "bytes32"
                }
            ],
            "stateMutability": "view"
        },
        {
            "type": "function",
            "name": "POINTS_FOR_REFERRAL",
            "inputs": [],
            "outputs": [
                {
                    "name": "",
                    "type": "uint256",
                    "internalType": "uint256"
                }
            ],
            "stateMutability": "view"
        },
        {
            "type": "function",
            "name": "afterAddLiquidity",
            "inputs": [
                {
                    "name": "",
                    "type": "address",
                    "internalType": "address"
                },
                {
                    "name": "key",
                    "type": "tuple",
                    "internalType": "struct PoolKey",
                    "components": [
                        {
                            "name": "currency0",
                            "type": "address",
                            "internalType": "Currency"
                        },
                        {
                            "name": "currency1",
                            "type": "address",
                            "internalType": "Currency"
                        },
                        {
                            "name": "fee",
                            "type": "uint24",
                            "internalType": "uint24"
                        },
                        {
                            "name": "tickSpacing",
                            "type": "int24",
                            "internalType": "int24"
                        },
                        {
                            "name": "hooks",
                            "type": "address",
                            "internalType": "contract IHooks"
                        }
                    ]
                },
                {
                    "name": "",
                    "type": "tuple",
                    "internalType": "struct IPoolManager.ModifyLiquidityParams",
                    "components": [
                        {
                            "name": "tickLower",
                            "type": "int24",
                            "internalType": "int24"
                        },
                        {
                            "name": "tickUpper",
                            "type": "int24",
                            "internalType": "int24"
                        },
                        {
                            "name": "liquidityDelta",
                            "type": "int256",
                            "internalType": "int256"
                        },
                        {
                            "name": "salt",
                            "type": "bytes32",
                            "internalType": "bytes32"
                        }
                    ]
                },
                {
                    "name": "delta",
                    "type": "int256",
                    "internalType": "BalanceDelta"
                },
                {
                    "name": "delta1",
                    "type": "int256",
                    "internalType": "BalanceDelta"
                },
                {
                    "name": "hookData",
                    "type": "bytes",
                    "internalType": "bytes"
                }
            ],
            "outputs": [
                {
                    "name": "",
                    "type": "bytes4",
                    "internalType": "bytes4"
                },
                {
                    "name": "",
                    "type": "int256",
                    "internalType": "BalanceDelta"
                }
            ],
            "stateMutability": "nonpayable"
        },
        {
            "type": "function",
            "name": "afterDonate",
            "inputs": [
                {
                    "name": "",
                    "type": "address",
                    "internalType": "address"
                },
                {
                    "name": "",
                    "type": "tuple",
                    "internalType": "struct PoolKey",
                    "components": [
                        {
                            "name": "currency0",
                            "type": "address",
                            "internalType": "Currency"
                        },
                        {
                            "name": "currency1",
                            "type": "address",
                            "internalType": "Currency"
                        },
                        {
                            "name": "fee",
                            "type": "uint24",
                            "internalType": "uint24"
                        },
                        {
                            "name": "tickSpacing",
                            "type": "int24",
                            "internalType": "int24"
                        },
                        {
                            "name": "hooks",
                            "type": "address",
                            "internalType": "contract IHooks"
                        }
                    ]
                },
                {
                    "name": "",
                    "type": "uint256",
                    "internalType": "uint256"
                },
                {
                    "name": "",
                    "type": "uint256",
                    "internalType": "uint256"
                },
                {
                    "name": "",
                    "type": "bytes",
                    "internalType": "bytes"
                }
            ],
            "outputs": [
                {
                    "name": "",
                    "type": "bytes4",
                    "internalType": "bytes4"
                }
            ],
            "stateMutability": "nonpayable"
        },
        {
            "type": "function",
            "name": "afterInitialize",
            "inputs": [
                {
                    "name": "",
                    "type": "address",
                    "internalType": "address"
                },
                {
                    "name": "",
                    "type": "tuple",
                    "internalType": "struct PoolKey",
                    "components": [
                        {
                            "name": "currency0",
                            "type": "address",
                            "internalType": "Currency"
                        },
                        {
                            "name": "currency1",
                            "type": "address",
                            "internalType": "Currency"
                        },
                        {
                            "name": "fee",
                            "type": "uint24",
                            "internalType": "uint24"
                        },
                        {
                            "name": "tickSpacing",
                            "type": "int24",
                            "internalType": "int24"
                        },
                        {
                            "name": "hooks",
                            "type": "address",
                            "internalType": "contract IHooks"
                        }
                    ]
                },
                {
                    "name": "",
                    "type": "uint160",
                    "internalType": "uint160"
                },
                {
                    "name": "",
                    "type": "int24",
                    "internalType": "int24"
                }
            ],
            "outputs": [
                {
                    "name": "",
                    "type": "bytes4",
                    "internalType": "bytes4"
                }
            ],
            "stateMutability": "nonpayable"
        },
        {
            "type": "function",
            "name": "afterRemoveLiquidity",
            "inputs": [
                {
                    "name": "",
                    "type": "address",
                    "internalType": "address"
                },
                {
                    "name": "",
                    "type": "tuple",
                    "internalType": "struct PoolKey",
                    "components": [
                        {
                            "name": "currency0",
                            "type": "address",
                            "internalType": "Currency"
                        },
                        {
                            "name": "currency1",
                            "type": "address",
                            "internalType": "Currency"
                        },
                        {
                            "name": "fee",
                            "type": "uint24",
                            "internalType": "uint24"
                        },
                        {
                            "name": "tickSpacing",
                            "type": "int24",
                            "internalType": "int24"
                        },
                        {
                            "name": "hooks",
                            "type": "address",
                            "internalType": "contract IHooks"
                        }
                    ]
                },
                {
                    "name": "",
                    "type": "tuple",
                    "internalType": "struct IPoolManager.ModifyLiquidityParams",
                    "components": [
                        {
                            "name": "tickLower",
                            "type": "int24",
                            "internalType": "int24"
                        },
                        {
                            "name": "tickUpper",
                            "type": "int24",
                            "internalType": "int24"
                        },
                        {
                            "name": "liquidityDelta",
                            "type": "int256",
                            "internalType": "int256"
                        },
                        {
                            "name": "salt",
                            "type": "bytes32",
                            "internalType": "bytes32"
                        }
                    ]
                },
                {
                    "name": "",
                    "type": "int256",
                    "internalType": "BalanceDelta"
                },
                {
                    "name": "",
                    "type": "int256",
                    "internalType": "BalanceDelta"
                },
                {
                    "name": "",
                    "type": "bytes",
                    "internalType": "bytes"
                }
            ],
            "outputs": [
                {
                    "name": "",
                    "type": "bytes4",
                    "internalType": "bytes4"
                },
                {
                    "name": "",
                    "type": "int256",
                    "internalType": "BalanceDelta"
                }
            ],
            "stateMutability": "nonpayable"
        },
        {
            "type": "function",
            "name": "afterSwap",
            "inputs": [
                {
                    "name": "",
                    "type": "address",
                    "internalType": "address"
                },
                {
                    "name": "key",
                    "type": "tuple",
                    "internalType": "struct PoolKey",
                    "components": [
                        {
                            "name": "currency0",
                            "type": "address",
                            "internalType": "Currency"
                        },
                        {
                            "name": "currency1",
                            "type": "address",
                            "internalType": "Currency"
                        },
                        {
                            "name": "fee",
                            "type": "uint24",
                            "internalType": "uint24"
                        },
                        {
                            "name": "tickSpacing",
                            "type": "int24",
                            "internalType": "int24"
                        },
                        {
                            "name": "hooks",
                            "type": "address",
                            "internalType": "contract IHooks"
                        }
                    ]
                },
                {
                    "name": "swapParams",
                    "type": "tuple",
                    "internalType": "struct IPoolManager.SwapParams",
                    "components": [
                        {
                            "name": "zeroForOne",
                            "type": "bool",
                            "internalType": "bool"
                        },
                        {
                            "name": "amountSpecified",
                            "type": "int256",
                            "internalType": "int256"
                        },
                        {
                            "name": "sqrtPriceLimitX96",
                            "type": "uint160",
                            "internalType": "uint160"
                        }
                    ]
                },
                {
                    "name": "delta",
                    "type": "int256",
                    "internalType": "BalanceDelta"
                },
                {
                    "name": "hookData",
                    "type": "bytes",
                    "internalType": "bytes"
                }
            ],
            "outputs": [
                {
                    "name": "",
                    "type": "bytes4",
                    "internalType": "bytes4"
                },
                {
                    "name": "",
                    "type": "int128",
                    "internalType": "int128"
                }
            ],
            "stateMutability": "nonpayable"
        },
        {
            "type": "function",
            "name": "allowance",
            "inputs": [
                {
                    "name": "",
                    "type": "address",
                    "internalType": "address"
                },
                {
                    "name": "",
                    "type": "address",
                    "internalType": "address"
                }
            ],
            "outputs": [
                {
                    "name": "",
                    "type": "uint256",
                    "internalType": "uint256"
                }
            ],
            "stateMutability": "view"
        },
        {
            "type": "function",
            "name": "approve",
            "inputs": [
                {
                    "name": "spender",
                    "type": "address",
                    "internalType": "address"
                },
                {
                    "name": "amount",
                    "type": "uint256",
                    "internalType": "uint256"
                }
            ],
            "outputs": [
                {
                    "name": "",
                    "type": "bool",
                    "internalType": "bool"
                }
            ],
            "stateMutability": "nonpayable"
        },
        {
            "type": "function",
            "name": "balanceOf",
            "inputs": [
                {
                    "name": "",
                    "type": "address",
                    "internalType": "address"
                }
            ],
            "outputs": [
                {
                    "name": "",
                    "type": "uint256",
                    "internalType": "uint256"
                }
            ],
            "stateMutability": "view"
        },
        {
            "type": "function",
            "name": "beforeAddLiquidity",
            "inputs": [
                {
                    "name": "",
                    "type": "address",
                    "internalType": "address"
                },
                {
                    "name": "",
                    "type": "tuple",
                    "internalType": "struct PoolKey",
                    "components": [
                        {
                            "name": "currency0",
                            "type": "address",
                            "internalType": "Currency"
                        },
                        {
                            "name": "currency1",
                            "type": "address",
                            "internalType": "Currency"
                        },
                        {
                            "name": "fee",
                            "type": "uint24",
                            "internalType": "uint24"
                        },
                        {
                            "name": "tickSpacing",
                            "type": "int24",
                            "internalType": "int24"
                        },
                        {
                            "name": "hooks",
                            "type": "address",
                            "internalType": "contract IHooks"
                        }
                    ]
                },
                {
                    "name": "",
                    "type": "tuple",
                    "internalType": "struct IPoolManager.ModifyLiquidityParams",
                    "components": [
                        {
                            "name": "tickLower",
                            "type": "int24",
                            "internalType": "int24"
                        },
                        {
                            "name": "tickUpper",
                            "type": "int24",
                            "internalType": "int24"
                        },
                        {
                            "name": "liquidityDelta",
                            "type": "int256",
                            "internalType": "int256"
                        },
                        {
                            "name": "salt",
                            "type": "bytes32",
                            "internalType": "bytes32"
                        }
                    ]
                },
                {
                    "name": "",
                    "type": "bytes",
                    "internalType": "bytes"
                }
            ],
            "outputs": [
                {
                    "name": "",
                    "type": "bytes4",
                    "internalType": "bytes4"
                }
            ],
            "stateMutability": "nonpayable"
        },
        {
            "type": "function",
            "name": "beforeDonate",
            "inputs": [
                {
                    "name": "",
                    "type": "address",
                    "internalType": "address"
                },
                {
                    "name": "",
                    "type": "tuple",
                    "internalType": "struct PoolKey",
                    "components": [
                        {
                            "name": "currency0",
                            "type": "address",
                            "internalType": "Currency"
                        },
                        {
                            "name": "currency1",
                            "type": "address",
                            "internalType": "Currency"
                        },
                        {
                            "name": "fee",
                            "type": "uint24",
                            "internalType": "uint24"
                        },
                        {
                            "name": "tickSpacing",
                            "type": "int24",
                            "internalType": "int24"
                        },
                        {
                            "name": "hooks",
                            "type": "address",
                            "internalType": "contract IHooks"
                        }
                    ]
                },
                {
                    "name": "",
                    "type": "uint256",
                    "internalType": "uint256"
                },
                {
                    "name": "",
                    "type": "uint256",
                    "internalType": "uint256"
                },
                {
                    "name": "",
                    "type": "bytes",
                    "internalType": "bytes"
                }
            ],
            "outputs": [
                {
                    "name": "",
                    "type": "bytes4",
                    "internalType": "bytes4"
                }
            ],
            "stateMutability": "nonpayable"
        },
        {
            "type": "function",
            "name": "beforeInitialize",
            "inputs": [
                {
                    "name": "",
                    "type": "address",
                    "internalType": "address"
                },
                {
                    "name": "",
                    "type": "tuple",
                    "internalType": "struct PoolKey",
                    "components": [
                        {
                            "name": "currency0",
                            "type": "address",
                            "internalType": "Currency"
                        },
                        {
                            "name": "currency1",
                            "type": "address",
                            "internalType": "Currency"
                        },
                        {
                            "name": "fee",
                            "type": "uint24",
                            "internalType": "uint24"
                        },
                        {
                            "name": "tickSpacing",
                            "type": "int24",
                            "internalType": "int24"
                        },
                        {
                            "name": "hooks",
                            "type": "address",
                            "internalType": "contract IHooks"
                        }
                    ]
                },
                {
                    "name": "",
                    "type": "uint160",
                    "internalType": "uint160"
                }
            ],
            "outputs": [
                {
                    "name": "",
                    "type": "bytes4",
                    "internalType": "bytes4"
                }
            ],
            "stateMutability": "nonpayable"
        },
        {
            "type": "function",
            "name": "beforeRemoveLiquidity",
            "inputs": [
                {
                    "name": "",
                    "type": "address",
                    "internalType": "address"
                },
                {
                    "name": "",
                    "type": "tuple",
                    "internalType": "struct PoolKey",
                    "components": [
                        {
                            "name": "currency0",
                            "type": "address",
                            "internalType": "Currency"
                        },
                        {
                            "name": "currency1",
                            "type": "address",
                            "internalType": "Currency"
                        },
                        {
                            "name": "fee",
                            "type": "uint24",
                            "internalType": "uint24"
                        },
                        {
                            "name": "tickSpacing",
                            "type": "int24",
                            "internalType": "int24"
                        },
                        {
                            "name": "hooks",
                            "type": "address",
                            "internalType": "contract IHooks"
                        }
                    ]
                },
                {
                    "name": "",
                    "type": "tuple",
                    "internalType": "struct IPoolManager.ModifyLiquidityParams",
                    "components": [
                        {
                            "name": "tickLower",
                            "type": "int24",
                            "internalType": "int24"
                        },
                        {
                            "name": "tickUpper",
                            "type": "int24",
                            "internalType": "int24"
                        },
                        {
                            "name": "liquidityDelta",
                            "type": "int256",
                            "internalType": "int256"
                        },
                        {
                            "name": "salt",
                            "type": "bytes32",
                            "internalType": "bytes32"
                        }
                    ]
                },
                {
                    "name": "",
                    "type": "bytes",
                    "internalType": "bytes"
                }
            ],
            "outputs": [
                {
                    "name": "",
                    "type": "bytes4",
                    "internalType": "bytes4"
                }
            ],
            "stateMutability": "nonpayable"
        },
        {
            "type": "function",
            "name": "beforeSwap",
            "inputs": [
                {
                    "name": "",
                    "type": "address",
                    "internalType": "address"
                },
                {
                    "name": "",
                    "type": "tuple",
                    "internalType": "struct PoolKey",
                    "components": [
                        {
                            "name": "currency0",
                            "type": "address",
                            "internalType": "Currency"
                        },
                        {
                            "name": "currency1",
                            "type": "address",
                            "internalType": "Currency"
                        },
                        {
                            "name": "fee",
                            "type": "uint24",
                            "internalType": "uint24"
                        },
                        {
                            "name": "tickSpacing",
                            "type": "int24",
                            "internalType": "int24"
                        },
                        {
                            "name": "hooks",
                            "type": "address",
                            "internalType": "contract IHooks"
                        }
                    ]
                },
                {
                    "name": "",
                    "type": "tuple",
                    "internalType": "struct IPoolManager.SwapParams",
                    "components": [
                        {
                            "name": "zeroForOne",
                            "type": "bool",
                            "internalType": "bool"
                        },
                        {
                            "name": "amountSpecified",
                            "type": "int256",
                            "internalType": "int256"
                        },
                        {
                            "name": "sqrtPriceLimitX96",
                            "type": "uint160",
                            "internalType": "uint160"
                        }
                    ]
                },
                {
                    "name": "",
                    "type": "bytes",
                    "internalType": "bytes"
                }
            ],
            "outputs": [
                {
                    "name": "",
                    "type": "bytes4",
                    "internalType": "bytes4"
                },
                {
                    "name": "",
                    "type": "int256",
                    "internalType": "BeforeSwapDelta"
                },
                {
                    "name": "",
                    "type": "uint24",
                    "internalType": "uint24"
                }
            ],
            "stateMutability": "nonpayable"
        },
        {
            "type": "function",
            "name": "decimals",
            "inputs": [],
            "outputs": [
                {
                    "name": "",
                    "type": "uint8",
                    "internalType": "uint8"
                }
            ],
            "stateMutability": "view"
        },
        {
            "type": "function",
            "name": "getHookData",
            "inputs": [
                {
                    "name": "referrer",
                    "type": "address",
                    "internalType": "address"
                },
                {
                    "name": "referree",
                    "type": "address",
                    "internalType": "address"
                }
            ],
            "outputs": [
                {
                    "name": "",
                    "type": "bytes",
                    "internalType": "bytes"
                }
            ],
            "stateMutability": "pure"
        },
        {
            "type": "function",
            "name": "getHookPermissions",
            "inputs": [],
            "outputs": [
                {
                    "name": "",
                    "type": "tuple",
                    "internalType": "struct Hooks.Permissions",
                    "components": [
                        {
                            "name": "beforeInitialize",
                            "type": "bool",
                            "internalType": "bool"
                        },
                        {
                            "name": "afterInitialize",
                            "type": "bool",
                            "internalType": "bool"
                        },
                        {
                            "name": "beforeAddLiquidity",
                            "type": "bool",
                            "internalType": "bool"
                        },
                        {
                            "name": "afterAddLiquidity",
                            "type": "bool",
                            "internalType": "bool"
                        },
                        {
                            "name": "beforeRemoveLiquidity",
                            "type": "bool",
                            "internalType": "bool"
                        },
                        {
                            "name": "afterRemoveLiquidity",
                            "type": "bool",
                            "internalType": "bool"
                        },
                        {
                            "name": "beforeSwap",
                            "type": "bool",
                            "internalType": "bool"
                        },
                        {
                            "name": "afterSwap",
                            "type": "bool",
                            "internalType": "bool"
                        },
                        {
                            "name": "beforeDonate",
                            "type": "bool",
                            "internalType": "bool"
                        },
                        {
                            "name": "afterDonate",
                            "type": "bool",
                            "internalType": "bool"
                        },
                        {
                            "name": "beforeSwapReturnDelta",
                            "type": "bool",
                            "internalType": "bool"
                        },
                        {
                            "name": "afterSwapReturnDelta",
                            "type": "bool",
                            "internalType": "bool"
                        },
                        {
                            "name": "afterAddLiquidityReturnDelta",
                            "type": "bool",
                            "internalType": "bool"
                        },
                        {
                            "name": "afterRemoveLiquidityReturnDelta",
                            "type": "bool",
                            "internalType": "bool"
                        }
                    ]
                }
            ],
            "stateMutability": "pure"
        },
        {
            "type": "function",
            "name": "name",
            "inputs": [],
            "outputs": [
                {
                    "name": "",
                    "type": "string",
                    "internalType": "string"
                }
            ],
            "stateMutability": "view"
        },
        {
            "type": "function",
            "name": "nonces",
            "inputs": [
                {
                    "name": "",
                    "type": "address",
                    "internalType": "address"
                }
            ],
            "outputs": [
                {
                    "name": "",
                    "type": "uint256",
                    "internalType": "uint256"
                }
            ],
            "stateMutability": "view"
        },
        {
            "type": "function",
            "name": "permit",
            "inputs": [
                {
                    "name": "owner",
                    "type": "address",
                    "internalType": "address"
                },
                {
                    "name": "spender",
                    "type": "address",
                    "internalType": "address"
                },
                {
                    "name": "value",
                    "type": "uint256",
                    "internalType": "uint256"
                },
                {
                    "name": "deadline",
                    "type": "uint256",
                    "internalType": "uint256"
                },
                {
                    "name": "v",
                    "type": "uint8",
                    "internalType": "uint8"
                },
                {
                    "name": "r",
                    "type": "bytes32",
                    "internalType": "bytes32"
                },
                {
                    "name": "s",
                    "type": "bytes32",
                    "internalType": "bytes32"
                }
            ],
            "outputs": [],
            "stateMutability": "nonpayable"
        },
        {
            "type": "function",
            "name": "poolManager",
            "inputs": [],
            "outputs": [
                {
                    "name": "",
                    "type": "address",
                    "internalType": "contract IPoolManager"
                }
            ],
            "stateMutability": "view"
        },
        {
            "type": "function",
            "name": "referredBy",
            "inputs": [
                {
                    "name": "",
                    "type": "address",
                    "internalType": "address"
                }
            ],
            "outputs": [
                {
                    "name": "",
                    "type": "address",
                    "internalType": "address"
                }
            ],
            "stateMutability": "view"
        },
        {
            "type": "function",
            "name": "symbol",
            "inputs": [],
            "outputs": [
                {
                    "name": "",
                    "type": "string",
                    "internalType": "string"
                }
            ],
            "stateMutability": "view"
        },
        {
            "type": "function",
            "name": "totalSupply",
            "inputs": [],
            "outputs": [
                {
                    "name": "",
                    "type": "uint256",
                    "internalType": "uint256"
                }
            ],
            "stateMutability": "view"
        },
        {
            "type": "function",
            "name": "transfer",
            "inputs": [
                {
                    "name": "to",
                    "type": "address",
                    "internalType": "address"
                },
                {
                    "name": "amount",
                    "type": "uint256",
                    "internalType": "uint256"
                }
            ],
            "outputs": [
                {
                    "name": "",
                    "type": "bool",
                    "internalType": "bool"
                }
            ],
            "stateMutability": "nonpayable"
        },
        {
            "type": "function",
            "name": "transferFrom",
            "inputs": [
                {
                    "name": "from",
                    "type": "address",
                    "internalType": "address"
                },
                {
                    "name": "to",
                    "type": "address",
                    "internalType": "address"
                },
                {
                    "name": "amount",
                    "type": "uint256",
                    "internalType": "uint256"
                }
            ],
            "outputs": [
                {
                    "name": "",
                    "type": "bool",
                    "internalType": "bool"
                }
            ],
            "stateMutability": "nonpayable"
        },
        {
            "type": "function",
            "name": "unlockCallback",
            "inputs": [
                {
                    "name": "data",
                    "type": "bytes",
                    "internalType": "bytes"
                }
            ],
            "outputs": [
                {
                    "name": "",
                    "type": "bytes",
                    "internalType": "bytes"
                }
            ],
            "stateMutability": "nonpayable"
        },
        {
            "type": "event",
            "name": "Approval",
            "inputs": [
                {
                    "name": "owner",
                    "type": "address",
                    "indexed": true,
                    "internalType": "address"
                },
                {
                    "name": "spender",
                    "type": "address",
                    "indexed": true,
                    "internalType": "address"
                },
                {
                    "name": "amount",
                    "type": "uint256",
                    "indexed": false,
                    "internalType": "uint256"
                }
            ],
            "anonymous": false
        },
        {
            "type": "event",
            "name": "Transfer",
            "inputs": [
                {
                    "name": "from",
                    "type": "address",
                    "indexed": true,
                    "internalType": "address"
                },
                {
                    "name": "to",
                    "type": "address",
                    "indexed": true,
                    "internalType": "address"
                },
                {
                    "name": "amount",
                    "type": "uint256",
                    "indexed": false,
                    "internalType": "uint256"
                }
            ],
            "anonymous": false
        },
        {
            "type": "error",
            "name": "HookNotImplemented",
            "inputs": []
        },
        {
            "type": "error",
            "name": "InvalidPool",
            "inputs": []
        },
        {
            "type": "error",
            "name": "LockFailure",
            "inputs": []
        },
        {
            "type": "error",
            "name": "NotPoolManager",
            "inputs": []
        },
        {
            "type": "error",
            "name": "NotSelf",
            "inputs": []
        }
    ],
    "bytecode": {
        "object": "0x610100604052348015610010575f80fd5b50604051611dde380380611dde83398101604081905261002f91610413565b6001600160a01b038316608052818160128561004a30610086565b505f6100568482610519565b5060016100638382610519565b5060ff811660a0524660c052610077610179565b60e05250610644945050505050565b61017681610171604080516101c0810182525f80825260208201819052918101829052606081018290526080810182905260a0810182905260c0810182905260e08101829052610100810182905261012081018290526101408101829052610160810182905261018081018290526101a081019190915250604080516101c0810182525f808252602082018190529181018290526001606082018190526080820183905260a0820183905260c0820183905260e0820152610100810182905261012081018290526101408101829052610160810182905261018081018290526101a081019190915290565b610211565b50565b5f7f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f5f6040516101a991906105d3565b6040805191829003822060208301939093528101919091527fc89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc660608201524660808201523060a082015260c00160405160208183030381529060405280519060200120905090565b80511515612000831615151415806102355750602081015115156110008316151514155b8061024c5750604081015115156108008316151514155b806102635750606081015115156104008316151514155b8061027a5750608081015115156102008316151514155b80610291575060a081015115156101008316151514155b806102a7575060c0810151151560808316151514155b806102bd575060e0810151151560408316151514155b806102d45750610100810151151560208316151514155b806102eb5750610120810151151560108316151514155b806103025750610140810151151560088316151514155b806103195750610160810151151560048316151514155b806103305750610180810151151560028316151514155b8061034757506101a0810151151560018316151514155b1561035d5761035d630732d7b560e51b83610361565b5050565b815f526001600160a01b03811660045260245ffd5b634e487b7160e01b5f52604160045260245ffd5b5f82601f830112610399575f80fd5b81516001600160401b038111156103b2576103b2610376565b604051601f8201601f19908116603f011681016001600160401b03811182821017156103e0576103e0610376565b6040528181528382016020018510156103f7575f80fd5b8160208501602083015e5f918101602001919091529392505050565b5f805f60608486031215610425575f80fd5b83516001600160a01b038116811461043b575f80fd5b60208501519093506001600160401b03811115610456575f80fd5b6104628682870161038a565b604086015190935090506001600160401b0381111561047f575f80fd5b61048b8682870161038a565b9150509250925092565b600181811c908216806104a957607f821691505b6020821081036104c757634e487b7160e01b5f52602260045260245ffd5b50919050565b601f82111561051457805f5260205f20601f840160051c810160208510156104f25750805b601f840160051c820191505b81811015610511575f81556001016104fe565b50505b505050565b81516001600160401b0381111561053257610532610376565b610546816105408454610495565b846104cd565b6020601f821160018114610578575f83156105615750848201515b5f19600385901b1c1916600184901b178455610511565b5f84815260208120601f198516915b828110156105a75787850151825560209485019460019092019101610587565b50848210156105c457868401515f19600387901b60f8161c191681555b50505050600190811b01905550565b5f8083546105e081610495565b6001821680156105f7576001811461060c57610639565b60ff1983168652811515820286019350610639565b865f5260205f205f5b8381101561063157815488820152600190910190602001610615565b505081860193505b509195945050505050565b60805160a05160c05160e05161176061067e5f395f61080501525f6107d001525f61029901525f8181610575015261086b01526117605ff3fe608060405234801561000f575f80fd5b50600436106101bb575f3560e01c80637ecebe00116100f3578063b6a8b0fa11610093578063dc4c90d31161006e578063dc4c90d314610570578063dc98354e14610597578063dd62ed3e146105a5578063e1b4af6914610459575f80fd5b8063b6a8b0fa14610459578063c4e833ce14610467578063d505accf1461055b575f80fd5b80639f063efc116100ce5780639f063efc146103bd578063a9059cbb146103d0578063a90f8e9a146103e3578063b47b2fb114610423575f80fd5b80637ecebe001461038357806391dd7346146103a257806395d89b41146103b5575f80fd5b8063313ce5671161015e578063575e24b411610139578063575e24b4146102e55780636c2bbe7e146103235780636fe7e6eb1461035657806370a0823114610364575f80fd5b8063313ce567146102945780633644e515146102cd57806345865829146102d5575f80fd5b806318160ddd1161019957806318160ddd1461023e57806321d0ee701461025557806323b872dd14610281578063259982e514610255575f80fd5b806306fdde03146101bf578063095ea7b3146101dd5780631783e86514610200575b5f80fd5b6101c76105cf565b6040516101d49190610f82565b60405180910390f35b6101f06101eb366004610fab565b61065a565b60405190151581526020016101d4565b6101c761020e366004610fd5565b604080516001600160a01b0393841660208201529190921681830152815180820383018152606090910190915290565b61024760025481565b6040519081526020016101d4565b610268610263366004611077565b6106c6565b6040516001600160e01b031990911681526020016101d4565b6101f061028f3660046110ee565b6106e0565b6102bb7f000000000000000000000000000000000000000000000000000000000000000081565b60405160ff90911681526020016101d4565b6102476107cd565b610247681b1ae4d6e2ef50000081565b6102f86102f336600461113c565b610827565b604080516001600160e01b03199094168452602084019290925262ffffff16908201526060016101d4565b610336610331366004611196565b610843565b604080516001600160e01b031990931683526020830191909152016101d4565b610268610263366004611221565b610247610372366004611280565b60036020525f908152604090205481565b610247610391366004611280565b60056020525f908152604090205481565b6101c76103b036600461129b565b61085e565b6101c76108ba565b6103366103cb366004611196565b6108c7565b6101f06103de366004610fab565b61093a565b61040b6103f1366004611280565b60066020525f90815260409020546001600160a01b031681565b6040516001600160a01b0390911681526020016101d4565b6104366104313660046112da565b6109b0565b604080516001600160e01b03199093168352600f9190910b6020830152016101d4565b61026861026336600461135b565b61054e604080516101c0810182525f80825260208201819052918101829052606081018290526080810182905260a0810182905260c0810182905260e08101829052610100810182905261012081018290526101408101829052610160810182905261018081018290526101a081019190915250604080516101c0810182525f808252602082018190529181018290526001606082018190526080820183905260a0820183905260c0820183905260e0820152610100810182905261012081018290526101408101829052610160810182905261018081018290526101a081019190915290565b6040516101d491906113b5565b61056e6105693660046114d6565b610a63565b005b61040b7f000000000000000000000000000000000000000000000000000000000000000081565b610268610263366004611547565b6102476105b3366004610fd5565b600460209081525f928352604080842090915290825290205481565b5f80546105db9061158e565b80601f01602080910402602001604051908101604052809291908181526020018280546106079061158e565b80156106525780601f1061062957610100808354040283529160200191610652565b820191905f5260205f20905b81548152906001019060200180831161063557829003601f168201915b505050505081565b335f8181526004602090815260408083206001600160a01b038716808552925280832085905551919290917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925906106b49086815260200190565b60405180910390a35060015b92915050565b5f604051630a85dc2960e01b815260040160405180910390fd5b6001600160a01b0383165f9081526004602090815260408083203384529091528120545f1981146107395761071583826115d4565b6001600160a01b0386165f9081526004602090815260408083203384529091529020555b6001600160a01b0385165f90815260036020526040812080548592906107609084906115d4565b90915550506001600160a01b038085165f81815260036020526040908190208054870190555190918716907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef906107ba9087815260200190565b60405180910390a3506001949350505050565b5f7f00000000000000000000000000000000000000000000000000000000000000004614610802576107fd610cb5565b905090565b507f000000000000000000000000000000000000000000000000000000000000000090565b5f805f604051630a85dc2960e01b815260040160405180910390fd5b5f80604051630a85dc2960e01b815260040160405180910390fd5b6060336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146108a95760405163570c108560e11b815260040160405180910390fd5b6108b38383610d4d565b9392505050565b600180546105db9061158e565b5f806108e66108d960208a018a611280565b6001600160a01b03161590565b6108fb57506327c18fbf60e21b90508461092e565b5f6109068760801d90565b61090f906115e7565b600f0b905061091f858583610de6565b506327c18fbf60e21b91508590505b97509795505050505050565b335f9081526003602052604081208054839190839061095a9084906115d4565b90915550506001600160a01b0383165f81815260036020526040908190208054850190555133907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef906106b49086815260200190565b5f806109c26108d96020890189611280565b6109d7575063b47b2fb160e01b90505f610a58565b6109e46020870187611614565b6109f9575063b47b2fb160e01b90505f610a58565b5f80876020013512610a2057610a0f8660801d90565b610a18906115e7565b600f0b610a2d565b610a2d6020880135611633565b90505f610a3b60058361164d565b9050610a48868683610de6565b5063b47b2fb160e01b92505f9150505b965096945050505050565b42841015610ab85760405162461bcd60e51b815260206004820152601760248201527f5045524d49545f444541444c494e455f4558504952454400000000000000000060448201526064015b60405180910390fd5b5f6001610ac36107cd565b6001600160a01b038a81165f8181526005602090815260409182902080546001810190915582517f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c98184015280840194909452938d166060840152608083018c905260a083019390935260c08083018b90528151808403909101815260e08301909152805192019190912061190160f01b6101008301526101028201929092526101228101919091526101420160408051601f1981840301815282825280516020918201205f84529083018083525260ff871690820152606081018590526080810184905260a0016020604051602081039080840390855afa158015610bcb573d5f803e3d5ffd5b5050604051601f1901519150506001600160a01b03811615801590610c015750876001600160a01b0316816001600160a01b0316145b610c4d5760405162461bcd60e51b815260206004820152600e60248201527f494e56414c49445f5349474e45520000000000000000000000000000000000006044820152606401610aaf565b6001600160a01b039081165f9081526004602090815260408083208a8516808552908352928190208990555188815291928a16917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a350505050505050565b5f7f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f5f604051610ce5919061166c565b6040805191829003822060208301939093528101919091527fc89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc660608201524660808201523060a082015260c00160405160208183030381529060405280519060200120905090565b60605f80306001600160a01b03168585604051610d6b929190611708565b5f604051808303815f865af19150503d805f8114610da4576040519150601f19603f3d011682016040523d82523d5f602084013e610da9565b606091505b50915091508115610dbd5791506106c09050565b80515f03610dde576040516314815f4760e31b815260040160405180910390fd5b805160208201fd5b5f829003610df357505050565b5f80610e0184860186610fd5565b90925090506001600160a01b038116610e1b575050505050565b6001600160a01b038181165f9081526006602052604090205416158015610e4a57506001600160a01b03821615155b15610ea7576001600160a01b038181165f90815260066020526040902080547fffffffffffffffffffffffff000000000000000000000000000000000000000016918416919091179055610ea782681b1ae4d6e2ef500000610eeb565b6001600160a01b038181165f908152600660205260409020541615610eda57610eda82610ed5600a8661164d565b610eeb565b610ee48184610eeb565b5050505050565b8060025f828254610efc9190611717565b90915550506001600160a01b0382165f818152600360209081526040808320805486019055518481527fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a35050565b5f81518084528060208401602086015e5f602082860101526020601f19601f83011685010191505092915050565b602081525f6108b36020830184610f54565b6001600160a01b0381168114610fa8575f80fd5b50565b5f8060408385031215610fbc575f80fd5b8235610fc781610f94565b946020939093013593505050565b5f8060408385031215610fe6575f80fd5b8235610ff181610f94565b9150602083013561100181610f94565b809150509250929050565b5f60a0828403121561101c575f80fd5b50919050565b5f6080828403121561101c575f80fd5b5f8083601f840112611042575f80fd5b50813567ffffffffffffffff811115611059575f80fd5b602083019150836020828501011115611070575f80fd5b9250929050565b5f805f805f610160868803121561108c575f80fd5b853561109781610f94565b94506110a6876020880161100c565b93506110b58760c08801611022565b925061014086013567ffffffffffffffff8111156110d1575f80fd5b6110dd88828901611032565b969995985093965092949392505050565b5f805f60608486031215611100575f80fd5b833561110b81610f94565b9250602084013561111b81610f94565b929592945050506040919091013590565b5f6060828403121561101c575f80fd5b5f805f805f6101408688031215611151575f80fd5b853561115c81610f94565b945061116b876020880161100c565b935061117a8760c0880161112c565b925061012086013567ffffffffffffffff8111156110d1575f80fd5b5f805f805f805f6101a0888a0312156111ad575f80fd5b87356111b881610f94565b96506111c78960208a0161100c565b95506111d68960c08a01611022565b94506101408801359350610160880135925061018088013567ffffffffffffffff811115611202575f80fd5b61120e8a828b01611032565b989b979a50959850939692959293505050565b5f805f806101008587031215611235575f80fd5b843561124081610f94565b935061124f866020870161100c565b925060c085013561125f81610f94565b915060e0850135600281900b8114611275575f80fd5b939692955090935050565b5f60208284031215611290575f80fd5b81356108b381610f94565b5f80602083850312156112ac575f80fd5b823567ffffffffffffffff8111156112c2575f80fd5b6112ce85828601611032565b90969095509350505050565b5f805f805f8061016087890312156112f0575f80fd5b86356112fb81610f94565b955061130a886020890161100c565b94506113198860c0890161112c565b9350610120870135925061014087013567ffffffffffffffff81111561133d575f80fd5b61134989828a01611032565b979a9699509497509295939492505050565b5f805f805f806101208789031215611371575f80fd5b863561137c81610f94565b955061138b886020890161100c565b945060c0870135935060e0870135925061010087013567ffffffffffffffff81111561133d575f80fd5b8151151581526101c0810160208301516113d3602084018215159052565b5060408301516113e7604084018215159052565b5060608301516113fb606084018215159052565b50608083015161140f608084018215159052565b5060a083015161142360a084018215159052565b5060c083015161143760c084018215159052565b5060e083015161144b60e084018215159052565b5061010083015161146161010084018215159052565b5061012083015161147761012084018215159052565b5061014083015161148d61014084018215159052565b506101608301516114a361016084018215159052565b506101808301516114b961018084018215159052565b506101a08301516114cf6101a084018215159052565b5092915050565b5f805f805f805f60e0888a0312156114ec575f80fd5b87356114f781610f94565b9650602088013561150781610f94565b95506040880135945060608801359350608088013560ff8116811461152a575f80fd5b9699959850939692959460a0840135945060c09093013592915050565b5f805f60e08486031215611559575f80fd5b833561156481610f94565b9250611573856020860161100c565b915060c084013561158381610f94565b809150509250925092565b600181811c908216806115a257607f821691505b60208210810361101c57634e487b7160e01b5f52602260045260245ffd5b634e487b7160e01b5f52601160045260245ffd5b818103818111156106c0576106c06115c0565b5f81600f0b6f7fffffffffffffffffffffffffffffff19810361160c5761160c6115c0565b5f0392915050565b5f60208284031215611624575f80fd5b813580151581146108b3575f80fd5b5f600160ff1b8201611647576116476115c0565b505f0390565b5f8261166757634e487b7160e01b5f52601260045260245ffd5b500490565b5f8083545f8160011c9050600182168061168757607f821691505b6020821081036116a557634e487b7160e01b5f52602260045260245ffd5b8080156116b957600181146116ce576116fc565b60ff19841687528215158302870194506116fc565b5f888152602090205f5b848110156116f4578154898201526001909101906020016116d8565b505082870194505b50929695505050505050565b818382375f9101908152919050565b808201808211156106c0576106c06115c056fea2646970667358221220a4a8b6d6bf7a30167af2a7b76c0de7d4518e650a1fae43706367eb0acd59016564736f6c634300081a0033",
        "sourceMap": "500:5161:108:-:0;;;1035:156;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;451:26:104;;;;1169:5:108;1176:7;1185:2;1153:8;854:25:106::1;874:4;854:19;:25::i;:::-;-1:-1:-1::0;2094:4:40;:12;2101:5;2094:4;:12;:::i;:::-;-1:-1:-1;2116:6:40;:16;2125:7;2116:6;:16;:::i;:::-;-1:-1:-1;2142:20:40;;;;;2192:13;2173:32;;2242:24;:22;:24::i;:::-;2215:51;;-1:-1:-1;500:5161:108;;-1:-1:-1;;;;;500:5161:108;1842:142:106;1919:58;1949:5;1956:20;500:5161:108;;;;;;;;-1:-1:-1;500:5161:108;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1496:630:108;;;;;;;;-1:-1:-1;1496:630:108;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1345:788;1956:20:106;1919:29;:58::i;:::-;1842:142;:::o;5510:446:40:-;5575:7;5672:95;5805:4;5789:22;;;;;;:::i;:::-;;;;;;;;;;5640:295;;;5197:25:113;;;;5238:18;;5231:34;;;;5833:14:40;5281:18:113;;;5274:34;5869:13:40;5324:18:113;;;5317:34;5912:4:40;5367:19:113;;;5360:61;5169:19;;5640:295:40;;;;;;;;;;;;5613:336;;;;;;5594:355;;5510:446;:::o;3584:1599:65:-;3703:28;;:74;;1319:7;16358:29;;:34;;3703:74;;;:166;;-1:-1:-1;3797:27:65;;;;:72;;1382:7;16358:29;;:34;;3797:72;;3703:166;:265;;;-1:-1:-1;3889:30:65;;;;:79;;1450:7;16358:29;;:34;;3889:79;;3703:265;:362;;;-1:-1:-1;3988:29:65;;;;:77;;1516:7;16358:29;;:34;;3988:77;;3703:362;:467;;;-1:-1:-1;4085:33:65;;;;:85;;1587:6;16358:29;;:34;;4085:85;;3703:467;:570;;;-1:-1:-1;4190:32:65;;;;:83;;1655:6;16358:29;;:34;;4190:83;;3703:570;:652;;;-1:-1:-1;4293:22:65;;;;:62;;1713:6;16358:29;;:34;;4293:62;;3703:652;:732;;;-1:-1:-1;4375:21:65;;;;:60;;1769:6;16358:29;;:34;;4375:60;;3703:732;:818;;;-1:-1:-1;4455:24:65;;;;:66;;1829:6;16358:29;;:34;;4455:66;;3703:818;:902;;;-1:-1:-1;4541:23:65;;;;:64;;1887:6;16358:29;;:34;;4541:64;;3703:902;:1009;;;-1:-1:-1;4625:33:65;;;;:87;;1959:6;16358:29;;:34;;4625:87;;3703:1009;:1114;;;-1:-1:-1;4732:32:65;;;;:85;;2029:6;16358:29;;:34;;4732:85;;3703:1114;:1236;;;-1:-1:-1;4837:40:65;;;;:102;;2108:6;16358:29;;:34;;4837:102;;3703:1236;:1384;;;-1:-1:-1;4959:43:65;;;;:128;;2190:6;16358:29;;:34;;4959:128;;3703:1384;3686:1491;;;5112:54;-1:-1:-1;;;5160:4:65;5112:39;:54::i;:::-;3584:1599;;:::o;862:257:61:-;986:8;983:1;976:19;-1:-1:-1;;;;;1025:4:61;1021:53;1015:4;1008:67;1098:4;1095:1;1088:15;14:127:113;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:723;200:5;253:3;246:4;238:6;234:17;230:27;220:55;;271:1;268;261:12;220:55;298:13;;-1:-1:-1;;;;;323:30:113;;320:56;;;356:18;;:::i;:::-;405:2;399:9;497:2;459:17;;-1:-1:-1;;455:31:113;;;488:2;451:40;447:54;435:67;;-1:-1:-1;;;;;517:34:113;;553:22;;;514:62;511:88;;;579:18;;:::i;:::-;615:2;608:22;639;;;680:19;;;701:4;676:30;673:39;-1:-1:-1;670:59:113;;;725:1;722;715:12;670:59;782:6;775:4;767:6;763:17;756:4;748:6;744:17;738:51;837:1;809:19;;;830:4;805:30;798:41;;;;813:6;146:723;-1:-1:-1;;;146:723:113:o;874:746::-;1004:6;1012;1020;1073:2;1061:9;1052:7;1048:23;1044:32;1041:52;;;1089:1;1086;1079:12;1041:52;1115:16;;-1:-1:-1;;;;;1160:31:113;;1150:42;;1140:70;;1206:1;1203;1196:12;1140:70;1278:2;1263:18;;1257:25;1229:5;;-1:-1:-1;;;;;;1294:30:113;;1291:50;;;1337:1;1334;1327:12;1291:50;1360:61;1413:7;1404:6;1393:9;1389:22;1360:61;:::i;:::-;1467:2;1452:18;;1446:25;1350:71;;-1:-1:-1;1446:25:113;-1:-1:-1;;;;;;1483:32:113;;1480:52;;;1528:1;1525;1518:12;1480:52;1551:63;1606:7;1595:8;1584:9;1580:24;1551:63;:::i;:::-;1541:73;;;874:746;;;;;:::o;1625:380::-;1704:1;1700:12;;;;1747;;;1768:61;;1822:4;1814:6;1810:17;1800:27;;1768:61;1875:2;1867:6;1864:14;1844:18;1841:38;1838:161;;1921:10;1916:3;1912:20;1909:1;1902:31;1956:4;1953:1;1946:15;1984:4;1981:1;1974:15;1838:161;;1625:380;;;:::o;2136:518::-;2238:2;2233:3;2230:11;2227:421;;;2274:5;2271:1;2264:16;2318:4;2315:1;2305:18;2388:2;2376:10;2372:19;2369:1;2365:27;2359:4;2355:38;2424:4;2412:10;2409:20;2406:47;;;-1:-1:-1;2447:4:113;2406:47;2502:2;2497:3;2493:12;2490:1;2486:20;2480:4;2476:31;2466:41;;2557:81;2575:2;2568:5;2565:13;2557:81;;;2634:1;2620:16;;2601:1;2590:13;2557:81;;;2561:3;;2227:421;2136:518;;;:::o;2830:1299::-;2950:10;;-1:-1:-1;;;;;2972:30:113;;2969:56;;;3005:18;;:::i;:::-;3034:97;3124:6;3084:38;3116:4;3110:11;3084:38;:::i;:::-;3078:4;3034:97;:::i;:::-;3180:4;3211:2;3200:14;;3228:1;3223:649;;;;3916:1;3933:6;3930:89;;;-1:-1:-1;3985:19:113;;;3979:26;3930:89;-1:-1:-1;;2787:1:113;2783:11;;;2779:24;2775:29;2765:40;2811:1;2807:11;;;2762:57;4032:81;;3193:930;;3223:649;2083:1;2076:14;;;2120:4;2107:18;;-1:-1:-1;;3259:20:113;;;3377:222;3391:7;3388:1;3385:14;3377:222;;;3473:19;;;3467:26;3452:42;;3580:4;3565:20;;;;3533:1;3521:14;;;;3407:12;3377:222;;;3381:3;3627:6;3618:7;3615:19;3612:201;;;3688:19;;;3682:26;-1:-1:-1;;3771:1:113;3767:14;;;3783:3;3763:24;3759:37;3755:42;3740:58;3725:74;;3612:201;-1:-1:-1;;;;3859:1:113;3843:14;;;3839:22;3826:36;;-1:-1:-1;2830:1299:113:o;4134:799::-;4264:3;4293:1;4326:6;4320:13;4356:36;4382:9;4356:36;:::i;:::-;4423:1;4408:17;;4434:133;;;;4581:1;4576:332;;;;4401:507;;4434:133;-1:-1:-1;;4467:24:113;;4455:37;;4540:14;;4533:22;4521:35;;4512:45;;;-1:-1:-1;4434:133:113;;4576:332;4607:6;4604:1;4597:17;4655:4;4652:1;4642:18;4682:1;4696:166;4710:6;4707:1;4704:13;4696:166;;;4790:14;;4777:11;;;4770:35;4846:1;4833:15;;;;4732:4;4725:12;4696:166;;;4700:3;;4891:6;4886:3;4882:16;4875:23;;4401:507;-1:-1:-1;4924:3:113;;4134:799;-1:-1:-1;;;;;4134:799:113:o;4938:489::-;500:5161:108;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;",
        "linkReferences": {}
    },
    "deployedBytecode": {
        "object": "0x608060405234801561000f575f80fd5b50600436106101bb575f3560e01c80637ecebe00116100f3578063b6a8b0fa11610093578063dc4c90d31161006e578063dc4c90d314610570578063dc98354e14610597578063dd62ed3e146105a5578063e1b4af6914610459575f80fd5b8063b6a8b0fa14610459578063c4e833ce14610467578063d505accf1461055b575f80fd5b80639f063efc116100ce5780639f063efc146103bd578063a9059cbb146103d0578063a90f8e9a146103e3578063b47b2fb114610423575f80fd5b80637ecebe001461038357806391dd7346146103a257806395d89b41146103b5575f80fd5b8063313ce5671161015e578063575e24b411610139578063575e24b4146102e55780636c2bbe7e146103235780636fe7e6eb1461035657806370a0823114610364575f80fd5b8063313ce567146102945780633644e515146102cd57806345865829146102d5575f80fd5b806318160ddd1161019957806318160ddd1461023e57806321d0ee701461025557806323b872dd14610281578063259982e514610255575f80fd5b806306fdde03146101bf578063095ea7b3146101dd5780631783e86514610200575b5f80fd5b6101c76105cf565b6040516101d49190610f82565b60405180910390f35b6101f06101eb366004610fab565b61065a565b60405190151581526020016101d4565b6101c761020e366004610fd5565b604080516001600160a01b0393841660208201529190921681830152815180820383018152606090910190915290565b61024760025481565b6040519081526020016101d4565b610268610263366004611077565b6106c6565b6040516001600160e01b031990911681526020016101d4565b6101f061028f3660046110ee565b6106e0565b6102bb7f000000000000000000000000000000000000000000000000000000000000000081565b60405160ff90911681526020016101d4565b6102476107cd565b610247681b1ae4d6e2ef50000081565b6102f86102f336600461113c565b610827565b604080516001600160e01b03199094168452602084019290925262ffffff16908201526060016101d4565b610336610331366004611196565b610843565b604080516001600160e01b031990931683526020830191909152016101d4565b610268610263366004611221565b610247610372366004611280565b60036020525f908152604090205481565b610247610391366004611280565b60056020525f908152604090205481565b6101c76103b036600461129b565b61085e565b6101c76108ba565b6103366103cb366004611196565b6108c7565b6101f06103de366004610fab565b61093a565b61040b6103f1366004611280565b60066020525f90815260409020546001600160a01b031681565b6040516001600160a01b0390911681526020016101d4565b6104366104313660046112da565b6109b0565b604080516001600160e01b03199093168352600f9190910b6020830152016101d4565b61026861026336600461135b565b61054e604080516101c0810182525f80825260208201819052918101829052606081018290526080810182905260a0810182905260c0810182905260e08101829052610100810182905261012081018290526101408101829052610160810182905261018081018290526101a081019190915250604080516101c0810182525f808252602082018190529181018290526001606082018190526080820183905260a0820183905260c0820183905260e0820152610100810182905261012081018290526101408101829052610160810182905261018081018290526101a081019190915290565b6040516101d491906113b5565b61056e6105693660046114d6565b610a63565b005b61040b7f000000000000000000000000000000000000000000000000000000000000000081565b610268610263366004611547565b6102476105b3366004610fd5565b600460209081525f928352604080842090915290825290205481565b5f80546105db9061158e565b80601f01602080910402602001604051908101604052809291908181526020018280546106079061158e565b80156106525780601f1061062957610100808354040283529160200191610652565b820191905f5260205f20905b81548152906001019060200180831161063557829003601f168201915b505050505081565b335f8181526004602090815260408083206001600160a01b038716808552925280832085905551919290917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925906106b49086815260200190565b60405180910390a35060015b92915050565b5f604051630a85dc2960e01b815260040160405180910390fd5b6001600160a01b0383165f9081526004602090815260408083203384529091528120545f1981146107395761071583826115d4565b6001600160a01b0386165f9081526004602090815260408083203384529091529020555b6001600160a01b0385165f90815260036020526040812080548592906107609084906115d4565b90915550506001600160a01b038085165f81815260036020526040908190208054870190555190918716907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef906107ba9087815260200190565b60405180910390a3506001949350505050565b5f7f00000000000000000000000000000000000000000000000000000000000000004614610802576107fd610cb5565b905090565b507f000000000000000000000000000000000000000000000000000000000000000090565b5f805f604051630a85dc2960e01b815260040160405180910390fd5b5f80604051630a85dc2960e01b815260040160405180910390fd5b6060336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146108a95760405163570c108560e11b815260040160405180910390fd5b6108b38383610d4d565b9392505050565b600180546105db9061158e565b5f806108e66108d960208a018a611280565b6001600160a01b03161590565b6108fb57506327c18fbf60e21b90508461092e565b5f6109068760801d90565b61090f906115e7565b600f0b905061091f858583610de6565b506327c18fbf60e21b91508590505b97509795505050505050565b335f9081526003602052604081208054839190839061095a9084906115d4565b90915550506001600160a01b0383165f81815260036020526040908190208054850190555133907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef906106b49086815260200190565b5f806109c26108d96020890189611280565b6109d7575063b47b2fb160e01b90505f610a58565b6109e46020870187611614565b6109f9575063b47b2fb160e01b90505f610a58565b5f80876020013512610a2057610a0f8660801d90565b610a18906115e7565b600f0b610a2d565b610a2d6020880135611633565b90505f610a3b60058361164d565b9050610a48868683610de6565b5063b47b2fb160e01b92505f9150505b965096945050505050565b42841015610ab85760405162461bcd60e51b815260206004820152601760248201527f5045524d49545f444541444c494e455f4558504952454400000000000000000060448201526064015b60405180910390fd5b5f6001610ac36107cd565b6001600160a01b038a81165f8181526005602090815260409182902080546001810190915582517f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c98184015280840194909452938d166060840152608083018c905260a083019390935260c08083018b90528151808403909101815260e08301909152805192019190912061190160f01b6101008301526101028201929092526101228101919091526101420160408051601f1981840301815282825280516020918201205f84529083018083525260ff871690820152606081018590526080810184905260a0016020604051602081039080840390855afa158015610bcb573d5f803e3d5ffd5b5050604051601f1901519150506001600160a01b03811615801590610c015750876001600160a01b0316816001600160a01b0316145b610c4d5760405162461bcd60e51b815260206004820152600e60248201527f494e56414c49445f5349474e45520000000000000000000000000000000000006044820152606401610aaf565b6001600160a01b039081165f9081526004602090815260408083208a8516808552908352928190208990555188815291928a16917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a350505050505050565b5f7f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f5f604051610ce5919061166c565b6040805191829003822060208301939093528101919091527fc89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc660608201524660808201523060a082015260c00160405160208183030381529060405280519060200120905090565b60605f80306001600160a01b03168585604051610d6b929190611708565b5f604051808303815f865af19150503d805f8114610da4576040519150601f19603f3d011682016040523d82523d5f602084013e610da9565b606091505b50915091508115610dbd5791506106c09050565b80515f03610dde576040516314815f4760e31b815260040160405180910390fd5b805160208201fd5b5f829003610df357505050565b5f80610e0184860186610fd5565b90925090506001600160a01b038116610e1b575050505050565b6001600160a01b038181165f9081526006602052604090205416158015610e4a57506001600160a01b03821615155b15610ea7576001600160a01b038181165f90815260066020526040902080547fffffffffffffffffffffffff000000000000000000000000000000000000000016918416919091179055610ea782681b1ae4d6e2ef500000610eeb565b6001600160a01b038181165f908152600660205260409020541615610eda57610eda82610ed5600a8661164d565b610eeb565b610ee48184610eeb565b5050505050565b8060025f828254610efc9190611717565b90915550506001600160a01b0382165f818152600360209081526040808320805486019055518481527fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a35050565b5f81518084528060208401602086015e5f602082860101526020601f19601f83011685010191505092915050565b602081525f6108b36020830184610f54565b6001600160a01b0381168114610fa8575f80fd5b50565b5f8060408385031215610fbc575f80fd5b8235610fc781610f94565b946020939093013593505050565b5f8060408385031215610fe6575f80fd5b8235610ff181610f94565b9150602083013561100181610f94565b809150509250929050565b5f60a0828403121561101c575f80fd5b50919050565b5f6080828403121561101c575f80fd5b5f8083601f840112611042575f80fd5b50813567ffffffffffffffff811115611059575f80fd5b602083019150836020828501011115611070575f80fd5b9250929050565b5f805f805f610160868803121561108c575f80fd5b853561109781610f94565b94506110a6876020880161100c565b93506110b58760c08801611022565b925061014086013567ffffffffffffffff8111156110d1575f80fd5b6110dd88828901611032565b969995985093965092949392505050565b5f805f60608486031215611100575f80fd5b833561110b81610f94565b9250602084013561111b81610f94565b929592945050506040919091013590565b5f6060828403121561101c575f80fd5b5f805f805f6101408688031215611151575f80fd5b853561115c81610f94565b945061116b876020880161100c565b935061117a8760c0880161112c565b925061012086013567ffffffffffffffff8111156110d1575f80fd5b5f805f805f805f6101a0888a0312156111ad575f80fd5b87356111b881610f94565b96506111c78960208a0161100c565b95506111d68960c08a01611022565b94506101408801359350610160880135925061018088013567ffffffffffffffff811115611202575f80fd5b61120e8a828b01611032565b989b979a50959850939692959293505050565b5f805f806101008587031215611235575f80fd5b843561124081610f94565b935061124f866020870161100c565b925060c085013561125f81610f94565b915060e0850135600281900b8114611275575f80fd5b939692955090935050565b5f60208284031215611290575f80fd5b81356108b381610f94565b5f80602083850312156112ac575f80fd5b823567ffffffffffffffff8111156112c2575f80fd5b6112ce85828601611032565b90969095509350505050565b5f805f805f8061016087890312156112f0575f80fd5b86356112fb81610f94565b955061130a886020890161100c565b94506113198860c0890161112c565b9350610120870135925061014087013567ffffffffffffffff81111561133d575f80fd5b61134989828a01611032565b979a9699509497509295939492505050565b5f805f805f806101208789031215611371575f80fd5b863561137c81610f94565b955061138b886020890161100c565b945060c0870135935060e0870135925061010087013567ffffffffffffffff81111561133d575f80fd5b8151151581526101c0810160208301516113d3602084018215159052565b5060408301516113e7604084018215159052565b5060608301516113fb606084018215159052565b50608083015161140f608084018215159052565b5060a083015161142360a084018215159052565b5060c083015161143760c084018215159052565b5060e083015161144b60e084018215159052565b5061010083015161146161010084018215159052565b5061012083015161147761012084018215159052565b5061014083015161148d61014084018215159052565b506101608301516114a361016084018215159052565b506101808301516114b961018084018215159052565b506101a08301516114cf6101a084018215159052565b5092915050565b5f805f805f805f60e0888a0312156114ec575f80fd5b87356114f781610f94565b9650602088013561150781610f94565b95506040880135945060608801359350608088013560ff8116811461152a575f80fd5b9699959850939692959460a0840135945060c09093013592915050565b5f805f60e08486031215611559575f80fd5b833561156481610f94565b9250611573856020860161100c565b915060c084013561158381610f94565b809150509250925092565b600181811c908216806115a257607f821691505b60208210810361101c57634e487b7160e01b5f52602260045260245ffd5b634e487b7160e01b5f52601160045260245ffd5b818103818111156106c0576106c06115c0565b5f81600f0b6f7fffffffffffffffffffffffffffffff19810361160c5761160c6115c0565b5f0392915050565b5f60208284031215611624575f80fd5b813580151581146108b3575f80fd5b5f600160ff1b8201611647576116476115c0565b505f0390565b5f8261166757634e487b7160e01b5f52601260045260245ffd5b500490565b5f8083545f8160011c9050600182168061168757607f821691505b6020821081036116a557634e487b7160e01b5f52602260045260245ffd5b8080156116b957600181146116ce576116fc565b60ff19841687528215158302870194506116fc565b5f888152602090205f5b848110156116f4578154898201526001909101906020016116d8565b505082870194505b50929695505050505050565b818382375f9101908152919050565b808201808211156106c0576106c06115c056fea2646970667358221220a4a8b6d6bf7a30167af2a7b76c0de7d4518e650a1fae43706367eb0acd59016564736f6c634300081a0033",
        "sourceMap": "500:5161:108:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1031:18:40;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2461:211;;;;;;:::i;:::-;;:::i;:::-;;;1325:14:113;;1318:22;1300:41;;1288:2;1273:18;2461:211:40;1160:187:113;4307:168:108;;;;;;:::i;:::-;4438:30;;;-1:-1:-1;;;;;15559:55:113;;;4438:30:108;;;15541:74:113;15651:55;;;;15631:18;;;15624:83;4438:30:108;;;;;;;;;4407:12;15514:18:113;;;4438:30:108;;;;4307:168;1304:26:40;;;;;;;;;2114:25:113;;;2102:2;2087:18;1304:26:40;1968:177:113;3062:235:106;;;;;;:::i;:::-;;:::i;:::-;;;-1:-1:-1;;;;;;3834:33:113;;;3816:52;;3804:2;3789:18;3062:235:106;3672:202:113;3057:592:40;;;;;;:::i;:::-;;:::i;1083:31::-;;;;;;;;4564:4:113;4552:17;;;4534:36;;4522:2;4507:18;1083:31:40;4392:184:113;5327:177:40;;;:::i;931:60:108:-;;977:14;931:60;;3977:228:106;;;;;;:::i;:::-;;:::i;:::-;;;;-1:-1:-1;;;;;;5990:33:113;;;5972:52;;6055:2;6040:18;;6033:34;;;;6115:8;6103:21;6083:18;;;6076:49;5960:2;5945:18;3977:228:106;5738:393:113;3652:292:106;;;;;;:::i;:::-;;:::i;:::-;;;;-1:-1:-1;;;;;;7503:33:113;;;7485:52;;7568:2;7553:18;;7546:34;;;;7458:18;3652:292:106;7280:306:113;2628:146:106;;;;;;:::i;1337:44:40:-;;;;;;:::i;:::-;;;;;;;;;;;;;;1751:41;;;;;;:::i;:::-;;;;;;;;;;;;;;1018:138:105;;;;;;:::i;:::-;;:::i;1056:20:40:-;;;:::i;3503:798:108:-;;;;;;:::i;:::-;;:::i;2678:373:40:-;;;;;;:::i;:::-;;:::i;815:45:108:-;;;;;;:::i;:::-;;;;;;;;;;;;-1:-1:-1;;;;;815:45:108;;;;;;-1:-1:-1;;;;;9113:55:113;;;9095:74;;9083:2;9068:18;815:45:108;8949:226:113;2139:1358:108;;;;;;:::i;:::-;;:::i;:::-;;;;-1:-1:-1;;;;;;10335:33:113;;;10317:52;;10416:2;10405:22;;;;10400:2;10385:18;;10378:50;10290:18;2139:1358:108;10147:287:113;4495:189:106;;;;;;:::i;1345:788:108:-;;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1496:630:108;;;;;;;;-1:-1:-1;1496:630:108;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1345:788;;;;;;;;:::i;3838:1483:40:-;;;;;;:::i;:::-;;:::i;:::-;;354:41:104;;;;;2455:140:106;;;;;;:::i;1388:64:40:-;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;1031:18;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;2461:211::-;2561:10;2535:4;2551:21;;;:9;:21;;;;;;;;-1:-1:-1;;;;;2551:30:40;;;;;;;;;;:39;;;2606:37;2535:4;;2551:30;;2606:37;;;;2584:6;2114:25:113;;2102:2;2087:18;;1968:177;2606:37:40;;;;;;;;-1:-1:-1;2661:4:40;2461:211;;;;;:::o;3062:235:106:-;3245:6;3270:20;;-1:-1:-1;;;3270:20:106;;;;;;;;;;;3057:592:40;-1:-1:-1;;;;;3209:15:40;;3175:4;3209:15;;;:9;:15;;;;;;;;3225:10;3209:27;;;;;;;;-1:-1:-1;;3287:28:40;;3283:80;;3347:16;3357:6;3347:7;:16;:::i;:::-;-1:-1:-1;;;;;3317:15:40;;;;;;:9;:15;;;;;;;;3333:10;3317:27;;;;;;;:46;3283:80;-1:-1:-1;;;;;3374:15:40;;;;;;:9;:15;;;;;:25;;3393:6;;3374:15;:25;;3393:6;;3374:25;:::i;:::-;;;;-1:-1:-1;;;;;;;3545:13:40;;;;;;;:9;:13;;;;;;;:23;;;;;;3594:26;3545:13;;3594:26;;;;;;;3562:6;2114:25:113;;2102:2;2087:18;;1968:177;3594:26:40;;;;;;;;-1:-1:-1;3638:4:40;;3057:592;-1:-1:-1;;;;3057:592:40:o;5327:177::-;5384:7;5427:16;5410:13;:33;:87;;5473:24;:22;:24::i;:::-;5403:94;;5327:177;:::o;5410:87::-;-1:-1:-1;5446:24:40;;5327:177::o;3977:228:106:-;4124:6;4132:15;4149:6;4178:20;;-1:-1:-1;;;4178:20:106;;;;;;;;;;;3652:292;3878:6;3886:12;3917:20;;-1:-1:-1;;;3917:20:106;;;;;;;;;;;1018:138:105;1097:12;784:10;-1:-1:-1;;;;;806:11:105;784:34;;780:63;;827:16;;-1:-1:-1;;;827:16:105;;;;;;;;;;;780:63;1128:21:::1;1144:4;;1128:15;:21::i;:::-;1121:28:::0;1018:138;-1:-1:-1;;;1018:138:105:o;1056:20:40:-;;;;;;;:::i;3503:798:108:-;3771:6;;3884:29:::1;:13;;::::0;::::1;:3:::0;:13:::1;:::i;:::-;-1:-1:-1::0;;;;;3884:27:108::1;4958:58:95::0;;4870:153;3884:29:108::1;3879:83;;-1:-1:-1::0;;;;3923:31:108;-1:-1:-1;3956:5:108;3915:47:::1;;3879:83;4051:32;4102:15;:5;2107:3:93::0;2103:22;;1958:183;4102:15:108::1;4101:16;;;:::i;:::-;4094:24;;4051:68;;4187:49;4201:8;;4211:24;4187:13;:49::i;:::-;-1:-1:-1::0;;;;4255:31:108;-1:-1:-1;4288:5:108;;-1:-1:-1;1236:1:108::1;3503:798:::0;;;;;;;;;;:::o;2678:373:40:-;2774:10;2748:4;2764:21;;;:9;:21;;;;;:31;;2789:6;;2764:21;2748:4;;2764:31;;2789:6;;2764:31;:::i;:::-;;;;-1:-1:-1;;;;;;;2941:13:40;;;;;;:9;:13;;;;;;;:23;;;;;;2990:32;2999:10;;2990:32;;;;2958:6;2114:25:113;;2102:2;2087:18;;1968:177;2139:1358:108;2370:6;;2477:29:::1;:13;;::::0;::::1;:3:::0;:13:::1;:::i;:29::-;2472:71;;-1:-1:-1::0;;;;2516:23:108;-1:-1:-1;2541:1:108::1;2508:35;;2472:71;2623:21;;::::0;::::1;:10:::0;:21:::1;:::i;:::-;2618:63;;-1:-1:-1::0;;;;2654:23:108;-1:-1:-1;2679:1:108::1;2646:35;;2618:63;3132:22;3186:1:::0;3157:10:::1;:26;;;:30;:129;;3269:15;:5;2107:3:93::0;2103:22;;1958:183;3269:15:108::1;3268:16;;;:::i;:::-;3261:24;;3157:129;;;3210:27;3211:26;::::0;::::1;;3210:27;:::i;:::-;3132:154:::0;-1:-1:-1;3296:21:108::1;3320:18;3337:1;3132:154:::0;3320:18:::1;:::i;:::-;3296:42;;3406:38;3420:8;;3430:13;3406;:38::i;:::-;-1:-1:-1::0;;;;3463:23:108;-1:-1:-1;3488:1:108::1;::::0;-1:-1:-1;;1236:1:108::1;2139:1358:::0;;;;;;;;;:::o;3838:1483:40:-;4057:15;4045:8;:27;;4037:63;;;;-1:-1:-1;;;4037:63:40;;17326:2:113;4037:63:40;;;17308:21:113;17365:2;17345:18;;;17338:30;17404:25;17384:18;;;17377:53;17447:18;;4037:63:40;;;;;;;;;4265:24;4292:805;4428:18;:16;:18::i;:::-;-1:-1:-1;;;;;4873:13:40;;;;;;;:6;:13;;;;;;;;;:15;;;;;;;;4511:449;;4555:165;4511:449;;;17763:25:113;17804:18;;;17797:83;;;;17916:55;;;17896:18;;;17889:83;17988:18;;;17981:34;;;18031:19;;;18024:35;;;;18075:19;;;;18068:35;;;4511:449:40;;;;;;;;;;17735:19:113;;;4511:449:40;;;4472:514;;;;;;;;-1:-1:-1;;;4350:658:40;;;18372:27:113;18415:11;;;18408:27;;;;18451:12;;;18444:28;;;;18488:12;;4350:658:40;;;-1:-1:-1;;4350:658:40;;;;;;;;;4319:707;;4350:658;4319:707;;;;4292:805;;;;;;;;;18738:25:113;18811:4;18799:17;;18779:18;;;18772:45;18833:18;;;18826:34;;;18876:18;;;18869:34;;;18710:19;;4292:805:40;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;4292:805:40;;-1:-1:-1;;4292:805:40;;;-1:-1:-1;;;;;;;5120:30:40;;;;;;:59;;;5174:5;-1:-1:-1;;;;;5154:25:40;:16;-1:-1:-1;;;;;5154:25:40;;5120:59;5112:86;;;;-1:-1:-1;;;5112:86:40;;19116:2:113;5112:86:40;;;19098:21:113;19155:2;19135:18;;;19128:30;19194:16;19174:18;;;19167:44;19228:18;;5112:86:40;18914:338:113;5112:86:40;-1:-1:-1;;;;;5213:27:40;;;;;;;:9;:27;;;;;;;;:36;;;;;;;;;;;;;:44;;;5283:31;2114:25:113;;;5213:36:40;;5283:31;;;;;2087:18:113;5283:31:40;;;;;;;3838:1483;;;;;;;:::o;5510:446::-;5575:7;5672:95;5805:4;5789:22;;;;;;:::i;:::-;;;;;;;;;;5640:295;;;20733:25:113;;;;20774:18;;20767:34;;;;5833:14:40;20817:18:113;;;20810:34;5869:13:40;20860:18:113;;;20853:34;5912:4:40;20903:19:113;;;20896:84;20705:19;;5640:295:40;;;;;;;;;;;;5613:336;;;;;;5594:355;;5510:446;:::o;1990:432:106:-;2071:12;2096;2110:23;2145:4;-1:-1:-1;;;;;2137:18:106;2156:4;;2137:24;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2095:66;;;;2175:7;2171:30;;;2191:10;-1:-1:-1;2184:17:106;;-1:-1:-1;2184:17:106;2171:30;2215:10;:17;2236:1;2215:22;2211:48;;2246:13;;-1:-1:-1;;;2246:13:106;;;;;;;;;;;2211:48;2394:10;2388:17;2383:2;2371:10;2367:19;2360:46;4481:1178:108;4700:1;4681:20;;;4677:33;;4481:1178;;;:::o;4677:33::-;4775:16;;4813:74;;;;4837:8;4813:74;:::i;:::-;4774:113;;-1:-1:-1;4774:113:108;-1:-1:-1;;;;;;4953:22:108;;4949:35;;4977:7;;4481:1178;;;:::o;4949:35::-;-1:-1:-1;;;;;5200:20:108;;;5232:1;5200:20;;;:10;:20;;;;;;;:34;:60;;;;-1:-1:-1;;;;;;5238:22:108;;;;5200:60;5196:172;;;-1:-1:-1;;;;;5276:20:108;;;;;;;:10;:20;;;;;:31;;;;;;;;;;;;;5321:36;5276:31;977:14;5321:5;:36::i;:::-;-1:-1:-1;;;;;5449:20:108;;;5481:1;5449:20;;;:10;:20;;;;;;;:34;5445:101;;5499:36;5505:8;5515:19;5532:2;5515:14;:19;:::i;:::-;5499:5;:36::i;:::-;5621:31;5627:8;5637:14;5621:5;:31::i;:::-;4584:1075;;4481:1178;;;:::o;6150:325:40:-;6235:6;6220:11;;:21;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;;;6387:13:40;;;;;;:9;:13;;;;;;;;:23;;;;;;6436:32;2114:25:113;;;6436:32:40;;2087:18:113;6436:32:40;;;;;;;6150:325;;:::o;14:289:113:-;56:3;94:5;88:12;121:6;116:3;109:19;177:6;170:4;163:5;159:16;152:4;147:3;143:14;137:47;229:1;222:4;213:6;208:3;204:16;200:27;193:38;292:4;285:2;281:7;276:2;268:6;264:15;260:29;255:3;251:39;247:50;240:57;;;14:289;;;;:::o;308:220::-;457:2;446:9;439:21;420:4;477:45;518:2;507:9;503:18;495:6;477:45;:::i;533:154::-;-1:-1:-1;;;;;612:5:113;608:54;601:5;598:65;588:93;;677:1;674;667:12;588:93;533:154;:::o;692:367::-;760:6;768;821:2;809:9;800:7;796:23;792:32;789:52;;;837:1;834;827:12;789:52;876:9;863:23;895:31;920:5;895:31;:::i;:::-;945:5;1023:2;1008:18;;;;995:32;;-1:-1:-1;;;692:367:113:o;1352:388::-;1420:6;1428;1481:2;1469:9;1460:7;1456:23;1452:32;1449:52;;;1497:1;1494;1487:12;1449:52;1536:9;1523:23;1555:31;1580:5;1555:31;:::i;:::-;1605:5;-1:-1:-1;1662:2:113;1647:18;;1634:32;1675:33;1634:32;1675:33;:::i;:::-;1727:7;1717:17;;;1352:388;;;;;:::o;2150:156::-;2210:5;2255:3;2246:6;2241:3;2237:16;2233:26;2230:46;;;2272:1;2269;2262:12;2230:46;-1:-1:-1;2294:6:113;2150:156;-1:-1:-1;2150:156:113:o;2311:170::-;2385:5;2430:3;2421:6;2416:3;2412:16;2408:26;2405:46;;;2447:1;2444;2437:12;2486:347;2537:8;2547:6;2601:3;2594:4;2586:6;2582:17;2578:27;2568:55;;2619:1;2616;2609:12;2568:55;-1:-1:-1;2642:20:113;;2685:18;2674:30;;2671:50;;;2717:1;2714;2707:12;2671:50;2754:4;2746:6;2742:17;2730:29;;2806:3;2799:4;2790:6;2782;2778:19;2774:30;2771:39;2768:59;;;2823:1;2820;2813:12;2768:59;2486:347;;;;;:::o;2838:829::-;3005:6;3013;3021;3029;3037;3090:3;3078:9;3069:7;3065:23;3061:33;3058:53;;;3107:1;3104;3097:12;3058:53;3146:9;3133:23;3165:31;3190:5;3165:31;:::i;:::-;3215:5;-1:-1:-1;3239:63:113;3294:7;3289:2;3274:18;;3239:63;:::i;:::-;3229:73;;3321:78;3391:7;3385:3;3374:9;3370:19;3321:78;:::i;:::-;3311:88;;3450:3;3439:9;3435:19;3422:33;3478:18;3470:6;3467:30;3464:50;;;3510:1;3507;3500:12;3464:50;3549:58;3599:7;3590:6;3579:9;3575:22;3549:58;:::i;:::-;2838:829;;;;-1:-1:-1;2838:829:113;;-1:-1:-1;3626:8:113;;3523:84;2838:829;-1:-1:-1;;;2838:829:113:o;3879:508::-;3956:6;3964;3972;4025:2;4013:9;4004:7;4000:23;3996:32;3993:52;;;4041:1;4038;4031:12;3993:52;4080:9;4067:23;4099:31;4124:5;4099:31;:::i;:::-;4149:5;-1:-1:-1;4206:2:113;4191:18;;4178:32;4219:33;4178:32;4219:33;:::i;:::-;3879:508;;4271:7;;-1:-1:-1;;;4351:2:113;4336:18;;;;4323:32;;3879:508::o;4763:158::-;4826:5;4871:2;4862:6;4857:3;4853:16;4849:25;4846:45;;;4887:1;4884;4877:12;4926:807;5082:6;5090;5098;5106;5114;5167:3;5155:9;5146:7;5142:23;5138:33;5135:53;;;5184:1;5181;5174:12;5135:53;5223:9;5210:23;5242:31;5267:5;5242:31;:::i;:::-;5292:5;-1:-1:-1;5316:63:113;5371:7;5366:2;5351:18;;5316:63;:::i;:::-;5306:73;;5398:67;5457:7;5451:3;5440:9;5436:19;5398:67;:::i;:::-;5388:77;;5516:3;5505:9;5501:19;5488:33;5544:18;5536:6;5533:30;5530:50;;;5576:1;5573;5566:12;6136:1139;6389:6;6397;6405;6413;6421;6429;6437;6490:3;6478:9;6469:7;6465:23;6461:33;6458:53;;;6507:1;6504;6497:12;6458:53;6546:9;6533:23;6565:31;6590:5;6565:31;:::i;:::-;6615:5;-1:-1:-1;6639:63:113;6694:7;6689:2;6674:18;;6639:63;:::i;:::-;6629:73;;6721:78;6791:7;6785:3;6774:9;6770:19;6721:78;:::i;:::-;6711:88;-1:-1:-1;6872:3:113;6857:19;;6844:33;;-1:-1:-1;6976:3:113;6961:19;;6948:33;;-1:-1:-1;7058:3:113;7043:19;;7030:33;7086:18;7075:30;;7072:50;;;7118:1;7115;7108:12;7072:50;7157:58;7207:7;7198:6;7187:9;7183:22;7157:58;:::i;:::-;6136:1139;;;;-1:-1:-1;6136:1139:113;;-1:-1:-1;6136:1139:113;;;;7131:84;;-1:-1:-1;;;6136:1139:113:o;7591:687::-;7703:6;7711;7719;7727;7780:3;7768:9;7759:7;7755:23;7751:33;7748:53;;;7797:1;7794;7787:12;7748:53;7836:9;7823:23;7855:31;7880:5;7855:31;:::i;:::-;7905:5;-1:-1:-1;7929:63:113;7984:7;7979:2;7964:18;;7929:63;:::i;:::-;7919:73;;8044:3;8033:9;8029:19;8016:33;8058;8083:7;8058:33;:::i;:::-;8110:7;-1:-1:-1;8169:3:113;8154:19;;8141:33;8216:1;8205:22;;;8193:35;;8183:63;;8242:1;8239;8232:12;8183:63;7591:687;;;;-1:-1:-1;7591:687:113;;-1:-1:-1;;7591:687:113:o;8283:247::-;8342:6;8395:2;8383:9;8374:7;8370:23;8366:32;8363:52;;;8411:1;8408;8401:12;8363:52;8450:9;8437:23;8469:31;8494:5;8469:31;:::i;8535:409::-;8605:6;8613;8666:2;8654:9;8645:7;8641:23;8637:32;8634:52;;;8682:1;8679;8672:12;8634:52;8722:9;8709:23;8755:18;8747:6;8744:30;8741:50;;;8787:1;8784;8777:12;8741:50;8826:58;8876:7;8867:6;8856:9;8852:22;8826:58;:::i;:::-;8903:8;;8800:84;;-1:-1:-1;8535:409:113;-1:-1:-1;;;;8535:409:113:o;9180:962::-;9379:6;9387;9395;9403;9411;9419;9472:3;9460:9;9451:7;9447:23;9443:33;9440:53;;;9489:1;9486;9479:12;9440:53;9528:9;9515:23;9547:31;9572:5;9547:31;:::i;:::-;9597:5;-1:-1:-1;9621:63:113;9676:7;9671:2;9656:18;;9621:63;:::i;:::-;9611:73;;9703:67;9762:7;9756:3;9745:9;9741:19;9703:67;:::i;:::-;9693:77;-1:-1:-1;9843:3:113;9828:19;;9815:33;;-1:-1:-1;9925:3:113;9910:19;;9897:33;9953:18;9942:30;;9939:50;;;9985:1;9982;9975:12;9939:50;10024:58;10074:7;10065:6;10054:9;10050:22;10024:58;:::i;:::-;9180:962;;;;-1:-1:-1;9180:962:113;;-1:-1:-1;9180:962:113;;10101:8;;9180:962;-1:-1:-1;;;9180:962:113:o;10439:915::-;10573:6;10581;10589;10597;10605;10613;10666:3;10654:9;10645:7;10641:23;10637:33;10634:53;;;10683:1;10680;10673:12;10634:53;10722:9;10709:23;10741:31;10766:5;10741:31;:::i;:::-;10791:5;-1:-1:-1;10815:63:113;10870:7;10865:2;10850:18;;10815:63;:::i;:::-;10805:73;-1:-1:-1;10951:3:113;10936:19;;10923:33;;-1:-1:-1;11055:3:113;11040:19;;11027:33;;-1:-1:-1;11137:3:113;11122:19;;11109:33;11165:18;11154:30;;11151:50;;;11197:1;11194;11187:12;11359:1801;11582:13;;1134;1127:21;1115:34;;11553:3;11538:19;;11654:4;11646:6;11642:17;11636:24;11669:51;11714:4;11703:9;11699:20;11685:12;1134:13;1127:21;1115:34;;1064:91;11669:51;;11769:4;11761:6;11757:17;11751:24;11784:53;11831:4;11820:9;11816:20;11800:14;1134:13;1127:21;1115:34;;1064:91;11784:53;;11886:4;11878:6;11874:17;11868:24;11901:53;11948:4;11937:9;11933:20;11917:14;1134:13;1127:21;1115:34;;1064:91;11901:53;;12003:4;11995:6;11991:17;11985:24;12018:53;12065:4;12054:9;12050:20;12034:14;1134:13;1127:21;1115:34;;1064:91;12018:53;;12120:4;12112:6;12108:17;12102:24;12135:53;12182:4;12171:9;12167:20;12151:14;1134:13;1127:21;1115:34;;1064:91;12135:53;;12237:4;12229:6;12225:17;12219:24;12252:53;12299:4;12288:9;12284:20;12268:14;1134:13;1127:21;1115:34;;1064:91;12252:53;;12354:4;12346:6;12342:17;12336:24;12369:53;12416:4;12405:9;12401:20;12385:14;1134:13;1127:21;1115:34;;1064:91;12369:53;;12471:6;12463;12459:19;12453:26;12488:55;12535:6;12524:9;12520:22;12504:14;1134:13;1127:21;1115:34;;1064:91;12488:55;;12592:6;12584;12580:19;12574:26;12609:55;12656:6;12645:9;12641:22;12625:14;1134:13;1127:21;1115:34;;1064:91;12609:55;;12713:6;12705;12701:19;12695:26;12730:55;12777:6;12766:9;12762:22;12746:14;1134:13;1127:21;1115:34;;1064:91;12730:55;;12835:6;12827;12823:19;12817:26;12852:56;12900:6;12889:9;12885:22;12868:15;1134:13;1127:21;1115:34;;1064:91;12852:56;;12958:6;12950;12946:19;12940:26;12975:56;13023:6;13012:9;13008:22;12991:15;1134:13;1127:21;1115:34;;1064:91;12975:56;;13081:6;13073;13069:19;13063:26;13098:56;13146:6;13135:9;13131:22;13114:15;1134:13;1127:21;1115:34;;1064:91;13098:56;;11359:1801;;;;:::o;13165:1037::-;13276:6;13284;13292;13300;13308;13316;13324;13377:3;13365:9;13356:7;13352:23;13348:33;13345:53;;;13394:1;13391;13384:12;13345:53;13433:9;13420:23;13452:31;13477:5;13452:31;:::i;:::-;13502:5;-1:-1:-1;13559:2:113;13544:18;;13531:32;13572:33;13531:32;13572:33;:::i;:::-;13624:7;-1:-1:-1;13704:2:113;13689:18;;13676:32;;-1:-1:-1;13807:2:113;13792:18;;13779:32;;-1:-1:-1;13889:3:113;13874:19;;13861:33;13938:4;13925:18;;13913:31;;13903:59;;13958:1;13955;13948:12;13903:59;13165:1037;;;;-1:-1:-1;13165:1037:113;;;;13981:7;14061:3;14046:19;;14033:33;;-1:-1:-1;14165:3:113;14150:19;;;14137:33;;13165:1037;-1:-1:-1;;13165:1037:113:o;14460:517::-;14565:6;14573;14581;14634:3;14622:9;14613:7;14609:23;14605:33;14602:53;;;14651:1;14648;14641:12;14602:53;14690:9;14677:23;14709:31;14734:5;14709:31;:::i;:::-;14759:5;-1:-1:-1;14783:63:113;14838:7;14833:2;14818:18;;14783:63;:::i;:::-;14773:73;;14898:3;14887:9;14883:19;14870:33;14912;14937:7;14912:33;:::i;:::-;14964:7;14954:17;;;14460:517;;;;;:::o;14982:380::-;15061:1;15057:12;;;;15104;;;15125:61;;15179:4;15171:6;15167:17;15157:27;;15125:61;15232:2;15224:6;15221:14;15201:18;15198:38;15195:161;;15278:10;15273:3;15269:20;15266:1;15259:31;15313:4;15310:1;15303:15;15341:4;15338:1;15331:15;15718:127;15779:10;15774:3;15770:20;15767:1;15760:31;15810:4;15807:1;15800:15;15834:4;15831:1;15824:15;15850:128;15917:9;;;15938:11;;;15935:37;;;15952:18;;:::i;16265:213::-;16300:3;16348:5;16344:2;16333:21;16382:34;16378:39;16369:7;16366:52;16363:78;;16421:18;;:::i;:::-;16461:1;16457:15;;16265:213;-1:-1:-1;;16265:213:113:o;16483:273::-;16539:6;16592:2;16580:9;16571:7;16567:23;16563:32;16560:52;;;16608:1;16605;16598:12;16560:52;16647:9;16634:23;16700:5;16693:13;16686:21;16679:5;16676:32;16666:60;;16722:1;16719;16712:12;16761:136;16796:3;-1:-1:-1;;;16817:22:113;;16814:48;;16842:18;;:::i;:::-;-1:-1:-1;16882:1:113;16878:13;;16761:136::o;16902:217::-;16942:1;16968;16958:132;;17012:10;17007:3;17003:20;17000:1;16993:31;17047:4;17044:1;17037:15;17075:4;17072:1;17065:15;16958:132;-1:-1:-1;17104:9:113;;16902:217::o;19386:1083::-;19516:3;19545:1;19578:6;19572:13;19608:1;19635:9;19632:1;19628:17;19618:27;;19695:1;19684:9;19680:17;19716:18;19706:61;;19760:4;19752:6;19748:17;19738:27;;19706:61;19813:2;19805:6;19802:14;19782:18;19779:38;19776:161;;19859:10;19854:3;19850:20;19847:1;19840:31;19894:4;19891:1;19884:15;19922:4;19919:1;19912:15;19776:161;19953:18;19980:133;;;;20127:1;20122:322;;;;19946:498;;19980:133;-1:-1:-1;;20013:24:113;;20001:37;;20086:14;;20079:22;20067:35;;20058:45;;;-1:-1:-1;19980:133:113;;20122:322;19333:1;19326:14;;;19370:4;19357:18;;20220:1;20234:164;20248:6;20245:1;20242:13;20234:164;;;20326:14;;20313:11;;;20306:35;20382:1;20369:15;;;;20270:2;20263:10;20234:164;;;20238:3;;20427:6;20422:3;20418:16;20411:23;;19946:498;-1:-1:-1;20460:3:113;;19386:1083;-1:-1:-1;;;;;;19386:1083:113:o;20991:271::-;21174:6;21166;21161:3;21148:33;21130:3;21200:16;;21225:13;;;21200:16;20991:271;-1:-1:-1;20991:271:113:o;21676:125::-;21741:9;;;21762:10;;;21759:36;;;21775:18;;:::i",
        "linkReferences": {},
        "immutableReferences": {
            "43615": [
                {
                    "start": 665,
                    "length": 32
                }
            ],
            "43629": [
                {
                    "start": 2000,
                    "length": 32
                }
            ],
            "43631": [
                {
                    "start": 2053,
                    "length": 32
                }
            ],
            "59714": [
                {
                    "start": 1397,
                    "length": 32
                },
                {
                    "start": 2155,
                    "length": 32
                }
            ]
        }
    },
    "methodIdentifiers": {
        "DOMAIN_SEPARATOR()": "3644e515",
        "POINTS_FOR_REFERRAL()": "45865829",
        "afterAddLiquidity(address,(address,address,uint24,int24,address),(int24,int24,int256,bytes32),int256,int256,bytes)": "9f063efc",
        "afterDonate(address,(address,address,uint24,int24,address),uint256,uint256,bytes)": "e1b4af69",
        "afterInitialize(address,(address,address,uint24,int24,address),uint160,int24)": "6fe7e6eb",
        "afterRemoveLiquidity(address,(address,address,uint24,int24,address),(int24,int24,int256,bytes32),int256,int256,bytes)": "6c2bbe7e",
        "afterSwap(address,(address,address,uint24,int24,address),(bool,int256,uint160),int256,bytes)": "b47b2fb1",
        "allowance(address,address)": "dd62ed3e",
        "approve(address,uint256)": "095ea7b3",
        "balanceOf(address)": "70a08231",
        "beforeAddLiquidity(address,(address,address,uint24,int24,address),(int24,int24,int256,bytes32),bytes)": "259982e5",
        "beforeDonate(address,(address,address,uint24,int24,address),uint256,uint256,bytes)": "b6a8b0fa",
        "beforeInitialize(address,(address,address,uint24,int24,address),uint160)": "dc98354e",
        "beforeRemoveLiquidity(address,(address,address,uint24,int24,address),(int24,int24,int256,bytes32),bytes)": "21d0ee70",
        "beforeSwap(address,(address,address,uint24,int24,address),(bool,int256,uint160),bytes)": "575e24b4",
        "decimals()": "313ce567",
        "getHookData(address,address)": "1783e865",
        "getHookPermissions()": "c4e833ce",
        "name()": "06fdde03",
        "nonces(address)": "7ecebe00",
        "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": "d505accf",
        "poolManager()": "dc4c90d3",
        "referredBy(address)": "a90f8e9a",
        "symbol()": "95d89b41",
        "totalSupply()": "18160ddd",
        "transfer(address,uint256)": "a9059cbb",
        "transferFrom(address,address,uint256)": "23b872dd",
        "unlockCallback(bytes)": "91dd7346"
    },
    "rawMetadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract IPoolManager\",\"name\":\"_manager\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_symbol\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"HookNotImplemented\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidPool\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"LockFailure\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotPoolManager\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotSelf\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"POINTS_FOR_REFERRAL\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"Currency\",\"name\":\"currency0\",\"type\":\"address\"},{\"internalType\":\"Currency\",\"name\":\"currency1\",\"type\":\"address\"},{\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"},{\"internalType\":\"int24\",\"name\":\"tickSpacing\",\"type\":\"int24\"},{\"internalType\":\"contract IHooks\",\"name\":\"hooks\",\"type\":\"address\"}],\"internalType\":\"struct PoolKey\",\"name\":\"key\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"},{\"internalType\":\"int256\",\"name\":\"liquidityDelta\",\"type\":\"int256\"},{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"}],\"internalType\":\"struct IPoolManager.ModifyLiquidityParams\",\"name\":\"\",\"type\":\"tuple\"},{\"internalType\":\"BalanceDelta\",\"name\":\"delta\",\"type\":\"int256\"},{\"internalType\":\"BalanceDelta\",\"name\":\"delta1\",\"type\":\"int256\"},{\"internalType\":\"bytes\",\"name\":\"hookData\",\"type\":\"bytes\"}],\"name\":\"afterAddLiquidity\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"},{\"internalType\":\"BalanceDelta\",\"name\":\"\",\"type\":\"int256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"Currency\",\"name\":\"currency0\",\"type\":\"address\"},{\"internalType\":\"Currency\",\"name\":\"currency1\",\"type\":\"address\"},{\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"},{\"internalType\":\"int24\",\"name\":\"tickSpacing\",\"type\":\"int24\"},{\"internalType\":\"contract IHooks\",\"name\":\"hooks\",\"type\":\"address\"}],\"internalType\":\"struct PoolKey\",\"name\":\"\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"afterDonate\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"Currency\",\"name\":\"currency0\",\"type\":\"address\"},{\"internalType\":\"Currency\",\"name\":\"currency1\",\"type\":\"address\"},{\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"},{\"internalType\":\"int24\",\"name\":\"tickSpacing\",\"type\":\"int24\"},{\"internalType\":\"contract IHooks\",\"name\":\"hooks\",\"type\":\"address\"}],\"internalType\":\"struct PoolKey\",\"name\":\"\",\"type\":\"tuple\"},{\"internalType\":\"uint160\",\"name\":\"\",\"type\":\"uint160\"},{\"internalType\":\"int24\",\"name\":\"\",\"type\":\"int24\"}],\"name\":\"afterInitialize\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"Currency\",\"name\":\"currency0\",\"type\":\"address\"},{\"internalType\":\"Currency\",\"name\":\"currency1\",\"type\":\"address\"},{\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"},{\"internalType\":\"int24\",\"name\":\"tickSpacing\",\"type\":\"int24\"},{\"internalType\":\"contract IHooks\",\"name\":\"hooks\",\"type\":\"address\"}],\"internalType\":\"struct PoolKey\",\"name\":\"\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"},{\"internalType\":\"int256\",\"name\":\"liquidityDelta\",\"type\":\"int256\"},{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"}],\"internalType\":\"struct IPoolManager.ModifyLiquidityParams\",\"name\":\"\",\"type\":\"tuple\"},{\"internalType\":\"BalanceDelta\",\"name\":\"\",\"type\":\"int256\"},{\"internalType\":\"BalanceDelta\",\"name\":\"\",\"type\":\"int256\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"afterRemoveLiquidity\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"},{\"internalType\":\"BalanceDelta\",\"name\":\"\",\"type\":\"int256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"Currency\",\"name\":\"currency0\",\"type\":\"address\"},{\"internalType\":\"Currency\",\"name\":\"currency1\",\"type\":\"address\"},{\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"},{\"internalType\":\"int24\",\"name\":\"tickSpacing\",\"type\":\"int24\"},{\"internalType\":\"contract IHooks\",\"name\":\"hooks\",\"type\":\"address\"}],\"internalType\":\"struct PoolKey\",\"name\":\"key\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"bool\",\"name\":\"zeroForOne\",\"type\":\"bool\"},{\"internalType\":\"int256\",\"name\":\"amountSpecified\",\"type\":\"int256\"},{\"internalType\":\"uint160\",\"name\":\"sqrtPriceLimitX96\",\"type\":\"uint160\"}],\"internalType\":\"struct IPoolManager.SwapParams\",\"name\":\"swapParams\",\"type\":\"tuple\"},{\"internalType\":\"BalanceDelta\",\"name\":\"delta\",\"type\":\"int256\"},{\"internalType\":\"bytes\",\"name\":\"hookData\",\"type\":\"bytes\"}],\"name\":\"afterSwap\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"},{\"internalType\":\"int128\",\"name\":\"\",\"type\":\"int128\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"Currency\",\"name\":\"currency0\",\"type\":\"address\"},{\"internalType\":\"Currency\",\"name\":\"currency1\",\"type\":\"address\"},{\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"},{\"internalType\":\"int24\",\"name\":\"tickSpacing\",\"type\":\"int24\"},{\"internalType\":\"contract IHooks\",\"name\":\"hooks\",\"type\":\"address\"}],\"internalType\":\"struct PoolKey\",\"name\":\"\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"},{\"internalType\":\"int256\",\"name\":\"liquidityDelta\",\"type\":\"int256\"},{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"}],\"internalType\":\"struct IPoolManager.ModifyLiquidityParams\",\"name\":\"\",\"type\":\"tuple\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"beforeAddLiquidity\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"Currency\",\"name\":\"currency0\",\"type\":\"address\"},{\"internalType\":\"Currency\",\"name\":\"currency1\",\"type\":\"address\"},{\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"},{\"internalType\":\"int24\",\"name\":\"tickSpacing\",\"type\":\"int24\"},{\"internalType\":\"contract IHooks\",\"name\":\"hooks\",\"type\":\"address\"}],\"internalType\":\"struct PoolKey\",\"name\":\"\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"beforeDonate\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"Currency\",\"name\":\"currency0\",\"type\":\"address\"},{\"internalType\":\"Currency\",\"name\":\"currency1\",\"type\":\"address\"},{\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"},{\"internalType\":\"int24\",\"name\":\"tickSpacing\",\"type\":\"int24\"},{\"internalType\":\"contract IHooks\",\"name\":\"hooks\",\"type\":\"address\"}],\"internalType\":\"struct PoolKey\",\"name\":\"\",\"type\":\"tuple\"},{\"internalType\":\"uint160\",\"name\":\"\",\"type\":\"uint160\"}],\"name\":\"beforeInitialize\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"Currency\",\"name\":\"currency0\",\"type\":\"address\"},{\"internalType\":\"Currency\",\"name\":\"currency1\",\"type\":\"address\"},{\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"},{\"internalType\":\"int24\",\"name\":\"tickSpacing\",\"type\":\"int24\"},{\"internalType\":\"contract IHooks\",\"name\":\"hooks\",\"type\":\"address\"}],\"internalType\":\"struct PoolKey\",\"name\":\"\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"},{\"internalType\":\"int256\",\"name\":\"liquidityDelta\",\"type\":\"int256\"},{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"}],\"internalType\":\"struct IPoolManager.ModifyLiquidityParams\",\"name\":\"\",\"type\":\"tuple\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"beforeRemoveLiquidity\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"Currency\",\"name\":\"currency0\",\"type\":\"address\"},{\"internalType\":\"Currency\",\"name\":\"currency1\",\"type\":\"address\"},{\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"},{\"internalType\":\"int24\",\"name\":\"tickSpacing\",\"type\":\"int24\"},{\"internalType\":\"contract IHooks\",\"name\":\"hooks\",\"type\":\"address\"}],\"internalType\":\"struct PoolKey\",\"name\":\"\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"bool\",\"name\":\"zeroForOne\",\"type\":\"bool\"},{\"internalType\":\"int256\",\"name\":\"amountSpecified\",\"type\":\"int256\"},{\"internalType\":\"uint160\",\"name\":\"sqrtPriceLimitX96\",\"type\":\"uint160\"}],\"internalType\":\"struct IPoolManager.SwapParams\",\"name\":\"\",\"type\":\"tuple\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"beforeSwap\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"},{\"internalType\":\"BeforeSwapDelta\",\"name\":\"\",\"type\":\"int256\"},{\"internalType\":\"uint24\",\"name\":\"\",\"type\":\"uint24\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"referrer\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"referree\",\"type\":\"address\"}],\"name\":\"getHookData\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getHookPermissions\",\"outputs\":[{\"components\":[{\"internalType\":\"bool\",\"name\":\"beforeInitialize\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"afterInitialize\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"beforeAddLiquidity\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"afterAddLiquidity\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"beforeRemoveLiquidity\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"afterRemoveLiquidity\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"beforeSwap\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"afterSwap\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"beforeDonate\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"afterDonate\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"beforeSwapReturnDelta\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"afterSwapReturnDelta\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"afterAddLiquidityReturnDelta\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"afterRemoveLiquidityReturnDelta\",\"type\":\"bool\"}],\"internalType\":\"struct Hooks.Permissions\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"poolManager\",\"outputs\":[{\"internalType\":\"contract IPoolManager\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"referredBy\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"unlockCallback\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"afterDonate(address,(address,address,uint24,int24,address),uint256,uint256,bytes)\":{\"params\":{\"amount0\":\"The amount of token0 being donated\",\"amount1\":\"The amount of token1 being donated\",\"hookData\":\"Arbitrary data handed into the PoolManager by the donor to be be passed on to the hook\",\"key\":\"The key for the pool\",\"sender\":\"The initial msg.sender for the donate call\"},\"returns\":{\"_0\":\"bytes4 The function selector for the hook\"}},\"afterInitialize(address,(address,address,uint24,int24,address),uint160,int24)\":{\"params\":{\"key\":\"The key for the pool being initialized\",\"sender\":\"The initial msg.sender for the initialize call\",\"sqrtPriceX96\":\"The sqrt(price) of the pool as a Q64.96\",\"tick\":\"The current tick after the state of a pool is initialized\"},\"returns\":{\"_0\":\"bytes4 The function selector for the hook\"}},\"afterRemoveLiquidity(address,(address,address,uint24,int24,address),(int24,int24,int256,bytes32),int256,int256,bytes)\":{\"params\":{\"delta\":\"The caller's balance delta after adding liquidity; the sum of principal delta, fees accrued, and hook delta\",\"feesAccrued\":\"The fees accrued since the last time fees were collected from this position\",\"hookData\":\"Arbitrary data handed into the PoolManager by the liquidity provider to be be passed on to the hook\",\"key\":\"The key for the pool\",\"params\":\"The parameters for removing liquidity\",\"sender\":\"The initial msg.sender for the remove liquidity call\"},\"returns\":{\"_0\":\"bytes4 The function selector for the hook\",\"_1\":\"BalanceDelta The hook's delta in token0 and token1. Positive: the hook is owed/took currency, negative: the hook owes/sent currency\"}},\"beforeAddLiquidity(address,(address,address,uint24,int24,address),(int24,int24,int256,bytes32),bytes)\":{\"params\":{\"hookData\":\"Arbitrary data handed into the PoolManager by the liquidity provider to be passed on to the hook\",\"key\":\"The key for the pool\",\"params\":\"The parameters for adding liquidity\",\"sender\":\"The initial msg.sender for the add liquidity call\"},\"returns\":{\"_0\":\"bytes4 The function selector for the hook\"}},\"beforeDonate(address,(address,address,uint24,int24,address),uint256,uint256,bytes)\":{\"params\":{\"amount0\":\"The amount of token0 being donated\",\"amount1\":\"The amount of token1 being donated\",\"hookData\":\"Arbitrary data handed into the PoolManager by the donor to be be passed on to the hook\",\"key\":\"The key for the pool\",\"sender\":\"The initial msg.sender for the donate call\"},\"returns\":{\"_0\":\"bytes4 The function selector for the hook\"}},\"beforeInitialize(address,(address,address,uint24,int24,address),uint160)\":{\"params\":{\"key\":\"The key for the pool being initialized\",\"sender\":\"The initial msg.sender for the initialize call\",\"sqrtPriceX96\":\"The sqrt(price) of the pool as a Q64.96\"},\"returns\":{\"_0\":\"bytes4 The function selector for the hook\"}},\"beforeRemoveLiquidity(address,(address,address,uint24,int24,address),(int24,int24,int256,bytes32),bytes)\":{\"params\":{\"hookData\":\"Arbitrary data handed into the PoolManager by the liquidity provider to be be passed on to the hook\",\"key\":\"The key for the pool\",\"params\":\"The parameters for removing liquidity\",\"sender\":\"The initial msg.sender for the remove liquidity call\"},\"returns\":{\"_0\":\"bytes4 The function selector for the hook\"}},\"beforeSwap(address,(address,address,uint24,int24,address),(bool,int256,uint160),bytes)\":{\"params\":{\"hookData\":\"Arbitrary data handed into the PoolManager by the swapper to be be passed on to the hook\",\"key\":\"The key for the pool\",\"params\":\"The parameters for the swap\",\"sender\":\"The initial msg.sender for the swap call\"},\"returns\":{\"_0\":\"bytes4 The function selector for the hook\",\"_1\":\"BeforeSwapDelta The hook's delta in specified and unspecified currencies. Positive: the hook is owed/took currency, negative: the hook owes/sent currency\",\"_2\":\"uint24 Optionally override the lp fee, only used if three conditions are met: 1. the Pool has a dynamic fee, 2. the value's 2nd highest bit is set (23rd bit, 0x400000), and 3. the value is less than or equal to the maximum fee (1 million)\"}},\"getHookPermissions()\":{\"details\":\"Used at deployment to validate the address correctly represents the expected permissions\"},\"unlockCallback(bytes)\":{\"details\":\"We force the onlyPoolManager modifier by exposing a virtual function after the onlyPoolManager check.\",\"params\":{\"data\":\"The data that was passed to the call to unlock\"},\"returns\":{\"_0\":\"Any data that you want to be returned from the unlock call\"}}},\"version\":1},\"userdoc\":{\"errors\":{\"NotPoolManager()\":[{\"notice\":\"Thrown when calling unlockCallback where the caller is not PoolManager\"}]},\"kind\":\"user\",\"methods\":{\"afterDonate(address,(address,address,uint24,int24,address),uint256,uint256,bytes)\":{\"notice\":\"The hook called after donate\"},\"afterInitialize(address,(address,address,uint24,int24,address),uint160,int24)\":{\"notice\":\"The hook called after the state of a pool is initialized\"},\"afterRemoveLiquidity(address,(address,address,uint24,int24,address),(int24,int24,int256,bytes32),int256,int256,bytes)\":{\"notice\":\"The hook called after liquidity is removed\"},\"beforeAddLiquidity(address,(address,address,uint24,int24,address),(int24,int24,int256,bytes32),bytes)\":{\"notice\":\"The hook called before liquidity is added\"},\"beforeDonate(address,(address,address,uint24,int24,address),uint256,uint256,bytes)\":{\"notice\":\"The hook called before donate\"},\"beforeInitialize(address,(address,address,uint24,int24,address),uint160)\":{\"notice\":\"The hook called before the state of a pool is initialized\"},\"beforeRemoveLiquidity(address,(address,address,uint24,int24,address),(int24,int24,int256,bytes32),bytes)\":{\"notice\":\"The hook called before liquidity is removed\"},\"beforeSwap(address,(address,address,uint24,int24,address),(bool,int256,uint160),bytes)\":{\"notice\":\"The hook called before a swap\"},\"getHookPermissions()\":{\"notice\":\"Returns a struct of permissions to signal which hook functions are to be implemented\"},\"poolManager()\":{\"notice\":\"The Uniswap v4 PoolManager contract\"},\"unlockCallback(bytes)\":{\"notice\":\"Called by the pool manager on `msg.sender` when the manager is unlocked\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/PointsHook.sol\":\"PointsHook\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":800},\"remappings\":[\":@ensdomains/=lib/v4-periphery/lib/v4-core/node_modules/@ensdomains/\",\":@openzeppelin/=lib/v4-periphery/lib/v4-core/lib/openzeppelin-contracts/\",\":@openzeppelin/contracts/=lib/v4-periphery/lib/v4-core/lib/openzeppelin-contracts/contracts/\",\":@uniswap/v4-core/=lib/v4-periphery/lib/v4-core/\",\":ds-test/=lib/v4-periphery/lib/v4-core/lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/v4-periphery/lib/v4-core/lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-gas-snapshot/=lib/v4-periphery/lib/v4-core/lib/forge-gas-snapshot/src/\",\":forge-std/=lib/forge-std/src/\",\":hardhat/=lib/v4-periphery/lib/v4-core/node_modules/hardhat/\",\":openzeppelin-contracts/=lib/v4-periphery/lib/v4-core/lib/openzeppelin-contracts/\",\":permit2/=lib/v4-periphery/lib/permit2/\",\":solmate/=lib/v4-periphery/lib/v4-core/lib/solmate/\",\":v4-core/=lib/v4-periphery/lib/v4-core/src/\",\":v4-periphery/=lib/v4-periphery/\"]},\"sources\":{\"lib/v4-periphery/lib/v4-core/lib/solmate/src/tokens/ERC20.sol\":{\"keccak256\":\"0xcdfd8db76b2a3415620e4d18cc5545f3d50de792dbf2c3dd5adb40cbe6f94b10\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://57b3ab70cde374af1cf2c9888636e8de6cf660f087b1c9abd805e9271e19fa35\",\"dweb:/ipfs/QmNrLDBAHYFjpjSd12jerm1AdBkDqEYUUaXgnT854BUZ97\"]},\"lib/v4-periphery/lib/v4-core/src/interfaces/IExtsload.sol\":{\"keccak256\":\"0x80b53ca4907d6f0088c3b931f2b72cad1dc4615a95094d96bd0fb8dff8d5ba43\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://375c69148622aab7a3537d5fd37d373a8e9731022c8d87bdaee46233b0a99fe1\",\"dweb:/ipfs/QmXFjdoYRxsA5B1kyuxEXgNf3FBoL1zPvy26Qy8EtpdFRN\"]},\"lib/v4-periphery/lib/v4-core/src/interfaces/IExttload.sol\":{\"keccak256\":\"0xc6b68283ebd8d1c789df536756726eed51c589134bb20821b236a0d22a135937\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://294394f72dfc219689209f4130d85601dfd0d63c8d47578050d312db70f9b6c8\",\"dweb:/ipfs/QmTDMQ3oxCGHgEBU48a3Lp4S1rRjc8vVCxkhE5ZNej1bsY\"]},\"lib/v4-periphery/lib/v4-core/src/interfaces/IHooks.sol\":{\"keccak256\":\"0x556e093b73b1002371eb3cbc1f182e7ca948def61c321d2d566bdca7ab257697\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3af364d5189171800768f7a7b9c47d6714fe8e0532ac755ed1e22c91c17dabea\",\"dweb:/ipfs/QmX6kqyyRrHWZSg55PSnY8U5FAnMMhGA7Jwmj5uHGAcxcL\"]},\"lib/v4-periphery/lib/v4-core/src/interfaces/IPoolManager.sol\":{\"keccak256\":\"0xd682b9f3a6c6908c252a6bea95b7cf6631395dc6cff427e16af97210aedba854\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e52c885e336ddafcb3deea6cafafd0c5a469affa2013741cd021a87f8cf9f25e\",\"dweb:/ipfs/QmaAz8rqdpUY7hhN55Gwr5cF1fH7ZrNuVzXaEqqdzHCKGS\"]},\"lib/v4-periphery/lib/v4-core/src/interfaces/IProtocolFeeController.sol\":{\"keccak256\":\"0xc2d7f3605da9767e36cf25d4d4fa9b95663a6659e26ce28cf29b8b88acb79a4c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c7a43cda35b8a9254ed3e46cfd8649361f09121d17ef554bd3d190b9a8d57cc6\",\"dweb:/ipfs/QmRBDQoqCWddH5hY1JdxMyYtY8jMZhWAwtuFJBc3r8V31G\"]},\"lib/v4-periphery/lib/v4-core/src/interfaces/IProtocolFees.sol\":{\"keccak256\":\"0x8fc7260b141b65a5c3dc70ab869dce5725f1677075d2a51df293825170495c29\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ed86c9fe65d6bc88dec37bdb56338a5da3ead74bfa71b106f7c484d3f860e0a7\",\"dweb:/ipfs/QmQAx3YCg5JiCuz9kXyuqe1Y5B4zqiq5zgn5cKLhoK5Qrk\"]},\"lib/v4-periphery/lib/v4-core/src/interfaces/callback/IUnlockCallback.sol\":{\"keccak256\":\"0x58c82f2bd9d7c097ed09bd0991fedc403b0ec270eb3d0158bfb095c06a03d719\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://91168ca26a10980df2cdc3fbfe8ddf372c002b7ef19e3c59a0c9870d64198f1b\",\"dweb:/ipfs/QmUSpaM825vd1SwvF38esgbdLgYiPwefKaFERTWvUi6uSK\"]},\"lib/v4-periphery/lib/v4-core/src/interfaces/external/IERC20Minimal.sol\":{\"keccak256\":\"0xc1c23330c1511ecfd45c67a683962b4e2555b82f1dacd40cc8b46ae5a6e250e7\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://5ce10b7970482a65f9e9a365b810eeb154a5d4a8229a26653028d84b9622a410\",\"dweb:/ipfs/QmTSwXxZ2FTkM5duBZgbpFs8SRVDR5NPAnW4YimeDhb1s8\"]},\"lib/v4-periphery/lib/v4-core/src/interfaces/external/IERC6909Claims.sol\":{\"keccak256\":\"0xa586f345739e52b0488a0fe40b6e375cce67fdd25758408b0efcb5133ad96a48\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e8c557b7e52abdbbd82e415a1acc27921446a7fd090b7d4877e52be72619547f\",\"dweb:/ipfs/QmXE2KNPbXmGX8BQF3ei6zhzRTnhoTQg39XmqMnkhbr6QK\"]},\"lib/v4-periphery/lib/v4-core/src/libraries/CustomRevert.sol\":{\"keccak256\":\"0x745ca9c258d00fae52f293af065471f1bc1099de1bea4ceb52e312240ac52895\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://71eee0aa4e395f2c7fce16760d6547c6a12a6fd3dc56b94f4d44480fed538495\",\"dweb:/ipfs/QmPfJBiHzeVe9sx3PZ27jWrzJqF9atvevpYBC9j3Ekz9TG\"]},\"lib/v4-periphery/lib/v4-core/src/libraries/Hooks.sol\":{\"keccak256\":\"0x8142e347f4e139fe3c7b2182fb7933ce937def49b32164e6429ad59291151424\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://88dcd7b3f6f383f3c40b21507f7d6d7ebf4b3fd24c78b2f09e2137b7e18a7565\",\"dweb:/ipfs/QmWGtUCEBwqXCkA4EKmt6KrKxRFXiMszQLSe8AKu4EC1Kn\"]},\"lib/v4-periphery/lib/v4-core/src/libraries/LPFeeLibrary.sol\":{\"keccak256\":\"0x9cb794c60d4c867732b20a6cd14b965bf3a63df1161eb3cd28e2c9d0447db46f\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://3d987ee5738f74c3fb091db503b44ad6651e4e47554623182e0ecbe696bd7382\",\"dweb:/ipfs/QmW7Rt5qjD4mmRnvYcT2Fj7VPzBm1eT9w15WUHtfWmKEPh\"]},\"lib/v4-periphery/lib/v4-core/src/libraries/ParseBytes.sol\":{\"keccak256\":\"0xf0795198d1e651b0b33fd1708d80a14f501bb2a1486905676d35f364e880f579\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://5aea527fcec51d7274f0c189dc2479a6aa708fc91857187a4d7db46bb1d6c7a8\",\"dweb:/ipfs/QmUTrwTPSZ7EHBaTyfAA78rZVP17iQzmAmvDcQ8GhDRAEf\"]},\"lib/v4-periphery/lib/v4-core/src/libraries/SafeCast.sol\":{\"keccak256\":\"0x8060d21c4d54a431113f9a594b860e6a9bf1f346d0c7c02dfafe9847dd8a0591\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://e7f71b73d82965d1d949f388060f6f0daab7cd14718e260682918ec6fa0253b9\",\"dweb:/ipfs/QmP85jtFrCeV6Y8zuJfrrgiMy1shX3tHWs2wX7DMAB7Lft\"]},\"lib/v4-periphery/lib/v4-core/src/types/BalanceDelta.sol\":{\"keccak256\":\"0xa719c8fe51e0a9524280178f19f6851bcc3b3b60e73618f3d60905d35ae5569f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7436928dc9de35c6c7c5c636cb51adaf295cfd590da83b19a004ae33cbec9ef9\",\"dweb:/ipfs/QmRJ9yZkUpzk4433GX3LgVVL8jwpbSYSUwXcucKisf3v4H\"]},\"lib/v4-periphery/lib/v4-core/src/types/BeforeSwapDelta.sol\":{\"keccak256\":\"0x2a774312d91285313d569da1a718c909655da5432310417692097a1d4dc83a78\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a2c7a0379955cff9c17ab9e61f95e42909aa5947c22740f86ce940d09856f782\",\"dweb:/ipfs/QmaAuo8UBYXsGrVuKh8iRoAAdqwtg1jDq515cW1ZRP5m9K\"]},\"lib/v4-periphery/lib/v4-core/src/types/Currency.sol\":{\"keccak256\":\"0x35c74eae038ecfbbae48b0e13f2b9a43ac6d8da4847ffa0f1482e4e2d455ee74\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cadb54f9c89b6970583148e503a23c7b654aff1f3e6a0da57705c54e5b03b39f\",\"dweb:/ipfs/Qma3CKKwyzGwzHN4Z9HDJ4Q7J5VfbN594i8F2DTGWTMWcB\"]},\"lib/v4-periphery/lib/v4-core/src/types/PoolId.sol\":{\"keccak256\":\"0x308311916ea0f5c2fd878b6a2751eb223d170a69e33f601fae56dfe3c5d392af\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://669c2cd7ac17690b5d8831e0bda72822376c3a04b36afed6d31df4d75fe60918\",\"dweb:/ipfs/QmT6EpkxqU8VF3WsgrZ66F3s1cCQRffR95z1HDYZz7ph6y\"]},\"lib/v4-periphery/lib/v4-core/src/types/PoolKey.sol\":{\"keccak256\":\"0xf89856e0580d7a4856d3187a76858377ccee9d59702d230c338d84388221b786\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6f3118fa189025695c37fdf0bdd1190f085ad097484d3c88cf4c56d1db65f639\",\"dweb:/ipfs/QmamXpgtB8GV1CaFLvqefPWSoikLDhMk1yU4heBnVzU8gi\"]},\"lib/v4-periphery/src/base/ImmutableState.sol\":{\"keccak256\":\"0x12b175e4ed6d31da545e3b6c9930901568c99d153b1e51044d32e88f42b9b633\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://f4347899e0b3bfd66e8d79652b1a14a62a02d16bfece63a40c6efe0e5656c384\",\"dweb:/ipfs/QmSbbT8fefHstA72BqF7SDooDtmhs79dR8T6pWv8LxKU2L\"]},\"lib/v4-periphery/src/base/SafeCallback.sol\":{\"keccak256\":\"0x6284bd1d1fbe78a901e63dc70720e2bf19de6758347b050f8ba2b155e73325c5\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://3afb423a3c0f8b5f6436680ff3cde9247924d442a9720dc39b2b07a352607187\",\"dweb:/ipfs/QmaT5bMwiiqkp8KWUnHjWJz55Ah9vbpASzJagg9riHbpTf\"]},\"lib/v4-periphery/src/base/hooks/BaseHook.sol\":{\"keccak256\":\"0x734be8d61303f27e1dae3b54a0925c2c2458fa5858b4c303fa899aca39aea5cb\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://ad4d0f2c40953a5755a5ab9034675337a945411745a5d8595d9831a3de94a0a1\",\"dweb:/ipfs/QmZbGVJHoB7bnaAbKH1B47eQaJbQTXxz9PBvLgJsdiLMXC\"]},\"src/PointsHook.sol\":{\"keccak256\":\"0xead1b4c77367f411518120b72d59e7d8ebb8965aeb54235d61a2952c1c6f0cea\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a5ac085c3e9aeac62608812953d83407bbcb24745e6c7f1931e8c4cda2e2cd02\",\"dweb:/ipfs/QmdryALNuX8FK5D3iZ9wCKCBzSBEW2oUiVe3U7gXqSYzCt\"]}},\"version\":1}",
    "metadata": {
        "compiler": {
            "version": "0.8.26+commit.8a97fa7a"
        },
        "language": "Solidity",
        "output": {
            "abi": [
                {
                    "inputs": [
                        {
                            "internalType": "contract IPoolManager",
                            "name": "_manager",
                            "type": "address"
                        },
                        {
                            "internalType": "string",
                            "name": "_name",
                            "type": "string"
                        },
                        {
                            "internalType": "string",
                            "name": "_symbol",
                            "type": "string"
                        }
                    ],
                    "stateMutability": "nonpayable",
                    "type": "constructor"
                },
                {
                    "inputs": [],
                    "type": "error",
                    "name": "HookNotImplemented"
                },
                {
                    "inputs": [],
                    "type": "error",
                    "name": "InvalidPool"
                },
                {
                    "inputs": [],
                    "type": "error",
                    "name": "LockFailure"
                },
                {
                    "inputs": [],
                    "type": "error",
                    "name": "NotPoolManager"
                },
                {
                    "inputs": [],
                    "type": "error",
                    "name": "NotSelf"
                },
                {
                    "inputs": [
                        {
                            "internalType": "address",
                            "name": "owner",
                            "type": "address",
                            "indexed": true
                        },
                        {
                            "internalType": "address",
                            "name": "spender",
                            "type": "address",
                            "indexed": true
                        },
                        {
                            "internalType": "uint256",
                            "name": "amount",
                            "type": "uint256",
                            "indexed": false
                        }
                    ],
                    "type": "event",
                    "name": "Approval",
                    "anonymous": false
                },
                {
                    "inputs": [
                        {
                            "internalType": "address",
                            "name": "from",
                            "type": "address",
                            "indexed": true
                        },
                        {
                            "internalType": "address",
                            "name": "to",
                            "type": "address",
                            "indexed": true
                        },
                        {
                            "internalType": "uint256",
                            "name": "amount",
                            "type": "uint256",
                            "indexed": false
                        }
                    ],
                    "type": "event",
                    "name": "Transfer",
                    "anonymous": false
                },
                {
                    "inputs": [],
                    "stateMutability": "view",
                    "type": "function",
                    "name": "DOMAIN_SEPARATOR",
                    "outputs": [
                        {
                            "internalType": "bytes32",
                            "name": "",
                            "type": "bytes32"
                        }
                    ]
                },
                {
                    "inputs": [],
                    "stateMutability": "view",
                    "type": "function",
                    "name": "POINTS_FOR_REFERRAL",
                    "outputs": [
                        {
                            "internalType": "uint256",
                            "name": "",
                            "type": "uint256"
                        }
                    ]
                },
                {
                    "inputs": [
                        {
                            "internalType": "address",
                            "name": "",
                            "type": "address"
                        },
                        {
                            "internalType": "struct PoolKey",
                            "name": "key",
                            "type": "tuple",
                            "components": [
                                {
                                    "internalType": "Currency",
                                    "name": "currency0",
                                    "type": "address"
                                },
                                {
                                    "internalType": "Currency",
                                    "name": "currency1",
                                    "type": "address"
                                },
                                {
                                    "internalType": "uint24",
                                    "name": "fee",
                                    "type": "uint24"
                                },
                                {
                                    "internalType": "int24",
                                    "name": "tickSpacing",
                                    "type": "int24"
                                },
                                {
                                    "internalType": "contract IHooks",
                                    "name": "hooks",
                                    "type": "address"
                                }
                            ]
                        },
                        {
                            "internalType": "struct IPoolManager.ModifyLiquidityParams",
                            "name": "",
                            "type": "tuple",
                            "components": [
                                {
                                    "internalType": "int24",
                                    "name": "tickLower",
                                    "type": "int24"
                                },
                                {
                                    "internalType": "int24",
                                    "name": "tickUpper",
                                    "type": "int24"
                                },
                                {
                                    "internalType": "int256",
                                    "name": "liquidityDelta",
                                    "type": "int256"
                                },
                                {
                                    "internalType": "bytes32",
                                    "name": "salt",
                                    "type": "bytes32"
                                }
                            ]
                        },
                        {
                            "internalType": "BalanceDelta",
                            "name": "delta",
                            "type": "int256"
                        },
                        {
                            "internalType": "BalanceDelta",
                            "name": "delta1",
                            "type": "int256"
                        },
                        {
                            "internalType": "bytes",
                            "name": "hookData",
                            "type": "bytes"
                        }
                    ],
                    "stateMutability": "nonpayable",
                    "type": "function",
                    "name": "afterAddLiquidity",
                    "outputs": [
                        {
                            "internalType": "bytes4",
                            "name": "",
                            "type": "bytes4"
                        },
                        {
                            "internalType": "BalanceDelta",
                            "name": "",
                            "type": "int256"
                        }
                    ]
                },
                {
                    "inputs": [
                        {
                            "internalType": "address",
                            "name": "",
                            "type": "address"
                        },
                        {
                            "internalType": "struct PoolKey",
                            "name": "",
                            "type": "tuple",
                            "components": [
                                {
                                    "internalType": "Currency",
                                    "name": "currency0",
                                    "type": "address"
                                },
                                {
                                    "internalType": "Currency",
                                    "name": "currency1",
                                    "type": "address"
                                },
                                {
                                    "internalType": "uint24",
                                    "name": "fee",
                                    "type": "uint24"
                                },
                                {
                                    "internalType": "int24",
                                    "name": "tickSpacing",
                                    "type": "int24"
                                },
                                {
                                    "internalType": "contract IHooks",
                                    "name": "hooks",
                                    "type": "address"
                                }
                            ]
                        },
                        {
                            "internalType": "uint256",
                            "name": "",
                            "type": "uint256"
                        },
                        {
                            "internalType": "uint256",
                            "name": "",
                            "type": "uint256"
                        },
                        {
                            "internalType": "bytes",
                            "name": "",
                            "type": "bytes"
                        }
                    ],
                    "stateMutability": "nonpayable",
                    "type": "function",
                    "name": "afterDonate",
                    "outputs": [
                        {
                            "internalType": "bytes4",
                            "name": "",
                            "type": "bytes4"
                        }
                    ]
                },
                {
                    "inputs": [
                        {
                            "internalType": "address",
                            "name": "",
                            "type": "address"
                        },
                        {
                            "internalType": "struct PoolKey",
                            "name": "",
                            "type": "tuple",
                            "components": [
                                {
                                    "internalType": "Currency",
                                    "name": "currency0",
                                    "type": "address"
                                },
                                {
                                    "internalType": "Currency",
                                    "name": "currency1",
                                    "type": "address"
                                },
                                {
                                    "internalType": "uint24",
                                    "name": "fee",
                                    "type": "uint24"
                                },
                                {
                                    "internalType": "int24",
                                    "name": "tickSpacing",
                                    "type": "int24"
                                },
                                {
                                    "internalType": "contract IHooks",
                                    "name": "hooks",
                                    "type": "address"
                                }
                            ]
                        },
                        {
                            "internalType": "uint160",
                            "name": "",
                            "type": "uint160"
                        },
                        {
                            "internalType": "int24",
                            "name": "",
                            "type": "int24"
                        }
                    ],
                    "stateMutability": "nonpayable",
                    "type": "function",
                    "name": "afterInitialize",
                    "outputs": [
                        {
                            "internalType": "bytes4",
                            "name": "",
                            "type": "bytes4"
                        }
                    ]
                },
                {
                    "inputs": [
                        {
                            "internalType": "address",
                            "name": "",
                            "type": "address"
                        },
                        {
                            "internalType": "struct PoolKey",
                            "name": "",
                            "type": "tuple",
                            "components": [
                                {
                                    "internalType": "Currency",
                                    "name": "currency0",
                                    "type": "address"
                                },
                                {
                                    "internalType": "Currency",
                                    "name": "currency1",
                                    "type": "address"
                                },
                                {
                                    "internalType": "uint24",
                                    "name": "fee",
                                    "type": "uint24"
                                },
                                {
                                    "internalType": "int24",
                                    "name": "tickSpacing",
                                    "type": "int24"
                                },
                                {
                                    "internalType": "contract IHooks",
                                    "name": "hooks",
                                    "type": "address"
                                }
                            ]
                        },
                        {
                            "internalType": "struct IPoolManager.ModifyLiquidityParams",
                            "name": "",
                            "type": "tuple",
                            "components": [
                                {
                                    "internalType": "int24",
                                    "name": "tickLower",
                                    "type": "int24"
                                },
                                {
                                    "internalType": "int24",
                                    "name": "tickUpper",
                                    "type": "int24"
                                },
                                {
                                    "internalType": "int256",
                                    "name": "liquidityDelta",
                                    "type": "int256"
                                },
                                {
                                    "internalType": "bytes32",
                                    "name": "salt",
                                    "type": "bytes32"
                                }
                            ]
                        },
                        {
                            "internalType": "BalanceDelta",
                            "name": "",
                            "type": "int256"
                        },
                        {
                            "internalType": "BalanceDelta",
                            "name": "",
                            "type": "int256"
                        },
                        {
                            "internalType": "bytes",
                            "name": "",
                            "type": "bytes"
                        }
                    ],
                    "stateMutability": "nonpayable",
                    "type": "function",
                    "name": "afterRemoveLiquidity",
                    "outputs": [
                        {
                            "internalType": "bytes4",
                            "name": "",
                            "type": "bytes4"
                        },
                        {
                            "internalType": "BalanceDelta",
                            "name": "",
                            "type": "int256"
                        }
                    ]
                },
                {
                    "inputs": [
                        {
                            "internalType": "address",
                            "name": "",
                            "type": "address"
                        },
                        {
                            "internalType": "struct PoolKey",
                            "name": "key",
                            "type": "tuple",
                            "components": [
                                {
                                    "internalType": "Currency",
                                    "name": "currency0",
                                    "type": "address"
                                },
                                {
                                    "internalType": "Currency",
                                    "name": "currency1",
                                    "type": "address"
                                },
                                {
                                    "internalType": "uint24",
                                    "name": "fee",
                                    "type": "uint24"
                                },
                                {
                                    "internalType": "int24",
                                    "name": "tickSpacing",
                                    "type": "int24"
                                },
                                {
                                    "internalType": "contract IHooks",
                                    "name": "hooks",
                                    "type": "address"
                                }
                            ]
                        },
                        {
                            "internalType": "struct IPoolManager.SwapParams",
                            "name": "swapParams",
                            "type": "tuple",
                            "components": [
                                {
                                    "internalType": "bool",
                                    "name": "zeroForOne",
                                    "type": "bool"
                                },
                                {
                                    "internalType": "int256",
                                    "name": "amountSpecified",
                                    "type": "int256"
                                },
                                {
                                    "internalType": "uint160",
                                    "name": "sqrtPriceLimitX96",
                                    "type": "uint160"
                                }
                            ]
                        },
                        {
                            "internalType": "BalanceDelta",
                            "name": "delta",
                            "type": "int256"
                        },
                        {
                            "internalType": "bytes",
                            "name": "hookData",
                            "type": "bytes"
                        }
                    ],
                    "stateMutability": "nonpayable",
                    "type": "function",
                    "name": "afterSwap",
                    "outputs": [
                        {
                            "internalType": "bytes4",
                            "name": "",
                            "type": "bytes4"
                        },
                        {
                            "internalType": "int128",
                            "name": "",
                            "type": "int128"
                        }
                    ]
                },
                {
                    "inputs": [
                        {
                            "internalType": "address",
                            "name": "",
                            "type": "address"
                        },
                        {
                            "internalType": "address",
                            "name": "",
                            "type": "address"
                        }
                    ],
                    "stateMutability": "view",
                    "type": "function",
                    "name": "allowance",
                    "outputs": [
                        {
                            "internalType": "uint256",
                            "name": "",
                            "type": "uint256"
                        }
                    ]
                },
                {
                    "inputs": [
                        {
                            "internalType": "address",
                            "name": "spender",
                            "type": "address"
                        },
                        {
                            "internalType": "uint256",
                            "name": "amount",
                            "type": "uint256"
                        }
                    ],
                    "stateMutability": "nonpayable",
                    "type": "function",
                    "name": "approve",
                    "outputs": [
                        {
                            "internalType": "bool",
                            "name": "",
                            "type": "bool"
                        }
                    ]
                },
                {
                    "inputs": [
                        {
                            "internalType": "address",
                            "name": "",
                            "type": "address"
                        }
                    ],
                    "stateMutability": "view",
                    "type": "function",
                    "name": "balanceOf",
                    "outputs": [
                        {
                            "internalType": "uint256",
                            "name": "",
                            "type": "uint256"
                        }
                    ]
                },
                {
                    "inputs": [
                        {
                            "internalType": "address",
                            "name": "",
                            "type": "address"
                        },
                        {
                            "internalType": "struct PoolKey",
                            "name": "",
                            "type": "tuple",
                            "components": [
                                {
                                    "internalType": "Currency",
                                    "name": "currency0",
                                    "type": "address"
                                },
                                {
                                    "internalType": "Currency",
                                    "name": "currency1",
                                    "type": "address"
                                },
                                {
                                    "internalType": "uint24",
                                    "name": "fee",
                                    "type": "uint24"
                                },
                                {
                                    "internalType": "int24",
                                    "name": "tickSpacing",
                                    "type": "int24"
                                },
                                {
                                    "internalType": "contract IHooks",
                                    "name": "hooks",
                                    "type": "address"
                                }
                            ]
                        },
                        {
                            "internalType": "struct IPoolManager.ModifyLiquidityParams",
                            "name": "",
                            "type": "tuple",
                            "components": [
                                {
                                    "internalType": "int24",
                                    "name": "tickLower",
                                    "type": "int24"
                                },
                                {
                                    "internalType": "int24",
                                    "name": "tickUpper",
                                    "type": "int24"
                                },
                                {
                                    "internalType": "int256",
                                    "name": "liquidityDelta",
                                    "type": "int256"
                                },
                                {
                                    "internalType": "bytes32",
                                    "name": "salt",
                                    "type": "bytes32"
                                }
                            ]
                        },
                        {
                            "internalType": "bytes",
                            "name": "",
                            "type": "bytes"
                        }
                    ],
                    "stateMutability": "nonpayable",
                    "type": "function",
                    "name": "beforeAddLiquidity",
                    "outputs": [
                        {
                            "internalType": "bytes4",
                            "name": "",
                            "type": "bytes4"
                        }
                    ]
                },
                {
                    "inputs": [
                        {
                            "internalType": "address",
                            "name": "",
                            "type": "address"
                        },
                        {
                            "internalType": "struct PoolKey",
                            "name": "",
                            "type": "tuple",
                            "components": [
                                {
                                    "internalType": "Currency",
                                    "name": "currency0",
                                    "type": "address"
                                },
                                {
                                    "internalType": "Currency",
                                    "name": "currency1",
                                    "type": "address"
                                },
                                {
                                    "internalType": "uint24",
                                    "name": "fee",
                                    "type": "uint24"
                                },
                                {
                                    "internalType": "int24",
                                    "name": "tickSpacing",
                                    "type": "int24"
                                },
                                {
                                    "internalType": "contract IHooks",
                                    "name": "hooks",
                                    "type": "address"
                                }
                            ]
                        },
                        {
                            "internalType": "uint256",
                            "name": "",
                            "type": "uint256"
                        },
                        {
                            "internalType": "uint256",
                            "name": "",
                            "type": "uint256"
                        },
                        {
                            "internalType": "bytes",
                            "name": "",
                            "type": "bytes"
                        }
                    ],
                    "stateMutability": "nonpayable",
                    "type": "function",
                    "name": "beforeDonate",
                    "outputs": [
                        {
                            "internalType": "bytes4",
                            "name": "",
                            "type": "bytes4"
                        }
                    ]
                },
                {
                    "inputs": [
                        {
                            "internalType": "address",
                            "name": "",
                            "type": "address"
                        },
                        {
                            "internalType": "struct PoolKey",
                            "name": "",
                            "type": "tuple",
                            "components": [
                                {
                                    "internalType": "Currency",
                                    "name": "currency0",
                                    "type": "address"
                                },
                                {
                                    "internalType": "Currency",
                                    "name": "currency1",
                                    "type": "address"
                                },
                                {
                                    "internalType": "uint24",
                                    "name": "fee",
                                    "type": "uint24"
                                },
                                {
                                    "internalType": "int24",
                                    "name": "tickSpacing",
                                    "type": "int24"
                                },
                                {
                                    "internalType": "contract IHooks",
                                    "name": "hooks",
                                    "type": "address"
                                }
                            ]
                        },
                        {
                            "internalType": "uint160",
                            "name": "",
                            "type": "uint160"
                        }
                    ],
                    "stateMutability": "nonpayable",
                    "type": "function",
                    "name": "beforeInitialize",
                    "outputs": [
                        {
                            "internalType": "bytes4",
                            "name": "",
                            "type": "bytes4"
                        }
                    ]
                },
                {
                    "inputs": [
                        {
                            "internalType": "address",
                            "name": "",
                            "type": "address"
                        },
                        {
                            "internalType": "struct PoolKey",
                            "name": "",
                            "type": "tuple",
                            "components": [
                                {
                                    "internalType": "Currency",
                                    "name": "currency0",
                                    "type": "address"
                                },
                                {
                                    "internalType": "Currency",
                                    "name": "currency1",
                                    "type": "address"
                                },
                                {
                                    "internalType": "uint24",
                                    "name": "fee",
                                    "type": "uint24"
                                },
                                {
                                    "internalType": "int24",
                                    "name": "tickSpacing",
                                    "type": "int24"
                                },
                                {
                                    "internalType": "contract IHooks",
                                    "name": "hooks",
                                    "type": "address"
                                }
                            ]
                        },
                        {
                            "internalType": "struct IPoolManager.ModifyLiquidityParams",
                            "name": "",
                            "type": "tuple",
                            "components": [
                                {
                                    "internalType": "int24",
                                    "name": "tickLower",
                                    "type": "int24"
                                },
                                {
                                    "internalType": "int24",
                                    "name": "tickUpper",
                                    "type": "int24"
                                },
                                {
                                    "internalType": "int256",
                                    "name": "liquidityDelta",
                                    "type": "int256"
                                },
                                {
                                    "internalType": "bytes32",
                                    "name": "salt",
                                    "type": "bytes32"
                                }
                            ]
                        },
                        {
                            "internalType": "bytes",
                            "name": "",
                            "type": "bytes"
                        }
                    ],
                    "stateMutability": "nonpayable",
                    "type": "function",
                    "name": "beforeRemoveLiquidity",
                    "outputs": [
                        {
                            "internalType": "bytes4",
                            "name": "",
                            "type": "bytes4"
                        }
                    ]
                },
                {
                    "inputs": [
                        {
                            "internalType": "address",
                            "name": "",
                            "type": "address"
                        },
                        {
                            "internalType": "struct PoolKey",
                            "name": "",
                            "type": "tuple",
                            "components": [
                                {
                                    "internalType": "Currency",
                                    "name": "currency0",
                                    "type": "address"
                                },
                                {
                                    "internalType": "Currency",
                                    "name": "currency1",
                                    "type": "address"
                                },
                                {
                                    "internalType": "uint24",
                                    "name": "fee",
                                    "type": "uint24"
                                },
                                {
                                    "internalType": "int24",
                                    "name": "tickSpacing",
                                    "type": "int24"
                                },
                                {
                                    "internalType": "contract IHooks",
                                    "name": "hooks",
                                    "type": "address"
                                }
                            ]
                        },
                        {
                            "internalType": "struct IPoolManager.SwapParams",
                            "name": "",
                            "type": "tuple",
                            "components": [
                                {
                                    "internalType": "bool",
                                    "name": "zeroForOne",
                                    "type": "bool"
                                },
                                {
                                    "internalType": "int256",
                                    "name": "amountSpecified",
                                    "type": "int256"
                                },
                                {
                                    "internalType": "uint160",
                                    "name": "sqrtPriceLimitX96",
                                    "type": "uint160"
                                }
                            ]
                        },
                        {
                            "internalType": "bytes",
                            "name": "",
                            "type": "bytes"
                        }
                    ],
                    "stateMutability": "nonpayable",
                    "type": "function",
                    "name": "beforeSwap",
                    "outputs": [
                        {
                            "internalType": "bytes4",
                            "name": "",
                            "type": "bytes4"
                        },
                        {
                            "internalType": "BeforeSwapDelta",
                            "name": "",
                            "type": "int256"
                        },
                        {
                            "internalType": "uint24",
                            "name": "",
                            "type": "uint24"
                        }
                    ]
                },
                {
                    "inputs": [],
                    "stateMutability": "view",
                    "type": "function",
                    "name": "decimals",
                    "outputs": [
                        {
                            "internalType": "uint8",
                            "name": "",
                            "type": "uint8"
                        }
                    ]
                },
                {
                    "inputs": [
                        {
                            "internalType": "address",
                            "name": "referrer",
                            "type": "address"
                        },
                        {
                            "internalType": "address",
                            "name": "referree",
                            "type": "address"
                        }
                    ],
                    "stateMutability": "pure",
                    "type": "function",
                    "name": "getHookData",
                    "outputs": [
                        {
                            "internalType": "bytes",
                            "name": "",
                            "type": "bytes"
                        }
                    ]
                },
                {
                    "inputs": [],
                    "stateMutability": "pure",
                    "type": "function",
                    "name": "getHookPermissions",
                    "outputs": [
                        {
                            "internalType": "struct Hooks.Permissions",
                            "name": "",
                            "type": "tuple",
                            "components": [
                                {
                                    "internalType": "bool",
                                    "name": "beforeInitialize",
                                    "type": "bool"
                                },
                                {
                                    "internalType": "bool",
                                    "name": "afterInitialize",
                                    "type": "bool"
                                },
                                {
                                    "internalType": "bool",
                                    "name": "beforeAddLiquidity",
                                    "type": "bool"
                                },
                                {
                                    "internalType": "bool",
                                    "name": "afterAddLiquidity",
                                    "type": "bool"
                                },
                                {
                                    "internalType": "bool",
                                    "name": "beforeRemoveLiquidity",
                                    "type": "bool"
                                },
                                {
                                    "internalType": "bool",
                                    "name": "afterRemoveLiquidity",
                                    "type": "bool"
                                },
                                {
                                    "internalType": "bool",
                                    "name": "beforeSwap",
                                    "type": "bool"
                                },
                                {
                                    "internalType": "bool",
                                    "name": "afterSwap",
                                    "type": "bool"
                                },
                                {
                                    "internalType": "bool",
                                    "name": "beforeDonate",
                                    "type": "bool"
                                },
                                {
                                    "internalType": "bool",
                                    "name": "afterDonate",
                                    "type": "bool"
                                },
                                {
                                    "internalType": "bool",
                                    "name": "beforeSwapReturnDelta",
                                    "type": "bool"
                                },
                                {
                                    "internalType": "bool",
                                    "name": "afterSwapReturnDelta",
                                    "type": "bool"
                                },
                                {
                                    "internalType": "bool",
                                    "name": "afterAddLiquidityReturnDelta",
                                    "type": "bool"
                                },
                                {
                                    "internalType": "bool",
                                    "name": "afterRemoveLiquidityReturnDelta",
                                    "type": "bool"
                                }
                            ]
                        }
                    ]
                },
                {
                    "inputs": [],
                    "stateMutability": "view",
                    "type": "function",
                    "name": "name",
                    "outputs": [
                        {
                            "internalType": "string",
                            "name": "",
                            "type": "string"
                        }
                    ]
                },
                {
                    "inputs": [
                        {
                            "internalType": "address",
                            "name": "",
                            "type": "address"
                        }
                    ],
                    "stateMutability": "view",
                    "type": "function",
                    "name": "nonces",
                    "outputs": [
                        {
                            "internalType": "uint256",
                            "name": "",
                            "type": "uint256"
                        }
                    ]
                },
                {
                    "inputs": [
                        {
                            "internalType": "address",
                            "name": "owner",
                            "type": "address"
                        },
                        {
                            "internalType": "address",
                            "name": "spender",
                            "type": "address"
                        },
                        {
                            "internalType": "uint256",
                            "name": "value",
                            "type": "uint256"
                        },
                        {
                            "internalType": "uint256",
                            "name": "deadline",
                            "type": "uint256"
                        },
                        {
                            "internalType": "uint8",
                            "name": "v",
                            "type": "uint8"
                        },
                        {
                            "internalType": "bytes32",
                            "name": "r",
                            "type": "bytes32"
                        },
                        {
                            "internalType": "bytes32",
                            "name": "s",
                            "type": "bytes32"
                        }
                    ],
                    "stateMutability": "nonpayable",
                    "type": "function",
                    "name": "permit"
                },
                {
                    "inputs": [],
                    "stateMutability": "view",
                    "type": "function",
                    "name": "poolManager",
                    "outputs": [
                        {
                            "internalType": "contract IPoolManager",
                            "name": "",
                            "type": "address"
                        }
                    ]
                },
                {
                    "inputs": [
                        {
                            "internalType": "address",
                            "name": "",
                            "type": "address"
                        }
                    ],
                    "stateMutability": "view",
                    "type": "function",
                    "name": "referredBy",
                    "outputs": [
                        {
                            "internalType": "address",
                            "name": "",
                            "type": "address"
                        }
                    ]
                },
                {
                    "inputs": [],
                    "stateMutability": "view",
                    "type": "function",
                    "name": "symbol",
                    "outputs": [
                        {
                            "internalType": "string",
                            "name": "",
                            "type": "string"
                        }
                    ]
                },
                {
                    "inputs": [],
                    "stateMutability": "view",
                    "type": "function",
                    "name": "totalSupply",
                    "outputs": [
                        {
                            "internalType": "uint256",
                            "name": "",
                            "type": "uint256"
                        }
                    ]
                },
                {
                    "inputs": [
                        {
                            "internalType": "address",
                            "name": "to",
                            "type": "address"
                        },
                        {
                            "internalType": "uint256",
                            "name": "amount",
                            "type": "uint256"
                        }
                    ],
                    "stateMutability": "nonpayable",
                    "type": "function",
                    "name": "transfer",
                    "outputs": [
                        {
                            "internalType": "bool",
                            "name": "",
                            "type": "bool"
                        }
                    ]
                },
                {
                    "inputs": [
                        {
                            "internalType": "address",
                            "name": "from",
                            "type": "address"
                        },
                        {
                            "internalType": "address",
                            "name": "to",
                            "type": "address"
                        },
                        {
                            "internalType": "uint256",
                            "name": "amount",
                            "type": "uint256"
                        }
                    ],
                    "stateMutability": "nonpayable",
                    "type": "function",
                    "name": "transferFrom",
                    "outputs": [
                        {
                            "internalType": "bool",
                            "name": "",
                            "type": "bool"
                        }
                    ]
                },
                {
                    "inputs": [
                        {
                            "internalType": "bytes",
                            "name": "data",
                            "type": "bytes"
                        }
                    ],
                    "stateMutability": "nonpayable",
                    "type": "function",
                    "name": "unlockCallback",
                    "outputs": [
                        {
                            "internalType": "bytes",
                            "name": "",
                            "type": "bytes"
                        }
                    ]
                }
            ],
            "devdoc": {
                "kind": "dev",
                "methods": {
                    "afterDonate(address,(address,address,uint24,int24,address),uint256,uint256,bytes)": {
                        "params": {
                            "amount0": "The amount of token0 being donated",
                            "amount1": "The amount of token1 being donated",
                            "hookData": "Arbitrary data handed into the PoolManager by the donor to be be passed on to the hook",
                            "key": "The key for the pool",
                            "sender": "The initial msg.sender for the donate call"
                        },
                        "returns": {
                            "_0": "bytes4 The function selector for the hook"
                        }
                    },
                    "afterInitialize(address,(address,address,uint24,int24,address),uint160,int24)": {
                        "params": {
                            "key": "The key for the pool being initialized",
                            "sender": "The initial msg.sender for the initialize call",
                            "sqrtPriceX96": "The sqrt(price) of the pool as a Q64.96",
                            "tick": "The current tick after the state of a pool is initialized"
                        },
                        "returns": {
                            "_0": "bytes4 The function selector for the hook"
                        }
                    },
                    "afterRemoveLiquidity(address,(address,address,uint24,int24,address),(int24,int24,int256,bytes32),int256,int256,bytes)": {
                        "params": {
                            "delta": "The caller's balance delta after adding liquidity; the sum of principal delta, fees accrued, and hook delta",
                            "feesAccrued": "The fees accrued since the last time fees were collected from this position",
                            "hookData": "Arbitrary data handed into the PoolManager by the liquidity provider to be be passed on to the hook",
                            "key": "The key for the pool",
                            "params": "The parameters for removing liquidity",
                            "sender": "The initial msg.sender for the remove liquidity call"
                        },
                        "returns": {
                            "_0": "bytes4 The function selector for the hook",
                            "_1": "BalanceDelta The hook's delta in token0 and token1. Positive: the hook is owed/took currency, negative: the hook owes/sent currency"
                        }
                    },
                    "beforeAddLiquidity(address,(address,address,uint24,int24,address),(int24,int24,int256,bytes32),bytes)": {
                        "params": {
                            "hookData": "Arbitrary data handed into the PoolManager by the liquidity provider to be passed on to the hook",
                            "key": "The key for the pool",
                            "params": "The parameters for adding liquidity",
                            "sender": "The initial msg.sender for the add liquidity call"
                        },
                        "returns": {
                            "_0": "bytes4 The function selector for the hook"
                        }
                    },
                    "beforeDonate(address,(address,address,uint24,int24,address),uint256,uint256,bytes)": {
                        "params": {
                            "amount0": "The amount of token0 being donated",
                            "amount1": "The amount of token1 being donated",
                            "hookData": "Arbitrary data handed into the PoolManager by the donor to be be passed on to the hook",
                            "key": "The key for the pool",
                            "sender": "The initial msg.sender for the donate call"
                        },
                        "returns": {
                            "_0": "bytes4 The function selector for the hook"
                        }
                    },
                    "beforeInitialize(address,(address,address,uint24,int24,address),uint160)": {
                        "params": {
                            "key": "The key for the pool being initialized",
                            "sender": "The initial msg.sender for the initialize call",
                            "sqrtPriceX96": "The sqrt(price) of the pool as a Q64.96"
                        },
                        "returns": {
                            "_0": "bytes4 The function selector for the hook"
                        }
                    },
                    "beforeRemoveLiquidity(address,(address,address,uint24,int24,address),(int24,int24,int256,bytes32),bytes)": {
                        "params": {
                            "hookData": "Arbitrary data handed into the PoolManager by the liquidity provider to be be passed on to the hook",
                            "key": "The key for the pool",
                            "params": "The parameters for removing liquidity",
                            "sender": "The initial msg.sender for the remove liquidity call"
                        },
                        "returns": {
                            "_0": "bytes4 The function selector for the hook"
                        }
                    },
                    "beforeSwap(address,(address,address,uint24,int24,address),(bool,int256,uint160),bytes)": {
                        "params": {
                            "hookData": "Arbitrary data handed into the PoolManager by the swapper to be be passed on to the hook",
                            "key": "The key for the pool",
                            "params": "The parameters for the swap",
                            "sender": "The initial msg.sender for the swap call"
                        },
                        "returns": {
                            "_0": "bytes4 The function selector for the hook",
                            "_1": "BeforeSwapDelta The hook's delta in specified and unspecified currencies. Positive: the hook is owed/took currency, negative: the hook owes/sent currency",
                            "_2": "uint24 Optionally override the lp fee, only used if three conditions are met: 1. the Pool has a dynamic fee, 2. the value's 2nd highest bit is set (23rd bit, 0x400000), and 3. the value is less than or equal to the maximum fee (1 million)"
                        }
                    },
                    "getHookPermissions()": {
                        "details": "Used at deployment to validate the address correctly represents the expected permissions"
                    },
                    "unlockCallback(bytes)": {
                        "details": "We force the onlyPoolManager modifier by exposing a virtual function after the onlyPoolManager check.",
                        "params": {
                            "data": "The data that was passed to the call to unlock"
                        },
                        "returns": {
                            "_0": "Any data that you want to be returned from the unlock call"
                        }
                    }
                },
                "version": 1
            },
            "userdoc": {
                "kind": "user",
                "methods": {
                    "afterDonate(address,(address,address,uint24,int24,address),uint256,uint256,bytes)": {
                        "notice": "The hook called after donate"
                    },
                    "afterInitialize(address,(address,address,uint24,int24,address),uint160,int24)": {
                        "notice": "The hook called after the state of a pool is initialized"
                    },
                    "afterRemoveLiquidity(address,(address,address,uint24,int24,address),(int24,int24,int256,bytes32),int256,int256,bytes)": {
                        "notice": "The hook called after liquidity is removed"
                    },
                    "beforeAddLiquidity(address,(address,address,uint24,int24,address),(int24,int24,int256,bytes32),bytes)": {
                        "notice": "The hook called before liquidity is added"
                    },
                    "beforeDonate(address,(address,address,uint24,int24,address),uint256,uint256,bytes)": {
                        "notice": "The hook called before donate"
                    },
                    "beforeInitialize(address,(address,address,uint24,int24,address),uint160)": {
                        "notice": "The hook called before the state of a pool is initialized"
                    },
                    "beforeRemoveLiquidity(address,(address,address,uint24,int24,address),(int24,int24,int256,bytes32),bytes)": {
                        "notice": "The hook called before liquidity is removed"
                    },
                    "beforeSwap(address,(address,address,uint24,int24,address),(bool,int256,uint160),bytes)": {
                        "notice": "The hook called before a swap"
                    },
                    "getHookPermissions()": {
                        "notice": "Returns a struct of permissions to signal which hook functions are to be implemented"
                    },
                    "poolManager()": {
                        "notice": "The Uniswap v4 PoolManager contract"
                    },
                    "unlockCallback(bytes)": {
                        "notice": "Called by the pool manager on `msg.sender` when the manager is unlocked"
                    }
                },
                "version": 1
            }
        },
        "settings": {
            "remappings": [
                "@ensdomains/=lib/v4-periphery/lib/v4-core/node_modules/@ensdomains/",
                "@openzeppelin/=lib/v4-periphery/lib/v4-core/lib/openzeppelin-contracts/",
                "@openzeppelin/contracts/=lib/v4-periphery/lib/v4-core/lib/openzeppelin-contracts/contracts/",
                "@uniswap/v4-core/=lib/v4-periphery/lib/v4-core/",
                "ds-test/=lib/v4-periphery/lib/v4-core/lib/forge-std/lib/ds-test/src/",
                "erc4626-tests/=lib/v4-periphery/lib/v4-core/lib/openzeppelin-contracts/lib/erc4626-tests/",
                "forge-gas-snapshot/=lib/v4-periphery/lib/v4-core/lib/forge-gas-snapshot/src/",
                "forge-std/=lib/forge-std/src/",
                "hardhat/=lib/v4-periphery/lib/v4-core/node_modules/hardhat/",
                "openzeppelin-contracts/=lib/v4-periphery/lib/v4-core/lib/openzeppelin-contracts/",
                "permit2/=lib/v4-periphery/lib/permit2/",
                "solmate/=lib/v4-periphery/lib/v4-core/lib/solmate/",
                "v4-core/=lib/v4-periphery/lib/v4-core/src/",
                "v4-periphery/=lib/v4-periphery/"
            ],
            "optimizer": {
                "enabled": true,
                "runs": 800
            },
            "metadata": {
                "bytecodeHash": "ipfs"
            },
            "compilationTarget": {
                "src/PointsHook.sol": "PointsHook"
            },
            "evmVersion": "cancun",
            "libraries": {}
        },
        "sources": {
            "lib/v4-periphery/lib/v4-core/lib/solmate/src/tokens/ERC20.sol": {
                "keccak256": "0xcdfd8db76b2a3415620e4d18cc5545f3d50de792dbf2c3dd5adb40cbe6f94b10",
                "urls": [
                    "bzz-raw://57b3ab70cde374af1cf2c9888636e8de6cf660f087b1c9abd805e9271e19fa35",
                    "dweb:/ipfs/QmNrLDBAHYFjpjSd12jerm1AdBkDqEYUUaXgnT854BUZ97"
                ],
                "license": "AGPL-3.0-only"
            },
            "lib/v4-periphery/lib/v4-core/src/interfaces/IExtsload.sol": {
                "keccak256": "0x80b53ca4907d6f0088c3b931f2b72cad1dc4615a95094d96bd0fb8dff8d5ba43",
                "urls": [
                    "bzz-raw://375c69148622aab7a3537d5fd37d373a8e9731022c8d87bdaee46233b0a99fe1",
                    "dweb:/ipfs/QmXFjdoYRxsA5B1kyuxEXgNf3FBoL1zPvy26Qy8EtpdFRN"
                ],
                "license": "MIT"
            },
            "lib/v4-periphery/lib/v4-core/src/interfaces/IExttload.sol": {
                "keccak256": "0xc6b68283ebd8d1c789df536756726eed51c589134bb20821b236a0d22a135937",
                "urls": [
                    "bzz-raw://294394f72dfc219689209f4130d85601dfd0d63c8d47578050d312db70f9b6c8",
                    "dweb:/ipfs/QmTDMQ3oxCGHgEBU48a3Lp4S1rRjc8vVCxkhE5ZNej1bsY"
                ],
                "license": "MIT"
            },
            "lib/v4-periphery/lib/v4-core/src/interfaces/IHooks.sol": {
                "keccak256": "0x556e093b73b1002371eb3cbc1f182e7ca948def61c321d2d566bdca7ab257697",
                "urls": [
                    "bzz-raw://3af364d5189171800768f7a7b9c47d6714fe8e0532ac755ed1e22c91c17dabea",
                    "dweb:/ipfs/QmX6kqyyRrHWZSg55PSnY8U5FAnMMhGA7Jwmj5uHGAcxcL"
                ],
                "license": "MIT"
            },
            "lib/v4-periphery/lib/v4-core/src/interfaces/IPoolManager.sol": {
                "keccak256": "0xd682b9f3a6c6908c252a6bea95b7cf6631395dc6cff427e16af97210aedba854",
                "urls": [
                    "bzz-raw://e52c885e336ddafcb3deea6cafafd0c5a469affa2013741cd021a87f8cf9f25e",
                    "dweb:/ipfs/QmaAz8rqdpUY7hhN55Gwr5cF1fH7ZrNuVzXaEqqdzHCKGS"
                ],
                "license": "MIT"
            },
            "lib/v4-periphery/lib/v4-core/src/interfaces/IProtocolFeeController.sol": {
                "keccak256": "0xc2d7f3605da9767e36cf25d4d4fa9b95663a6659e26ce28cf29b8b88acb79a4c",
                "urls": [
                    "bzz-raw://c7a43cda35b8a9254ed3e46cfd8649361f09121d17ef554bd3d190b9a8d57cc6",
                    "dweb:/ipfs/QmRBDQoqCWddH5hY1JdxMyYtY8jMZhWAwtuFJBc3r8V31G"
                ],
                "license": "MIT"
            },
            "lib/v4-periphery/lib/v4-core/src/interfaces/IProtocolFees.sol": {
                "keccak256": "0x8fc7260b141b65a5c3dc70ab869dce5725f1677075d2a51df293825170495c29",
                "urls": [
                    "bzz-raw://ed86c9fe65d6bc88dec37bdb56338a5da3ead74bfa71b106f7c484d3f860e0a7",
                    "dweb:/ipfs/QmQAx3YCg5JiCuz9kXyuqe1Y5B4zqiq5zgn5cKLhoK5Qrk"
                ],
                "license": "MIT"
            },
            "lib/v4-periphery/lib/v4-core/src/interfaces/callback/IUnlockCallback.sol": {
                "keccak256": "0x58c82f2bd9d7c097ed09bd0991fedc403b0ec270eb3d0158bfb095c06a03d719",
                "urls": [
                    "bzz-raw://91168ca26a10980df2cdc3fbfe8ddf372c002b7ef19e3c59a0c9870d64198f1b",
                    "dweb:/ipfs/QmUSpaM825vd1SwvF38esgbdLgYiPwefKaFERTWvUi6uSK"
                ],
                "license": "MIT"
            },
            "lib/v4-periphery/lib/v4-core/src/interfaces/external/IERC20Minimal.sol": {
                "keccak256": "0xc1c23330c1511ecfd45c67a683962b4e2555b82f1dacd40cc8b46ae5a6e250e7",
                "urls": [
                    "bzz-raw://5ce10b7970482a65f9e9a365b810eeb154a5d4a8229a26653028d84b9622a410",
                    "dweb:/ipfs/QmTSwXxZ2FTkM5duBZgbpFs8SRVDR5NPAnW4YimeDhb1s8"
                ],
                "license": "GPL-2.0-or-later"
            },
            "lib/v4-periphery/lib/v4-core/src/interfaces/external/IERC6909Claims.sol": {
                "keccak256": "0xa586f345739e52b0488a0fe40b6e375cce67fdd25758408b0efcb5133ad96a48",
                "urls": [
                    "bzz-raw://e8c557b7e52abdbbd82e415a1acc27921446a7fd090b7d4877e52be72619547f",
                    "dweb:/ipfs/QmXE2KNPbXmGX8BQF3ei6zhzRTnhoTQg39XmqMnkhbr6QK"
                ],
                "license": "MIT"
            },
            "lib/v4-periphery/lib/v4-core/src/libraries/CustomRevert.sol": {
                "keccak256": "0x745ca9c258d00fae52f293af065471f1bc1099de1bea4ceb52e312240ac52895",
                "urls": [
                    "bzz-raw://71eee0aa4e395f2c7fce16760d6547c6a12a6fd3dc56b94f4d44480fed538495",
                    "dweb:/ipfs/QmPfJBiHzeVe9sx3PZ27jWrzJqF9atvevpYBC9j3Ekz9TG"
                ],
                "license": "MIT"
            },
            "lib/v4-periphery/lib/v4-core/src/libraries/Hooks.sol": {
                "keccak256": "0x8142e347f4e139fe3c7b2182fb7933ce937def49b32164e6429ad59291151424",
                "urls": [
                    "bzz-raw://88dcd7b3f6f383f3c40b21507f7d6d7ebf4b3fd24c78b2f09e2137b7e18a7565",
                    "dweb:/ipfs/QmWGtUCEBwqXCkA4EKmt6KrKxRFXiMszQLSe8AKu4EC1Kn"
                ],
                "license": "MIT"
            },
            "lib/v4-periphery/lib/v4-core/src/libraries/LPFeeLibrary.sol": {
                "keccak256": "0x9cb794c60d4c867732b20a6cd14b965bf3a63df1161eb3cd28e2c9d0447db46f",
                "urls": [
                    "bzz-raw://3d987ee5738f74c3fb091db503b44ad6651e4e47554623182e0ecbe696bd7382",
                    "dweb:/ipfs/QmW7Rt5qjD4mmRnvYcT2Fj7VPzBm1eT9w15WUHtfWmKEPh"
                ],
                "license": "GPL-2.0-or-later"
            },
            "lib/v4-periphery/lib/v4-core/src/libraries/ParseBytes.sol": {
                "keccak256": "0xf0795198d1e651b0b33fd1708d80a14f501bb2a1486905676d35f364e880f579",
                "urls": [
                    "bzz-raw://5aea527fcec51d7274f0c189dc2479a6aa708fc91857187a4d7db46bb1d6c7a8",
                    "dweb:/ipfs/QmUTrwTPSZ7EHBaTyfAA78rZVP17iQzmAmvDcQ8GhDRAEf"
                ],
                "license": "GPL-2.0-or-later"
            },
            "lib/v4-periphery/lib/v4-core/src/libraries/SafeCast.sol": {
                "keccak256": "0x8060d21c4d54a431113f9a594b860e6a9bf1f346d0c7c02dfafe9847dd8a0591",
                "urls": [
                    "bzz-raw://e7f71b73d82965d1d949f388060f6f0daab7cd14718e260682918ec6fa0253b9",
                    "dweb:/ipfs/QmP85jtFrCeV6Y8zuJfrrgiMy1shX3tHWs2wX7DMAB7Lft"
                ],
                "license": "GPL-2.0-or-later"
            },
            "lib/v4-periphery/lib/v4-core/src/types/BalanceDelta.sol": {
                "keccak256": "0xa719c8fe51e0a9524280178f19f6851bcc3b3b60e73618f3d60905d35ae5569f",
                "urls": [
                    "bzz-raw://7436928dc9de35c6c7c5c636cb51adaf295cfd590da83b19a004ae33cbec9ef9",
                    "dweb:/ipfs/QmRJ9yZkUpzk4433GX3LgVVL8jwpbSYSUwXcucKisf3v4H"
                ],
                "license": "MIT"
            },
            "lib/v4-periphery/lib/v4-core/src/types/BeforeSwapDelta.sol": {
                "keccak256": "0x2a774312d91285313d569da1a718c909655da5432310417692097a1d4dc83a78",
                "urls": [
                    "bzz-raw://a2c7a0379955cff9c17ab9e61f95e42909aa5947c22740f86ce940d09856f782",
                    "dweb:/ipfs/QmaAuo8UBYXsGrVuKh8iRoAAdqwtg1jDq515cW1ZRP5m9K"
                ],
                "license": "MIT"
            },
            "lib/v4-periphery/lib/v4-core/src/types/Currency.sol": {
                "keccak256": "0x35c74eae038ecfbbae48b0e13f2b9a43ac6d8da4847ffa0f1482e4e2d455ee74",
                "urls": [
                    "bzz-raw://cadb54f9c89b6970583148e503a23c7b654aff1f3e6a0da57705c54e5b03b39f",
                    "dweb:/ipfs/Qma3CKKwyzGwzHN4Z9HDJ4Q7J5VfbN594i8F2DTGWTMWcB"
                ],
                "license": "MIT"
            },
            "lib/v4-periphery/lib/v4-core/src/types/PoolId.sol": {
                "keccak256": "0x308311916ea0f5c2fd878b6a2751eb223d170a69e33f601fae56dfe3c5d392af",
                "urls": [
                    "bzz-raw://669c2cd7ac17690b5d8831e0bda72822376c3a04b36afed6d31df4d75fe60918",
                    "dweb:/ipfs/QmT6EpkxqU8VF3WsgrZ66F3s1cCQRffR95z1HDYZz7ph6y"
                ],
                "license": "MIT"
            },
            "lib/v4-periphery/lib/v4-core/src/types/PoolKey.sol": {
                "keccak256": "0xf89856e0580d7a4856d3187a76858377ccee9d59702d230c338d84388221b786",
                "urls": [
                    "bzz-raw://6f3118fa189025695c37fdf0bdd1190f085ad097484d3c88cf4c56d1db65f639",
                    "dweb:/ipfs/QmamXpgtB8GV1CaFLvqefPWSoikLDhMk1yU4heBnVzU8gi"
                ],
                "license": "MIT"
            },
            "lib/v4-periphery/src/base/ImmutableState.sol": {
                "keccak256": "0x12b175e4ed6d31da545e3b6c9930901568c99d153b1e51044d32e88f42b9b633",
                "urls": [
                    "bzz-raw://f4347899e0b3bfd66e8d79652b1a14a62a02d16bfece63a40c6efe0e5656c384",
                    "dweb:/ipfs/QmSbbT8fefHstA72BqF7SDooDtmhs79dR8T6pWv8LxKU2L"
                ],
                "license": "GPL-2.0-or-later"
            },
            "lib/v4-periphery/src/base/SafeCallback.sol": {
                "keccak256": "0x6284bd1d1fbe78a901e63dc70720e2bf19de6758347b050f8ba2b155e73325c5",
                "urls": [
                    "bzz-raw://3afb423a3c0f8b5f6436680ff3cde9247924d442a9720dc39b2b07a352607187",
                    "dweb:/ipfs/QmaT5bMwiiqkp8KWUnHjWJz55Ah9vbpASzJagg9riHbpTf"
                ],
                "license": "GPL-3.0-or-later"
            },
            "lib/v4-periphery/src/base/hooks/BaseHook.sol": {
                "keccak256": "0x734be8d61303f27e1dae3b54a0925c2c2458fa5858b4c303fa899aca39aea5cb",
                "urls": [
                    "bzz-raw://ad4d0f2c40953a5755a5ab9034675337a945411745a5d8595d9831a3de94a0a1",
                    "dweb:/ipfs/QmZbGVJHoB7bnaAbKH1B47eQaJbQTXxz9PBvLgJsdiLMXC"
                ],
                "license": "GPL-3.0-or-later"
            },
            "src/PointsHook.sol": {
                "keccak256": "0xead1b4c77367f411518120b72d59e7d8ebb8965aeb54235d61a2952c1c6f0cea",
                "urls": [
                    "bzz-raw://a5ac085c3e9aeac62608812953d83407bbcb24745e6c7f1931e8c4cda2e2cd02",
                    "dweb:/ipfs/QmdryALNuX8FK5D3iZ9wCKCBzSBEW2oUiVe3U7gXqSYzCt"
                ],
                "license": "MIT"
            }
        },
        "version": 1
    },
    "id": 108
}